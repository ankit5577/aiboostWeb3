{"id":"869b5369391b36e57957b5800fe9cfb2","_format":"hh-sol-build-info-1","solcVersion":"0.8.10","solcLongVersion":"0.8.10+commit.fc410830","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/Lottery.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract Lottery is Ownable {\n    using SafeMath for uint256;\n\n    address[] public players;\n    uint256 public entryFee = 0.1 ether;\n    address public winner;\n    uint256 public endTime;\n    address public manager;\n    uint256 public commissionBasisPoints = 500;\n\n    event WinnerDeclared(address winner, uint256 winningPrize);\n    event CommissionWithdrawn(uint256 amount);\n\n    enum LotteryStatus {\n        NOT_STARTED,\n        STARTED,\n        ENDED\n    }\n\n    LotteryStatus public lotteryStatus;\n\n    modifier onlyInStatus(LotteryStatus _status) {\n        require(lotteryStatus == _status, \"Invalid lottery status\");\n        _;\n    }\n\n    modifier nonReentrant() {\n        require(lotteryStatus == LotteryStatus.STARTED, \"Lottery not started\");\n        _;\n    }\n\n    /**\n     * @dev Constructor function to initialize the lottery contract.\n     */\n    constructor(address _manager) {\n        lotteryStatus = LotteryStatus.ENDED;\n        manager = _manager;\n    }\n\n    /**\n     * @dev Get the remaining time until the lottery ends.\n     * @return The remaining time in seconds.\n     */\n    function getRemainingTime() public view returns (uint256) {\n        if (lotteryStatus == LotteryStatus.STARTED) {\n            if (endTime <= block.timestamp) {\n                return 0;\n            }\n            return endTime - block.timestamp;\n        }\n        return 0;\n    }\n\n    /**\n     * @dev Get details of a all players.\n     * @return address[] containing players.\n     */\n    function getAllPlayers() external view returns (address[] memory) {\n        address[] memory _players = new address[](players.length);\n        for (uint256 i = 0; i < players.length; i++) {\n            _players[i] = players[i];\n        }\n        return _players;\n    }\n\n    /**\n     * @dev Start the lottery with a specified duration.\n     * @param _timeInMinutes The duration of the lottery in minutes.\n     */\n    function start(uint256 _timeInMinutes) public onlyOwner onlyInStatus(LotteryStatus.ENDED) {\n        require(_timeInMinutes > 0, \"Time duration must be greater than 0\");\n        lotteryStatus = LotteryStatus.STARTED;\n        endTime = block.timestamp.add(_timeInMinutes.mul(60));\n    }\n\n    /**\n     * @dev End the lottery and select a random winner.\n     */\n    function end() public onlyInStatus(LotteryStatus.STARTED) {\n        require(endTime <= block.timestamp, \"You cannot end the lottery before the time\");\n        require(players.length > 0, \"No participants\");\n        lotteryStatus = LotteryStatus.ENDED;\n\n        uint256 winnerIndex = uint256(keccak256(abi.encodePacked(block.difficulty, block.timestamp, players, msg.sender))) % players.length;\n        winner = players[winnerIndex];\n        uint256 prizeMoney = address(this).balance;\n        uint256 commission = (prizeMoney.mul(commissionBasisPoints)).div(10_000); // Calculate commission using basis points\n        uint256 remainingPrize = prizeMoney - commission;\n\n        payable(winner).transfer(remainingPrize);\n\n        delete players;\n\n        emit WinnerDeclared(winner, remainingPrize);\n        emit CommissionWithdrawn(commission);\n\n        // Send commission to owner\n        payable(owner()).transfer(commission);\n    }\n\n    /**\n     * @dev End the lottery if blocktime >= endTime\n     */\n    function closeIfEnded() public {\n        if (endTime <= block.timestamp && players.length > 0 && lotteryStatus == LotteryStatus.STARTED) {\n            end();\n        }\n    }\n\n    /**\n     * @dev Enter the lottery by sending an entry fee.\n     */\n    function enter() public payable nonReentrant {\n        require(msg.value >= entryFee, \"Entry fee is less\");\n        require(endTime > block.timestamp, \"Time is up.\");\n        require(!isParticipating(msg.sender), \"You are already a participant\");\n        players.push(msg.sender);\n\n        closeIfEnded();\n    }\n\n    /**\n     * @dev Check if a participant has already entered the lottery.\n     * @param _participant The participant's address to check.\n     * @return A boolean indicating whether the participant has entered.\n     */\n    function isParticipating(address _participant) private view returns (bool) {\n        for (uint256 i = 0; i < players.length; i++) {\n            if (players[i] == _participant) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @dev Allows the owner to withdraw any remaining funds after the lottery ends.\n     */\n    function withdrawRemainingFunds() public onlyOwner onlyInStatus(LotteryStatus.ENDED) {\n        uint256 remainingBalance = address(this).balance;\n        require(remainingBalance > 0, \"No remaining funds to withdraw\");\n        payable(owner()).transfer(remainingBalance);\n    }\n\n    /**\n     * @dev Change the entry fee for participating in the lottery.\n     * @param _newFee The new entry fee in wei.\n     */\n    function changeEntryFee(uint256 _newFee) public onlyOwner {\n        require(_newFee > 0, \"Entry fee must be greater than 0\");\n        entryFee = _newFee;\n    }\n\n    /**\n     * @dev Set the commission basis points.\n     * @param _basisPoints The new commission basis points.\n     */\n    function setCommissionBasisPoints(uint256 _basisPoints) public onlyOwner {\n        require(_basisPoints <= 10_000, \"Commission basis points cannot exceed 100%\");\n        commissionBasisPoints = _basisPoints;\n    }\n}\n"},"contracts/LotteryPool.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Lottery.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract LotteryPool is ReentrancyGuard {\n    using SafeMath for uint256;\n\n    struct LotteryInfo {\n        Lottery lotteryContract;\n        address manager;\n        uint256 endTime;\n        uint256 totalPlayers;\n    }\n\n    mapping(address => LotteryInfo) public lotteriesMapping;\n    address[] public lotteriesContractsAddresses;\n    address public owner;\n\n    event LotteryCreated(address indexed lotteryAddress, address indexed manager, uint256 endTime);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only the owner can perform this action\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Create a new lottery with a specified duration.\n     * @param _timeInMinutes The duration of the lottery in minutes.\n     */\n    function createLottery(uint256 _timeInMinutes) external onlyOwner nonReentrant {\n        require(_timeInMinutes > 0, \"Duration must be greater than 0\");\n\n        Lottery newLottery = new Lottery(msg.sender);\n        newLottery.start(_timeInMinutes);\n\n        uint256 endTime = block.timestamp.add(_timeInMinutes.mul(60));\n\n        lotteriesMapping[address(newLottery)] = LotteryInfo({ lotteryContract: newLottery, manager: msg.sender, endTime: endTime, totalPlayers: 0 });\n\n        lotteriesContractsAddresses.push(address(newLottery));\n\n        emit LotteryCreated(address(newLottery), msg.sender, endTime);\n    }\n\n    /**\n     * @dev Get the number of lottery contracts created in the pool.\n     * @return The number of lottery contracts.\n     */\n    function getLotteryContractsCount() external view returns (uint256) {\n        return lotteriesContractsAddresses.length;\n    }\n\n    /**\n     * @dev Get details of a specific lottery contract.\n     * @param _lotteryAddress The address of the lottery contract.\n     * @return LotteryInfo struct containing contract information.\n     */\n    function getLotteryContractDetails(address _lotteryAddress) external view returns (LotteryInfo memory) {\n        return lotteriesMapping[_lotteryAddress];\n    }\n\n    /**\n     * @dev Get details of a all lottery contract.\n     * @return LotteryInfo struct containing contract information.\n     */\n    function getLotteryContractsDetails() external view returns (LotteryInfo[] memory) {\n        LotteryPool.LotteryInfo[] memory _lotteryInfos = new LotteryPool.LotteryInfo[](lotteriesContractsAddresses.length);\n        for (uint256 i = 0; i < lotteriesContractsAddresses.length; i++) {\n            address _lotteryAddress = lotteriesContractsAddresses[i];\n            _lotteryInfos[i] = lotteriesMapping[_lotteryAddress];\n        }\n        return _lotteryInfos;\n    }\n\n    /**\n     * @dev Get the addresses of all lottery contracts in the pool.\n     * @return An array of lottery contract addresses.\n     */\n    function getLotteries() external view returns (address[] memory) {\n        return lotteriesContractsAddresses;\n    }\n\n    /**\n     * @dev Withdraw remaining funds from a lottery contract after it ends.\n     * @param _lotteryAddress The address of the lottery contract.\n     */\n    function withdrawRemainingFunds(address _lotteryAddress) external onlyOwner nonReentrant {\n        require(_lotteryAddress != address(0), \"Invalid lottery address\");\n        LotteryInfo storage lottery = lotteriesMapping[_lotteryAddress];\n        require(lottery.endTime <= block.timestamp, \"Lottery has not ended yet\");\n        require(lottery.totalPlayers > 0, \"No participants\");\n\n        lottery.lotteryContract.withdrawRemainingFunds();\n    }\n\n    /**\n     * @dev Change the owner of the LotteryPool contract.\n     * @param _newOwner The address of the new owner.\n     */\n    function changeOwner(address _newOwner) external onlyOwner {\n        require(_newOwner != address(0), \"Invalid new owner address\");\n        owner = _newOwner;\n    }\n\n    receive() external payable {}\n\n    // Fallback function to reject incoming Ether\n    fallback() external {\n        revert(\"Ether not accepted\");\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[199],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":200,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":199,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,199],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"137:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"ReentrancyGuard","nameLocation":"906:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":118,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:1","nodeType":"VariableDeclaration","scope":177,"src":"1676:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":121,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:1","nodeType":"VariableDeclaration","scope":177,"src":"1723:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":123,"mutability":"mutable","name":"_status","nameLocation":"1783:7:1","nodeType":"VariableDeclaration","scope":177,"src":"1767:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":130,"nodeType":"Block","src":"1811:39:1","statements":[{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":126,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":127,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1831:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"nodeType":"ExpressionStatement","src":"1821:22:1"}]},"id":131,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"1811:0:1"},"scope":177,"src":"1797:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"2251:79:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":134,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2261:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"2261:21:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2292:1:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":138,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2303:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2303:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":140,"nodeType":"ExpressionStatement","src":"2303:20:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1856:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":142,"name":"nonReentrant","nameLocation":"2236:12:1","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"2248:2:1"},"src":"2227:103:1","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"2375:248:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":147,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2479:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2460:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2460:63:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2608:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":155,"nodeType":"ExpressionStatement","src":"2598:18:1"}]},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"2364:2:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"2375:0:1"},"scope":177,"src":"2336:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":164,"nodeType":"Block","src":"2667:171:1","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":160,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"nodeType":"ExpressionStatement","src":"2809:22:1"}]},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":177,"src":"2629:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":175,"nodeType":"Block","src":"3081:43:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3109:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":170,"id":174,"nodeType":"Return","src":"3091:26:1"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"2844:168:1","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"3049:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"3075:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":168,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:1"},"scope":177,"src":"3017:107:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":178,"src":"888:2238:1","usedErrors":[]}],"src":"112:3015:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[199]},"id":200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"111:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":199,"linearizedBaseContracts":[199],"name":"Context","nameLocation":"626:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":188,"nodeType":"Block","src":"702:34:2","statements":[{"expression":{"expression":{"id":185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":184,"id":187,"nodeType":"Return","src":"712:17:2"}]},"id":189,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:2","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"659:2:2"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"693:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:2"},"scope":199,"src":"640:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":197,"nodeType":"Block","src":"809:32:2","statements":[{"expression":{"expression":{"id":194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":193,"id":196,"nodeType":"Return","src":"819:15:2"}]},"id":198,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:2","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"759:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":198,"src":"793:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":191,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:2"},"scope":199,"src":"742:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":200,"src":"608:235:2","usedErrors":[]}],"src":"86:758:2"},"id":2},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[511]},"id":512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":201,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"285:196:3","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":511,"linearizedBaseContracts":[511],"name":"SafeMath","nameLocation":"490:8:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":233,"nodeType":"Block","src":"717:140:3","statements":[{"id":232,"nodeType":"UncheckedBlock","src":"727:124:3","statements":[{"assignments":[215],"declarations":[{"constant":false,"id":215,"mutability":"mutable","name":"c","nameLocation":"759:1:3","nodeType":"VariableDeclaration","scope":232,"src":"751:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":219,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"763:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":217,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"767:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":220,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"786:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":221,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"790:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":227,"nodeType":"IfStatement","src":"782:28:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":213,"id":226,"nodeType":"Return","src":"793:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":229,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"838:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":213,"id":231,"nodeType":"Return","src":"824:16:3"}]}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"505:131:3","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:3","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"a","nameLocation":"665:1:3","nodeType":"VariableDeclaration","scope":234,"src":"657:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"b","nameLocation":"676:1:3","nodeType":"VariableDeclaration","scope":234,"src":"668:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:3"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":234,"src":"702:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":209,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":234,"src":"708:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:3"},"scope":511,"src":"641:216:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":261,"nodeType":"Block","src":"1078:113:3","statements":[{"id":260,"nodeType":"UncheckedBlock","src":"1088:97:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1116:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1120:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":253,"nodeType":"IfStatement","src":"1112:28:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":245,"id":252,"nodeType":"Return","src":"1123:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1168:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1172:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":245,"id":259,"nodeType":"Return","src":"1154:20:3"}]}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"863:134:3","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":262,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:3","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"a","nameLocation":"1026:1:3","nodeType":"VariableDeclaration","scope":262,"src":"1018:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"b","nameLocation":"1037:1:3","nodeType":"VariableDeclaration","scope":262,"src":"1029:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:3"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":262,"src":"1063:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":241,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":262,"src":"1069:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:3"},"scope":511,"src":"1002:189:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":303,"nodeType":"Block","src":"1415:417:3","statements":[{"id":302,"nodeType":"UncheckedBlock","src":"1425:401:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"1683:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"1679:28:3","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":273,"id":280,"nodeType":"Return","src":"1691:16:3"}},{"assignments":[283],"declarations":[{"constant":false,"id":283,"mutability":"mutable","name":"c","nameLocation":"1729:1:3","nodeType":"VariableDeclaration","scope":302,"src":"1721:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":287,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"1733:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":285,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"1737:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":288,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"1756:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"1760:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"1765:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":297,"nodeType":"IfStatement","src":"1752:33:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":273,"id":296,"nodeType":"Return","src":"1768:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":299,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"1813:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":273,"id":301,"nodeType":"Return","src":"1799:16:3"}]}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"1197:137:3","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":304,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"a","nameLocation":"1363:1:3","nodeType":"VariableDeclaration","scope":304,"src":"1355:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"b","nameLocation":"1374:1:3","nodeType":"VariableDeclaration","scope":304,"src":"1366:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:3"},"returnParameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":304,"src":"1400:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":269,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":304,"src":"1406:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:3"},"scope":511,"src":"1339:493:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":331,"nodeType":"Block","src":"2057:114:3","statements":[{"id":330,"nodeType":"UncheckedBlock","src":"2067:98:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":316,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"2095:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":323,"nodeType":"IfStatement","src":"2091:29:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":315,"id":322,"nodeType":"Return","src":"2103:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":325,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"2148:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":326,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"2152:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":315,"id":329,"nodeType":"Return","src":"2134:20:3"}]}]},"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"1838:138:3","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":332,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:3","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"a","nameLocation":"2005:1:3","nodeType":"VariableDeclaration","scope":332,"src":"1997:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"b","nameLocation":"2016:1:3","nodeType":"VariableDeclaration","scope":332,"src":"2008:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:3"},"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":332,"src":"2042:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":332,"src":"2048:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:3"},"scope":511,"src":"1981:190:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":359,"nodeType":"Block","src":"2406:114:3","statements":[{"id":358,"nodeType":"UncheckedBlock","src":"2416:98:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2444:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":351,"nodeType":"IfStatement","src":"2440:29:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":343,"id":350,"nodeType":"Return","src":"2452:17:3"}},{"expression":{"components":[{"hexValue":"74727565","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":353,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"2497:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":354,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2501:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":343,"id":357,"nodeType":"Return","src":"2483:20:3"}]}]},"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"2177:148:3","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":360,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:3","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"a","nameLocation":"2354:1:3","nodeType":"VariableDeclaration","scope":360,"src":"2346:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"b","nameLocation":"2365:1:3","nodeType":"VariableDeclaration","scope":360,"src":"2357:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:3"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"2391:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":339,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"2397:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:3"},"scope":511,"src":"2330:190:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":374,"nodeType":"Block","src":"2822:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":370,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"2839:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":371,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"2843:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":369,"id":373,"nodeType":"Return","src":"2832:12:3"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"2526:224:3","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":375,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:3","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"a","nameLocation":"2776:1:3","nodeType":"VariableDeclaration","scope":375,"src":"2768:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"b","nameLocation":"2787:1:3","nodeType":"VariableDeclaration","scope":375,"src":"2779:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:3"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":375,"src":"2813:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:3"},"scope":511,"src":"2755:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":389,"nodeType":"Block","src":"3189:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"3206:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":386,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"3210:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":384,"id":388,"nodeType":"Return","src":"3199:12:3"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"2857:260:3","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":390,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:3","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"a","nameLocation":"3143:1:3","nodeType":"VariableDeclaration","scope":390,"src":"3135:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"b","nameLocation":"3154:1:3","nodeType":"VariableDeclaration","scope":390,"src":"3146:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:3"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":390,"src":"3180:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:3"},"scope":511,"src":"3122:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":404,"nodeType":"Block","src":"3532:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":400,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"3549:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":401,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"3553:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":399,"id":403,"nodeType":"Return","src":"3542:12:3"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"3224:236:3","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":405,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:3","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"a","nameLocation":"3486:1:3","nodeType":"VariableDeclaration","scope":405,"src":"3478:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"b","nameLocation":"3497:1:3","nodeType":"VariableDeclaration","scope":405,"src":"3489:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:3"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":405,"src":"3523:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:3"},"scope":511,"src":"3465:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"3917:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3934:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3938:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":414,"id":418,"nodeType":"Return","src":"3927:12:3"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"3567:278:3","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:3","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"a","nameLocation":"3871:1:3","nodeType":"VariableDeclaration","scope":420,"src":"3863:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"b","nameLocation":"3882:1:3","nodeType":"VariableDeclaration","scope":420,"src":"3874:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:3"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":420,"src":"3908:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:3"},"scope":511,"src":"3850:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":434,"nodeType":"Block","src":"4466:29:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"4483:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":431,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"4487:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":429,"id":433,"nodeType":"Return","src":"4476:12:3"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"3952:442:3","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":435,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:3","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"a","nameLocation":"4420:1:3","nodeType":"VariableDeclaration","scope":435,"src":"4412:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"b","nameLocation":"4431:1:3","nodeType":"VariableDeclaration","scope":435,"src":"4423:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:3"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"4457:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":427,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:3"},"scope":511,"src":"4399:96:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":459,"nodeType":"Block","src":"5054:106:3","statements":[{"id":458,"nodeType":"UncheckedBlock","src":"5064:90:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":448,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"5096:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5101:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":451,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"5104:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5088:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":453,"nodeType":"ExpressionStatement","src":"5088:29:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":454,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5138:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":455,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"5142:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":446,"id":457,"nodeType":"Return","src":"5131:12:3"}]}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"4501:453:3","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":460,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:3","nodeType":"FunctionDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"a","nameLocation":"4980:1:3","nodeType":"VariableDeclaration","scope":460,"src":"4972:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"b","nameLocation":"4991:1:3","nodeType":"VariableDeclaration","scope":460,"src":"4983:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"errorMessage","nameLocation":"5008:12:3","nodeType":"VariableDeclaration","scope":460,"src":"4994:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":441,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:3"},"returnParameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":460,"src":"5045:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:3"},"scope":511,"src":"4959:201:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":484,"nodeType":"Block","src":"5739:105:3","statements":[{"id":483,"nodeType":"UncheckedBlock","src":"5749:89:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5781:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":476,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"5788:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":472,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5773:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"5773:28:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"5822:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"5826:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":471,"id":482,"nodeType":"Return","src":"5815:12:3"}]}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"5166:473:3","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5653:3:3","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"a","nameLocation":"5665:1:3","nodeType":"VariableDeclaration","scope":485,"src":"5657:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"b","nameLocation":"5676:1:3","nodeType":"VariableDeclaration","scope":485,"src":"5668:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"errorMessage","nameLocation":"5693:12:3","nodeType":"VariableDeclaration","scope":485,"src":"5679:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":466,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:3"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":485,"src":"5730:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":469,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:3"},"scope":511,"src":"5644:200:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"6585:105:3","statements":[{"id":508,"nodeType":"UncheckedBlock","src":"6595:89:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":498,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"6627:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":501,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"6634:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6619:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"6619:28:3"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"6668:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":505,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"6672:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":496,"id":507,"nodeType":"Return","src":"6661:12:3"}]}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"5850:635:3","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6499:3:3","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"a","nameLocation":"6511:1:3","nodeType":"VariableDeclaration","scope":510,"src":"6503:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"b","nameLocation":"6522:1:3","nodeType":"VariableDeclaration","scope":510,"src":"6514:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":489,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"errorMessage","nameLocation":"6539:12:3","nodeType":"VariableDeclaration","scope":510,"src":"6525:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":491,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:3"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":510,"src":"6576:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:3"},"scope":511,"src":"6490:200:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":512,"src":"482:6210:3","usedErrors":[]}],"src":"107:6586:3"},"id":3},"contracts/Lottery.sol":{"ast":{"absolutePath":"contracts/Lottery.sol","exportedSymbols":{"Context":[199],"Lottery":[987],"Ownable":[112],"SafeMath":[511]},"id":988,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":513,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":988,"sourceUnit":113,"src":"57:52:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":988,"sourceUnit":512,"src":"110:57:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":516,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"189:7:4"},"id":517,"nodeType":"InheritanceSpecifier","src":"189:7:4"}],"canonicalName":"Lottery","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":987,"linearizedBaseContracts":[987,112,199],"name":"Lottery","nameLocation":"178:7:4","nodeType":"ContractDefinition","nodes":[{"id":520,"libraryName":{"id":518,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":511,"src":"209:8:4"},"nodeType":"UsingForDirective","src":"203:27:4","typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"222:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"f71d96cb","id":523,"mutability":"mutable","name":"players","nameLocation":"253:7:4","nodeType":"VariableDeclaration","scope":987,"src":"236:24:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"236:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":522,"nodeType":"ArrayTypeName","src":"236:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"072ea61c","id":526,"mutability":"mutable","name":"entryFee","nameLocation":"281:8:4","nodeType":"VariableDeclaration","scope":987,"src":"266:35:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"266:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e31","id":525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"292:9:4","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"0.1"},"visibility":"public"},{"constant":false,"functionSelector":"dfbf53ae","id":528,"mutability":"mutable","name":"winner","nameLocation":"322:6:4","nodeType":"VariableDeclaration","scope":987,"src":"307:21:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"307:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"3197cbb6","id":530,"mutability":"mutable","name":"endTime","nameLocation":"349:7:4","nodeType":"VariableDeclaration","scope":987,"src":"334:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"481c6a75","id":532,"mutability":"mutable","name":"manager","nameLocation":"377:7:4","nodeType":"VariableDeclaration","scope":987,"src":"362:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"89fdfd05","id":535,"mutability":"mutable","name":"commissionBasisPoints","nameLocation":"405:21:4","nodeType":"VariableDeclaration","scope":987,"src":"390:42:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"390:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"353030","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"429:3:4","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"public"},{"anonymous":false,"id":541,"name":"WinnerDeclared","nameLocation":"445:14:4","nodeType":"EventDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"indexed":false,"mutability":"mutable","name":"winner","nameLocation":"468:6:4","nodeType":"VariableDeclaration","scope":541,"src":"460:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"indexed":false,"mutability":"mutable","name":"winningPrize","nameLocation":"484:12:4","nodeType":"VariableDeclaration","scope":541,"src":"476:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"476:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"459:38:4"},"src":"439:59:4"},{"anonymous":false,"id":545,"name":"CommissionWithdrawn","nameLocation":"509:19:4","nodeType":"EventDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"537:6:4","nodeType":"VariableDeclaration","scope":545,"src":"529:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:16:4"},"src":"503:42:4"},{"canonicalName":"Lottery.LotteryStatus","id":549,"members":[{"id":546,"name":"NOT_STARTED","nameLocation":"580:11:4","nodeType":"EnumValue","src":"580:11:4"},{"id":547,"name":"STARTED","nameLocation":"601:7:4","nodeType":"EnumValue","src":"601:7:4"},{"id":548,"name":"ENDED","nameLocation":"618:5:4","nodeType":"EnumValue","src":"618:5:4"}],"name":"LotteryStatus","nameLocation":"556:13:4","nodeType":"EnumDefinition","src":"551:78:4"},{"constant":false,"functionSelector":"0d683dd9","id":552,"mutability":"mutable","name":"lotteryStatus","nameLocation":"656:13:4","nodeType":"VariableDeclaration","scope":987,"src":"635:34:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"},"typeName":{"id":551,"nodeType":"UserDefinedTypeName","pathNode":{"id":550,"name":"LotteryStatus","nodeType":"IdentifierPath","referencedDeclaration":549,"src":"635:13:4"},"referencedDeclaration":549,"src":"635:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"visibility":"public"},{"body":{"id":565,"nodeType":"Block","src":"721:87:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":558,"name":"lotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"739:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":559,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"756:7:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"src":"739:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c6f747465727920737461747573","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"765:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3357eaf62de67f3cfd864ae72873026f55eab5ea856f0b110d8bb2603b4e6445","typeString":"literal_string \"Invalid lottery status\""},"value":"Invalid lottery status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3357eaf62de67f3cfd864ae72873026f55eab5ea856f0b110d8bb2603b4e6445","typeString":"literal_string \"Invalid lottery status\""}],"id":557,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"731:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"731:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"731:59:4"},{"id":564,"nodeType":"PlaceholderStatement","src":"800:1:4"}]},"id":566,"name":"onlyInStatus","nameLocation":"685:12:4","nodeType":"ModifierDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"_status","nameLocation":"712:7:4","nodeType":"VariableDeclaration","scope":566,"src":"698:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"},"typeName":{"id":554,"nodeType":"UserDefinedTypeName","pathNode":{"id":553,"name":"LotteryStatus","nodeType":"IdentifierPath","referencedDeclaration":549,"src":"698:13:4"},"referencedDeclaration":549,"src":"698:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"visibility":"internal"}],"src":"697:23:4"},"src":"676:132:4","virtual":false,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"838:98:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"lotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"856:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":570,"name":"LotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"873:13:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryStatus_$549_$","typeString":"type(enum Lottery.LotteryStatus)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"STARTED","nodeType":"MemberAccess","referencedDeclaration":547,"src":"873:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"src":"856:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f7474657279206e6f742073746172746564","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"896:21:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6700e2b82b5ba714f445e23281b296feecb156559c232baa389ee1d385c2338f","typeString":"literal_string \"Lottery not started\""},"value":"Lottery not started"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6700e2b82b5ba714f445e23281b296feecb156559c232baa389ee1d385c2338f","typeString":"literal_string \"Lottery not started\""}],"id":568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"848:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"848:70:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":575,"nodeType":"ExpressionStatement","src":"848:70:4"},{"id":576,"nodeType":"PlaceholderStatement","src":"928:1:4"}]},"id":578,"name":"nonReentrant","nameLocation":"823:12:4","nodeType":"ModifierDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"835:2:4"},"src":"814:122:4","virtual":false,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"1057:80:4","statements":[{"expression":{"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"lotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1067:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":585,"name":"LotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1083:13:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryStatus_$549_$","typeString":"type(enum Lottery.LotteryStatus)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ENDED","nodeType":"MemberAccess","referencedDeclaration":548,"src":"1083:19:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"src":"1067:35:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"id":588,"nodeType":"ExpressionStatement","src":"1067:35:4"},{"expression":{"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":589,"name":"manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"1112:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":590,"name":"_manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"1122:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1112:18:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":592,"nodeType":"ExpressionStatement","src":"1112:18:4"}]},"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"942:80:4","text":" @dev Constructor function to initialize the lottery contract."},"id":594,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"_manager","nameLocation":"1047:8:4","nodeType":"VariableDeclaration","scope":594,"src":"1039:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1038:18:4"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"1057:0:4"},"scope":987,"src":"1027:110:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":621,"nodeType":"Block","src":"1322:221:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"lotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1336:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":601,"name":"LotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1353:13:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryStatus_$549_$","typeString":"type(enum Lottery.LotteryStatus)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"STARTED","nodeType":"MemberAccess","referencedDeclaration":547,"src":"1353:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"src":"1336:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":618,"nodeType":"IfStatement","src":"1332:187:4","trueBody":{"id":617,"nodeType":"Block","src":"1376:143:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":604,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1394:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":605,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1405:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1405:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1394:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":611,"nodeType":"IfStatement","src":"1390:73:4","trueBody":{"id":610,"nodeType":"Block","src":"1422:41:4","statements":[{"expression":{"hexValue":"30","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1447:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":599,"id":609,"nodeType":"Return","src":"1440:8:4"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":612,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1483:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":613,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1493:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1493:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1483:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":599,"id":616,"nodeType":"Return","src":"1476:32:4"}]}},{"expression":{"hexValue":"30","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1535:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":599,"id":620,"nodeType":"Return","src":"1528:8:4"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"1143:116:4","text":" @dev Get the remaining time until the lottery ends.\n @return The remaining time in seconds."},"functionSelector":"efb98bcf","id":622,"implemented":true,"kind":"function","modifiers":[],"name":"getRemainingTime","nameLocation":"1273:16:4","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"1289:2:4"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":622,"src":"1313:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"1313:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1312:9:4"},"scope":987,"src":"1264:279:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":664,"nodeType":"Block","src":"1718:202:4","statements":[{"assignments":[633],"declarations":[{"constant":false,"id":633,"mutability":"mutable","name":"_players","nameLocation":"1745:8:4","nodeType":"VariableDeclaration","scope":664,"src":"1728:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":632,"nodeType":"ArrayTypeName","src":"1728:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":640,"initialValue":{"arguments":[{"expression":{"id":637,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"1770:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1770:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1756:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"1760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":635,"nodeType":"ArrayTypeName","src":"1760:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1756:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1728:57:4"},{"body":{"id":660,"nodeType":"Block","src":"1840:49:4","statements":[{"expression":{"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":652,"name":"_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1854:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":654,"indexExpression":{"id":653,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"1863:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1854:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":655,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"1868:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":657,"indexExpression":{"id":656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"1876:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1868:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1854:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":659,"nodeType":"ExpressionStatement","src":"1854:24:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"1815:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":646,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"1819:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1819:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1815:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"initializationExpression":{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"i","nameLocation":"1808:1:4","nodeType":"VariableDeclaration","scope":661,"src":"1800:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1800:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":644,"initialValue":{"hexValue":"30","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1812:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1800:13:4"},"loopExpression":{"expression":{"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1835:3:4","subExpression":{"id":649,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"1835:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":651,"nodeType":"ExpressionStatement","src":"1835:3:4"},"nodeType":"ForStatement","src":"1795:94:4"},{"expression":{"id":662,"name":"_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"1905:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":628,"id":663,"nodeType":"Return","src":"1898:15:4"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"1549:98:4","text":" @dev Get details of a all players.\n @return address[] containing players."},"functionSelector":"efa1c482","id":665,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPlayers","nameLocation":"1661:13:4","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[],"src":"1674:2:4"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"1700:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"1700:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":626,"nodeType":"ArrayTypeName","src":"1700:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1699:18:4"},"scope":987,"src":"1652:268:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":700,"nodeType":"Block","src":"2158:194:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":678,"name":"_timeInMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"2176:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2193:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2176:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696d65206475726174696f6e206d7573742062652067726561746572207468616e2030","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2196:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c3296dabe30e4c1074a5e3c32184d39b477e1b44c10a182c99d9e25124654231","typeString":"literal_string \"Time duration must be greater than 0\""},"value":"Time duration must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c3296dabe30e4c1074a5e3c32184d39b477e1b44c10a182c99d9e25124654231","typeString":"literal_string \"Time duration must be greater than 0\""}],"id":677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2168:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2168:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"2168:67:4"},{"expression":{"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":684,"name":"lotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2245:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":685,"name":"LotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"2261:13:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryStatus_$549_$","typeString":"type(enum Lottery.LotteryStatus)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"STARTED","nodeType":"MemberAccess","referencedDeclaration":547,"src":"2261:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"src":"2245:37:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"id":688,"nodeType":"ExpressionStatement","src":"2245:37:4"},{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":689,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2292:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"3630","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2341:2:4","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"}],"expression":{"id":693,"name":"_timeInMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"2322:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":405,"src":"2322:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2322:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":690,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2302:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2302:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":375,"src":"2302:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2302:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2292:53:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":699,"nodeType":"ExpressionStatement","src":"2292:53:4"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"1926:137:4","text":" @dev Start the lottery with a specified duration.\n @param _timeInMinutes The duration of the lottery in minutes."},"functionSelector":"95805dad","id":701,"implemented":true,"kind":"function","modifiers":[{"id":671,"kind":"modifierInvocation","modifierName":{"id":670,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2114:9:4"},"nodeType":"ModifierInvocation","src":"2114:9:4"},{"arguments":[{"expression":{"id":673,"name":"LotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"2137:13:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryStatus_$549_$","typeString":"type(enum Lottery.LotteryStatus)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ENDED","nodeType":"MemberAccess","referencedDeclaration":548,"src":"2137:19:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}}],"id":675,"kind":"modifierInvocation","modifierName":{"id":672,"name":"onlyInStatus","nodeType":"IdentifierPath","referencedDeclaration":566,"src":"2124:12:4"},"nodeType":"ModifierInvocation","src":"2124:33:4"}],"name":"start","nameLocation":"2077:5:4","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"_timeInMinutes","nameLocation":"2091:14:4","nodeType":"VariableDeclaration","scope":701,"src":"2083:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2082:24:4"},"returnParameters":{"id":676,"nodeType":"ParameterList","parameters":[],"src":"2158:0:4"},"scope":987,"src":"2068:284:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":811,"nodeType":"Block","src":"2488:875:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":710,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2506:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":711,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2517:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2517:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2506:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752063616e6e6f7420656e6420746865206c6f7474657279206265666f7265207468652074696d65","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9cea1712fe99ba3fd837ee413ddf8e57c55c7a9c5cabbc44655aac74c46400b6","typeString":"literal_string \"You cannot end the lottery before the time\""},"value":"You cannot end the lottery before the time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9cea1712fe99ba3fd837ee413ddf8e57c55c7a9c5cabbc44655aac74c46400b6","typeString":"literal_string \"You cannot end the lottery before the time\""}],"id":709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2498:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2498:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"2498:81:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":718,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2597:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2597:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2614:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2597:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207061727469636970616e7473","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2617:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f","typeString":"literal_string \"No participants\""},"value":"No participants"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f","typeString":"literal_string \"No participants\""}],"id":717,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2589:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2589:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"2589:46:4"},{"expression":{"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":725,"name":"lotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"2645:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":726,"name":"LotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"2661:13:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryStatus_$549_$","typeString":"type(enum Lottery.LotteryStatus)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ENDED","nodeType":"MemberAccess","referencedDeclaration":548,"src":"2661:19:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"src":"2645:35:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"id":729,"nodeType":"ExpressionStatement","src":"2645:35:4"},{"assignments":[731],"declarations":[{"constant":false,"id":731,"mutability":"mutable","name":"winnerIndex","nameLocation":"2699:11:4","nodeType":"VariableDeclaration","scope":811,"src":"2691:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"2691:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":750,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":737,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2748:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"difficulty","nodeType":"MemberAccess","src":"2748:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":739,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2766:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2766:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":741,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2783:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},{"expression":{"id":742,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2792:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2792:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":735,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2731:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2731:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2731:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":734,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2721:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2721:83:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2713:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"2713:7:4","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2713:92:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":747,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2808:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2808:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2713:109:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2691:131:4"},{"expression":{"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":751,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"2832:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":752,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2841:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":754,"indexExpression":{"id":753,"name":"winnerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"2849:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2841:20:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2832:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":756,"nodeType":"ExpressionStatement","src":"2832:29:4"},{"assignments":[758],"declarations":[{"constant":false,"id":758,"mutability":"mutable","name":"prizeMoney","nameLocation":"2879:10:4","nodeType":"VariableDeclaration","scope":811,"src":"2871:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2871:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":764,"initialValue":{"expression":{"arguments":[{"id":761,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2900:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}],"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2892:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"2892:7:4","typeDescriptions":{}}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2892:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2892:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2871:42:4"},{"assignments":[766],"declarations":[{"constant":false,"id":766,"mutability":"mutable","name":"commission","nameLocation":"2931:10:4","nodeType":"VariableDeclaration","scope":811,"src":"2923:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":775,"initialValue":{"arguments":[{"hexValue":"31305f303030","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2988:6:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10_000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}],"expression":{"components":[{"arguments":[{"id":769,"name":"commissionBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"2960:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":767,"name":"prizeMoney","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"2945:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":405,"src":"2945:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2945:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2944:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":420,"src":"2944:43:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2944:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2923:72:4"},{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"remainingPrize","nameLocation":"3056:14:4","nodeType":"VariableDeclaration","scope":811,"src":"3048:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3048:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":781,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":778,"name":"prizeMoney","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"3073:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":779,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"3086:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3073:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3048:48:4"},{"expression":{"arguments":[{"id":787,"name":"remainingPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3132:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":784,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"3115:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3107:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"3107:8:4","stateMutability":"payable","typeDescriptions":{}}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3107:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"3107:24:4","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3107:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"ExpressionStatement","src":"3107:40:4"},{"expression":{"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3158:14:4","subExpression":{"id":790,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3165:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"ExpressionStatement","src":"3158:14:4"},{"eventCall":{"arguments":[{"id":794,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"3203:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":795,"name":"remainingPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3211:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":793,"name":"WinnerDeclared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"3188:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3188:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"EmitStatement","src":"3183:43:4"},{"eventCall":{"arguments":[{"id":799,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"3261:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":798,"name":"CommissionWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"3241:19:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3241:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"EmitStatement","src":"3236:36:4"},{"expression":{"arguments":[{"id":808,"name":"commission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"3345:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":804,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"3327:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3327:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3319:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"3319:8:4","stateMutability":"payable","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3319:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"3319:25:4","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3319:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":810,"nodeType":"ExpressionStatement","src":"3319:37:4"}]},"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"2358:67:4","text":" @dev End the lottery and select a random winner."},"functionSelector":"efbe1c1c","id":812,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":705,"name":"LotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"2465:13:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryStatus_$549_$","typeString":"type(enum Lottery.LotteryStatus)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"STARTED","nodeType":"MemberAccess","referencedDeclaration":547,"src":"2465:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}}],"id":707,"kind":"modifierInvocation","modifierName":{"id":704,"name":"onlyInStatus","nodeType":"IdentifierPath","referencedDeclaration":566,"src":"2452:12:4"},"nodeType":"ModifierInvocation","src":"2452:35:4"}],"name":"end","nameLocation":"2439:3:4","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"2442:2:4"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[],"src":"2488:0:4"},"scope":987,"src":"2430:933:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":835,"nodeType":"Block","src":"3468:142:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":816,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3482:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":817,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3493:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3493:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3482:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":820,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3512:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3512:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3529:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3512:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3482:48:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":825,"name":"lotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"3534:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":826,"name":"LotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"3551:13:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryStatus_$549_$","typeString":"type(enum Lottery.LotteryStatus)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"STARTED","nodeType":"MemberAccess","referencedDeclaration":547,"src":"3551:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}},"src":"3534:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3482:90:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":834,"nodeType":"IfStatement","src":"3478:126:4","trueBody":{"id":833,"nodeType":"Block","src":"3574:30:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":830,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"3588:3:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3588:5:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":832,"nodeType":"ExpressionStatement","src":"3588:5:4"}]}}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"3369:63:4","text":" @dev End the lottery if blocktime >= endTime"},"functionSelector":"0ded5dcf","id":836,"implemented":true,"kind":"function","modifiers":[],"name":"closeIfEnded","nameLocation":"3446:12:4","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[],"src":"3458:2:4"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"3468:0:4"},"scope":987,"src":"3437:173:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":877,"nodeType":"Block","src":"3732:266:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":843,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3750:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3750:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":845,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"3763:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3750:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e74727920666565206973206c657373","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3773:19:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1233424687cc54989fb956693559ffe4af8d14501c9505562d598cfa17f1ec5","typeString":"literal_string \"Entry fee is less\""},"value":"Entry fee is less"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d1233424687cc54989fb956693559ffe4af8d14501c9505562d598cfa17f1ec5","typeString":"literal_string \"Entry fee is less\""}],"id":842,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3742:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3742:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":849,"nodeType":"ExpressionStatement","src":"3742:51:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":851,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3811:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":852,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3821:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3821:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3811:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696d652069732075702e","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3838:13:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cc5d79b1c73ccef75c9f1f675b6f82d5612beb368d152012cef1c19739968c1","typeString":"literal_string \"Time is up.\""},"value":"Time is up."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7cc5d79b1c73ccef75c9f1f675b6f82d5612beb368d152012cef1c19739968c1","typeString":"literal_string \"Time is up.\""}],"id":850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3803:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3803:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"ExpressionStatement","src":"3803:49:4"},{"expression":{"arguments":[{"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3870:28:4","subExpression":{"arguments":[{"expression":{"id":860,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3887:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3887:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":859,"name":"isParticipating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"3871:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3871:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752061726520616c72656164792061207061727469636970616e74","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3900:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a07f15ed8fda2b0e9813162ada4a5f85607aa44d111269fff93ed22e29a1b29","typeString":"literal_string \"You are already a participant\""},"value":"You are already a participant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a07f15ed8fda2b0e9813162ada4a5f85607aa44d111269fff93ed22e29a1b29","typeString":"literal_string \"You are already a participant\""}],"id":858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3862:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3862:70:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":866,"nodeType":"ExpressionStatement","src":"3862:70:4"},{"expression":{"arguments":[{"expression":{"id":870,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3955:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3955:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":867,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3942:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"3942:12:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3942:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":873,"nodeType":"ExpressionStatement","src":"3942:24:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":874,"name":"closeIfEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"3977:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3977:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":876,"nodeType":"ExpressionStatement","src":"3977:14:4"}]},"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"3616:66:4","text":" @dev Enter the lottery by sending an entry fee."},"functionSelector":"e97dcb62","id":878,"implemented":true,"kind":"function","modifiers":[{"id":840,"kind":"modifierInvocation","modifierName":{"id":839,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":578,"src":"3719:12:4"},"nodeType":"ModifierInvocation","src":"3719:12:4"}],"name":"enter","nameLocation":"3696:5:4","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[],"src":"3701:2:4"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"3732:0:4"},"scope":987,"src":"3687:311:4","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":910,"nodeType":"Block","src":"4299:183:4","statements":[{"body":{"id":906,"nodeType":"Block","src":"4354:100:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":897,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4372:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":899,"indexExpression":{"id":898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4380:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4372:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":900,"name":"_participant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"4386:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4372:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":905,"nodeType":"IfStatement","src":"4368:76:4","trueBody":{"id":904,"nodeType":"Block","src":"4400:44:4","statements":[{"expression":{"hexValue":"74727565","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4425:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":885,"id":903,"nodeType":"Return","src":"4418:11:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":890,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4329:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":891,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4333:7:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4333:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4329:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":907,"initializationExpression":{"assignments":[887],"declarations":[{"constant":false,"id":887,"mutability":"mutable","name":"i","nameLocation":"4322:1:4","nodeType":"VariableDeclaration","scope":907,"src":"4314:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":886,"name":"uint256","nodeType":"ElementaryTypeName","src":"4314:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":889,"initialValue":{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4326:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4314:13:4"},"loopExpression":{"expression":{"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4349:3:4","subExpression":{"id":894,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4349:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":896,"nodeType":"ExpressionStatement","src":"4349:3:4"},"nodeType":"ForStatement","src":"4309:145:4"},{"expression":{"hexValue":"66616c7365","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4470:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":885,"id":909,"nodeType":"Return","src":"4463:12:4"}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"4004:215:4","text":" @dev Check if a participant has already entered the lottery.\n @param _participant The participant's address to check.\n @return A boolean indicating whether the participant has entered."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"isParticipating","nameLocation":"4233:15:4","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"_participant","nameLocation":"4257:12:4","nodeType":"VariableDeclaration","scope":911,"src":"4249:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"4249:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4248:22:4"},"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":911,"src":"4293:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":883,"name":"bool","nodeType":"ElementaryTypeName","src":"4293:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4292:6:4"},"scope":987,"src":"4224:258:4","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":945,"nodeType":"Block","src":"4674:191:4","statements":[{"assignments":[922],"declarations":[{"constant":false,"id":922,"mutability":"mutable","name":"remainingBalance","nameLocation":"4692:16:4","nodeType":"VariableDeclaration","scope":945,"src":"4684:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"4684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":928,"initialValue":{"expression":{"arguments":[{"id":925,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4719:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}],"id":924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4711:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"4711:7:4","typeDescriptions":{}}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4711:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"4711:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4684:48:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":930,"name":"remainingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"4750:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4769:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4750:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2072656d61696e696e672066756e647320746f207769746864726177","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4772:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_82d95a0200688b2b701a66cdd6076f2568570fdd7df3373b72d40e59a0718e2c","typeString":"literal_string \"No remaining funds to withdraw\""},"value":"No remaining funds to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_82d95a0200688b2b701a66cdd6076f2568570fdd7df3373b72d40e59a0718e2c","typeString":"literal_string \"No remaining funds to withdraw\""}],"id":929,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4742:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4742:63:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"ExpressionStatement","src":"4742:63:4"},{"expression":{"arguments":[{"id":942,"name":"remainingBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"4841:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":938,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"4823:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4815:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"4815:8:4","stateMutability":"payable","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4815:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"4815:25:4","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4815:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"4815:43:4"}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"4488:96:4","text":" @dev Allows the owner to withdraw any remaining funds after the lottery ends."},"functionSelector":"ef86ce8e","id":946,"implemented":true,"kind":"function","modifiers":[{"id":915,"kind":"modifierInvocation","modifierName":{"id":914,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4630:9:4"},"nodeType":"ModifierInvocation","src":"4630:9:4"},{"arguments":[{"expression":{"id":917,"name":"LotteryStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"4653:13:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_LotteryStatus_$549_$","typeString":"type(enum Lottery.LotteryStatus)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"ENDED","nodeType":"MemberAccess","referencedDeclaration":548,"src":"4653:19:4","typeDescriptions":{"typeIdentifier":"t_enum$_LotteryStatus_$549","typeString":"enum Lottery.LotteryStatus"}}],"id":919,"kind":"modifierInvocation","modifierName":{"id":916,"name":"onlyInStatus","nodeType":"IdentifierPath","referencedDeclaration":566,"src":"4640:12:4"},"nodeType":"ModifierInvocation","src":"4640:33:4"}],"name":"withdrawRemainingFunds","nameLocation":"4598:22:4","nodeType":"FunctionDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[],"src":"4620:2:4"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[],"src":"4674:0:4"},"scope":987,"src":"4589:276:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":965,"nodeType":"Block","src":"5060:101:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":955,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"5078:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5088:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5078:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e74727920666565206d7573742062652067726561746572207468616e2030","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5091:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7e2564710dc6082efe7dd2929a7a93d8953df30d2554971f2c009ceb346aff6","typeString":"literal_string \"Entry fee must be greater than 0\""},"value":"Entry fee must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f7e2564710dc6082efe7dd2929a7a93d8953df30d2554971f2c009ceb346aff6","typeString":"literal_string \"Entry fee must be greater than 0\""}],"id":954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5070:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5070:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"ExpressionStatement","src":"5070:56:4"},{"expression":{"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":961,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"5136:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":962,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"5147:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5136:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":964,"nodeType":"ExpressionStatement","src":"5136:18:4"}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"4871:126:4","text":" @dev Change the entry fee for participating in the lottery.\n @param _newFee The new entry fee in wei."},"functionSelector":"f7d978a2","id":966,"implemented":true,"kind":"function","modifiers":[{"id":952,"kind":"modifierInvocation","modifierName":{"id":951,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5050:9:4"},"nodeType":"ModifierInvocation","src":"5050:9:4"}],"name":"changeEntryFee","nameLocation":"5011:14:4","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"_newFee","nameLocation":"5034:7:4","nodeType":"VariableDeclaration","scope":966,"src":"5026:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5025:17:4"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"5060:0:4"},"scope":987,"src":"5002:159:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":985,"nodeType":"Block","src":"5361:140:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":975,"name":"_basisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"5379:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31305f303030","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5395:6:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10_000"},"src":"5379:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6d6d697373696f6e20626173697320706f696e74732063616e6e6f74206578636565642031303025","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5403:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0176e3ab2d4b949c8cdf74389e145f1cb17b49ad99ca6e2210e1f76690a23bb5","typeString":"literal_string \"Commission basis points cannot exceed 100%\""},"value":"Commission basis points cannot exceed 100%"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0176e3ab2d4b949c8cdf74389e145f1cb17b49ad99ca6e2210e1f76690a23bb5","typeString":"literal_string \"Commission basis points cannot exceed 100%\""}],"id":974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5371:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5371:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"ExpressionStatement","src":"5371:77:4"},{"expression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":981,"name":"commissionBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"5458:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":982,"name":"_basisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"5482:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5458:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":984,"nodeType":"ExpressionStatement","src":"5458:36:4"}]},"documentation":{"id":967,"nodeType":"StructuredDocumentation","src":"5167:116:4","text":" @dev Set the commission basis points.\n @param _basisPoints The new commission basis points."},"functionSelector":"f00f6921","id":986,"implemented":true,"kind":"function","modifiers":[{"id":972,"kind":"modifierInvocation","modifierName":{"id":971,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"5351:9:4"},"nodeType":"ModifierInvocation","src":"5351:9:4"}],"name":"setCommissionBasisPoints","nameLocation":"5297:24:4","nodeType":"FunctionDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"_basisPoints","nameLocation":"5330:12:4","nodeType":"VariableDeclaration","scope":986,"src":"5322:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"5322:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5321:22:4"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"5361:0:4"},"scope":987,"src":"5288:213:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":988,"src":"169:5334:4","usedErrors":[]}],"src":"32:5472:4"},"id":4},"contracts/LotteryPool.sol":{"ast":{"absolutePath":"contracts/LotteryPool.sol","exportedSymbols":{"Context":[199],"Lottery":[987],"LotteryPool":[1299],"Ownable":[112],"ReentrancyGuard":[177],"SafeMath":[511]},"id":1300,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":989,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"absolutePath":"contracts/Lottery.sol","file":"./Lottery.sol","id":990,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1300,"sourceUnit":988,"src":"57:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1300,"sourceUnit":512,"src":"81:57:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1300,"sourceUnit":178,"src":"139:62:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":993,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":177,"src":"227:15:5"},"id":994,"nodeType":"InheritanceSpecifier","src":"227:15:5"}],"canonicalName":"LotteryPool","contractDependencies":[987],"contractKind":"contract","fullyImplemented":true,"id":1299,"linearizedBaseContracts":[1299,177],"name":"LotteryPool","nameLocation":"212:11:5","nodeType":"ContractDefinition","nodes":[{"id":997,"libraryName":{"id":995,"name":"SafeMath","nodeType":"IdentifierPath","referencedDeclaration":511,"src":"255:8:5"},"nodeType":"UsingForDirective","src":"249:27:5","typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"268:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"LotteryPool.LotteryInfo","id":1007,"members":[{"constant":false,"id":1000,"mutability":"mutable","name":"lotteryContract","nameLocation":"319:15:5","nodeType":"VariableDeclaration","scope":1007,"src":"311:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"},"typeName":{"id":999,"nodeType":"UserDefinedTypeName","pathNode":{"id":998,"name":"Lottery","nodeType":"IdentifierPath","referencedDeclaration":987,"src":"311:7:5"},"referencedDeclaration":987,"src":"311:7:5","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"manager","nameLocation":"352:7:5","nodeType":"VariableDeclaration","scope":1007,"src":"344:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"344:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"endTime","nameLocation":"377:7:5","nodeType":"VariableDeclaration","scope":1007,"src":"369:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"totalPlayers","nameLocation":"402:12:5","nodeType":"VariableDeclaration","scope":1007,"src":"394:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"394:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"LotteryInfo","nameLocation":"289:11:5","nodeType":"StructDefinition","scope":1299,"src":"282:139:5","visibility":"public"},{"constant":false,"functionSelector":"59d23279","id":1012,"mutability":"mutable","name":"lotteriesMapping","nameLocation":"466:16:5","nodeType":"VariableDeclaration","scope":1299,"src":"427:55:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LotteryInfo_$1007_storage_$","typeString":"mapping(address => struct LotteryPool.LotteryInfo)"},"typeName":{"id":1011,"keyType":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"427:31:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LotteryInfo_$1007_storage_$","typeString":"mapping(address => struct LotteryPool.LotteryInfo)"},"valueType":{"id":1010,"nodeType":"UserDefinedTypeName","pathNode":{"id":1009,"name":"LotteryInfo","nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"446:11:5"},"referencedDeclaration":1007,"src":"446:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage_ptr","typeString":"struct LotteryPool.LotteryInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"a1bbfcee","id":1015,"mutability":"mutable","name":"lotteriesContractsAddresses","nameLocation":"505:27:5","nodeType":"VariableDeclaration","scope":1299,"src":"488:44:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"488:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1014,"nodeType":"ArrayTypeName","src":"488:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":1017,"mutability":"mutable","name":"owner","nameLocation":"553:5:5","nodeType":"VariableDeclaration","scope":1299,"src":"538:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"538:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"id":1025,"name":"LotteryCreated","nameLocation":"571:14:5","nodeType":"EventDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"indexed":true,"mutability":"mutable","name":"lotteryAddress","nameLocation":"602:14:5","nodeType":"VariableDeclaration","scope":1025,"src":"586:30:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"indexed":true,"mutability":"mutable","name":"manager","nameLocation":"634:7:5","nodeType":"VariableDeclaration","scope":1025,"src":"618:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"618:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"651:7:5","nodeType":"VariableDeclaration","scope":1025,"src":"643:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"585:74:5"},"src":"565:95:5"},{"body":{"id":1036,"nodeType":"Block","src":"687:98:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1028,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"705:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"705:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1030,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"719:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"705:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"726:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5","typeString":"literal_string \"Only the owner can perform this action\""},"value":"Only the owner can perform this action"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5","typeString":"literal_string \"Only the owner can perform this action\""}],"id":1027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"697:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"697:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1034,"nodeType":"ExpressionStatement","src":"697:70:5"},{"id":1035,"nodeType":"PlaceholderStatement","src":"777:1:5"}]},"id":1037,"name":"onlyOwner","nameLocation":"675:9:5","nodeType":"ModifierDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[],"src":"684:2:5"},"src":"666:119:5","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"805:35:5","statements":[{"expression":{"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1040,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"815:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1041,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"823:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"823:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"815:18:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1044,"nodeType":"ExpressionStatement","src":"815:18:5"}]},"id":1046,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"802:2:5"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"805:0:5"},"scope":1299,"src":"791:49:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1124,"nodeType":"Block","src":"1070:535:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1057,"name":"_timeInMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"1088:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1105:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1088:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4475726174696f6e206d7573742062652067726561746572207468616e2030","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1108:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0","typeString":"literal_string \"Duration must be greater than 0\""},"value":"Duration must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0","typeString":"literal_string \"Duration must be greater than 0\""}],"id":1056,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1080:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1080:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1062,"nodeType":"ExpressionStatement","src":"1080:62:5"},{"assignments":[1065],"declarations":[{"constant":false,"id":1065,"mutability":"mutable","name":"newLottery","nameLocation":"1161:10:5","nodeType":"VariableDeclaration","scope":1124,"src":"1153:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"},"typeName":{"id":1064,"nodeType":"UserDefinedTypeName","pathNode":{"id":1063,"name":"Lottery","nodeType":"IdentifierPath","referencedDeclaration":987,"src":"1153:7:5"},"referencedDeclaration":987,"src":"1153:7:5","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}},"visibility":"internal"}],"id":1072,"initialValue":{"arguments":[{"expression":{"id":1069,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1186:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1186:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1174:11:5","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Lottery_$987_$","typeString":"function (address) returns (contract Lottery)"},"typeName":{"id":1067,"nodeType":"UserDefinedTypeName","pathNode":{"id":1066,"name":"Lottery","nodeType":"IdentifierPath","referencedDeclaration":987,"src":"1178:7:5"},"referencedDeclaration":987,"src":"1178:7:5","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1174:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}},"nodeType":"VariableDeclarationStatement","src":"1153:44:5"},{"expression":{"arguments":[{"id":1076,"name":"_timeInMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"1224:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1073,"name":"newLottery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"1207:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"start","nodeType":"MemberAccess","referencedDeclaration":701,"src":"1207:16:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1207:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1078,"nodeType":"ExpressionStatement","src":"1207:32:5"},{"assignments":[1080],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"endTime","nameLocation":"1258:7:5","nodeType":"VariableDeclaration","scope":1124,"src":"1250:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1089,"initialValue":{"arguments":[{"arguments":[{"hexValue":"3630","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1307:2:5","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"}],"expression":{"id":1084,"name":"_timeInMinutes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"1288:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":405,"src":"1288:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1288:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1081,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1268:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1268:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":375,"src":"1268:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1268:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1250:61:5"},{"expression":{"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1090,"name":"lotteriesMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"1322:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LotteryInfo_$1007_storage_$","typeString":"mapping(address => struct LotteryPool.LotteryInfo storage ref)"}},"id":1095,"indexExpression":{"arguments":[{"id":1093,"name":"newLottery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"1347:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}],"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1339:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:5","typeDescriptions":{}}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1339:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1322:37:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage","typeString":"struct LotteryPool.LotteryInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1097,"name":"newLottery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"1393:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}},{"expression":{"id":1098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1414:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1414:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1100,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"1435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1458:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1096,"name":"LotteryInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"1362:11:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_LotteryInfo_$1007_storage_ptr_$","typeString":"type(struct LotteryPool.LotteryInfo storage pointer)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["lotteryContract","manager","endTime","totalPlayers"],"nodeType":"FunctionCall","src":"1362:100:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_memory_ptr","typeString":"struct LotteryPool.LotteryInfo memory"}},"src":"1322:140:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage","typeString":"struct LotteryPool.LotteryInfo storage ref"}},"id":1104,"nodeType":"ExpressionStatement","src":"1322:140:5"},{"expression":{"arguments":[{"arguments":[{"id":1110,"name":"newLottery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"1514:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1506:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:5","typeDescriptions":{}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1506:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1105,"name":"lotteriesContractsAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"1473:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1473:32:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1473:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1113,"nodeType":"ExpressionStatement","src":"1473:53:5"},{"eventCall":{"arguments":[{"arguments":[{"id":1117,"name":"newLottery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"1565:10:5","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}],"id":1116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1557:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1115,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:5","typeDescriptions":{}}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1557:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1119,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1578:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1578:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1121,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"1590:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1114,"name":"LotteryCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1542:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1542:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"EmitStatement","src":"1537:61:5"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"846:140:5","text":" @dev Create a new lottery with a specified duration.\n @param _timeInMinutes The duration of the lottery in minutes."},"functionSelector":"8dd8c56d","id":1125,"implemented":true,"kind":"function","modifiers":[{"id":1052,"kind":"modifierInvocation","modifierName":{"id":1051,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1037,"src":"1047:9:5"},"nodeType":"ModifierInvocation","src":"1047:9:5"},{"id":1054,"kind":"modifierInvocation","modifierName":{"id":1053,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":142,"src":"1057:12:5"},"nodeType":"ModifierInvocation","src":"1057:12:5"}],"name":"createLottery","nameLocation":"1000:13:5","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"_timeInMinutes","nameLocation":"1022:14:5","nodeType":"VariableDeclaration","scope":1125,"src":"1014:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1014:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1013:24:5"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[],"src":"1070:0:5"},"scope":1299,"src":"991:614:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1134,"nodeType":"Block","src":"1812:58:5","statements":[{"expression":{"expression":{"id":1131,"name":"lotteriesContractsAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"1829:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1829:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1130,"id":1133,"nodeType":"Return","src":"1822:41:5"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"1611:128:5","text":" @dev Get the number of lottery contracts created in the pool.\n @return The number of lottery contracts."},"functionSelector":"98d5abbb","id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"getLotteryContractsCount","nameLocation":"1753:24:5","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"1777:2:5"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"1803:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1803:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1802:9:5"},"scope":1299,"src":"1744:126:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1148,"nodeType":"Block","src":"2185:57:5","statements":[{"expression":{"baseExpression":{"id":1144,"name":"lotteriesMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"2202:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LotteryInfo_$1007_storage_$","typeString":"mapping(address => struct LotteryPool.LotteryInfo storage ref)"}},"id":1146,"indexExpression":{"id":1145,"name":"_lotteryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"2219:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2202:33:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage","typeString":"struct LotteryPool.LotteryInfo storage ref"}},"functionReturnParameters":1143,"id":1147,"nodeType":"Return","src":"2195:40:5"}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"1876:201:5","text":" @dev Get details of a specific lottery contract.\n @param _lotteryAddress The address of the lottery contract.\n @return LotteryInfo struct containing contract information."},"functionSelector":"296df292","id":1149,"implemented":true,"kind":"function","modifiers":[],"name":"getLotteryContractDetails","nameLocation":"2091:25:5","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"_lotteryAddress","nameLocation":"2125:15:5","nodeType":"VariableDeclaration","scope":1149,"src":"2117:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"2117:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2116:25:5"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1149,"src":"2165:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_memory_ptr","typeString":"struct LotteryPool.LotteryInfo"},"typeName":{"id":1141,"nodeType":"UserDefinedTypeName","pathNode":{"id":1140,"name":"LotteryInfo","nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"2165:11:5"},"referencedDeclaration":1007,"src":"2165:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage_ptr","typeString":"struct LotteryPool.LotteryInfo"}},"visibility":"internal"}],"src":"2164:20:5"},"scope":1299,"src":"2082:160:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1200,"nodeType":"Block","src":"2465:382:5","statements":[{"assignments":[1162],"declarations":[{"constant":false,"id":1162,"mutability":"mutable","name":"_lotteryInfos","nameLocation":"2508:13:5","nodeType":"VariableDeclaration","scope":1200,"src":"2475:46:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr","typeString":"struct LotteryPool.LotteryInfo[]"},"typeName":{"baseType":{"id":1160,"nodeType":"UserDefinedTypeName","pathNode":{"id":1159,"name":"LotteryPool.LotteryInfo","nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"2475:23:5"},"referencedDeclaration":1007,"src":"2475:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage_ptr","typeString":"struct LotteryPool.LotteryInfo"}},"id":1161,"nodeType":"ArrayTypeName","src":"2475:25:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LotteryInfo_$1007_storage_$dyn_storage_ptr","typeString":"struct LotteryPool.LotteryInfo[]"}},"visibility":"internal"}],"id":1170,"initialValue":{"arguments":[{"expression":{"id":1167,"name":"lotteriesContractsAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2554:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2554:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2524:29:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct LotteryPool.LotteryInfo memory[] memory)"},"typeName":{"baseType":{"id":1164,"nodeType":"UserDefinedTypeName","pathNode":{"id":1163,"name":"LotteryPool.LotteryInfo","nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"2528:23:5"},"referencedDeclaration":1007,"src":"2528:23:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage_ptr","typeString":"struct LotteryPool.LotteryInfo"}},"id":1165,"nodeType":"ArrayTypeName","src":"2528:25:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LotteryInfo_$1007_storage_$dyn_storage_ptr","typeString":"struct LotteryPool.LotteryInfo[]"}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2524:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr","typeString":"struct LotteryPool.LotteryInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2475:114:5"},{"body":{"id":1196,"nodeType":"Block","src":"2664:147:5","statements":[{"assignments":[1183],"declarations":[{"constant":false,"id":1183,"mutability":"mutable","name":"_lotteryAddress","nameLocation":"2686:15:5","nodeType":"VariableDeclaration","scope":1196,"src":"2678:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"2678:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1187,"initialValue":{"baseExpression":{"id":1184,"name":"lotteriesContractsAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2704:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1186,"indexExpression":{"id":1185,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2732:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2704:30:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2678:56:5"},{"expression":{"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1188,"name":"_lotteryInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"2748:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr","typeString":"struct LotteryPool.LotteryInfo memory[] memory"}},"id":1190,"indexExpression":{"id":1189,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2762:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2748:16:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_memory_ptr","typeString":"struct LotteryPool.LotteryInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1191,"name":"lotteriesMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"2767:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LotteryInfo_$1007_storage_$","typeString":"mapping(address => struct LotteryPool.LotteryInfo storage ref)"}},"id":1193,"indexExpression":{"id":1192,"name":"_lotteryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"2784:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2767:33:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage","typeString":"struct LotteryPool.LotteryInfo storage ref"}},"src":"2748:52:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_memory_ptr","typeString":"struct LotteryPool.LotteryInfo memory"}},"id":1195,"nodeType":"ExpressionStatement","src":"2748:52:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2619:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1176,"name":"lotteriesContractsAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2623:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2623:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2619:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1197,"initializationExpression":{"assignments":[1172],"declarations":[{"constant":false,"id":1172,"mutability":"mutable","name":"i","nameLocation":"2612:1:5","nodeType":"VariableDeclaration","scope":1197,"src":"2604:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1174,"initialValue":{"hexValue":"30","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2616:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2604:13:5"},"loopExpression":{"expression":{"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2659:3:5","subExpression":{"id":1179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2659:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1181,"nodeType":"ExpressionStatement","src":"2659:3:5"},"nodeType":"ForStatement","src":"2599:212:5"},{"expression":{"id":1198,"name":"_lotteryInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"2827:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr","typeString":"struct LotteryPool.LotteryInfo memory[] memory"}},"functionReturnParameters":1156,"id":1199,"nodeType":"Return","src":"2820:20:5"}]},"documentation":{"id":1150,"nodeType":"StructuredDocumentation","src":"2248:129:5","text":" @dev Get details of a all lottery contract.\n @return LotteryInfo struct containing contract information."},"functionSelector":"386021b5","id":1201,"implemented":true,"kind":"function","modifiers":[],"name":"getLotteryContractsDetails","nameLocation":"2391:26:5","nodeType":"FunctionDefinition","parameters":{"id":1151,"nodeType":"ParameterList","parameters":[],"src":"2417:2:5"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1201,"src":"2443:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr","typeString":"struct LotteryPool.LotteryInfo[]"},"typeName":{"baseType":{"id":1153,"nodeType":"UserDefinedTypeName","pathNode":{"id":1152,"name":"LotteryInfo","nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"2443:11:5"},"referencedDeclaration":1007,"src":"2443:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage_ptr","typeString":"struct LotteryPool.LotteryInfo"}},"id":1154,"nodeType":"ArrayTypeName","src":"2443:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_LotteryInfo_$1007_storage_$dyn_storage_ptr","typeString":"struct LotteryPool.LotteryInfo[]"}},"visibility":"internal"}],"src":"2442:22:5"},"scope":1299,"src":"2382:465:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1210,"nodeType":"Block","src":"3057:51:5","statements":[{"expression":{"id":1208,"name":"lotteriesContractsAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"3074:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1207,"id":1209,"nodeType":"Return","src":"3067:34:5"}]},"documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"2853:134:5","text":" @dev Get the addresses of all lottery contracts in the pool.\n @return An array of lottery contract addresses."},"functionSelector":"bcc82ec4","id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"getLotteries","nameLocation":"3001:12:5","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[],"src":"3013:2:5"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1211,"src":"3039:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"3039:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1205,"nodeType":"ArrayTypeName","src":"3039:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3038:18:5"},"scope":1299,"src":"2992:116:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1262,"nodeType":"Block","src":"3362:358:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"_lotteryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"3380:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3407:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3399:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"3399:7:5","typeDescriptions":{}}},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3399:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3380:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c6f74746572792061646472657373","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3411:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb4ee7ccc904fc4dc20bc129220c478ddd4ee71dbfce7c47cf0cb0500a022473","typeString":"literal_string \"Invalid lottery address\""},"value":"Invalid lottery address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb4ee7ccc904fc4dc20bc129220c478ddd4ee71dbfce7c47cf0cb0500a022473","typeString":"literal_string \"Invalid lottery address\""}],"id":1221,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3372:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3372:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"ExpressionStatement","src":"3372:65:5"},{"assignments":[1233],"declarations":[{"constant":false,"id":1233,"mutability":"mutable","name":"lottery","nameLocation":"3467:7:5","nodeType":"VariableDeclaration","scope":1262,"src":"3447:27:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage_ptr","typeString":"struct LotteryPool.LotteryInfo"},"typeName":{"id":1232,"nodeType":"UserDefinedTypeName","pathNode":{"id":1231,"name":"LotteryInfo","nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"3447:11:5"},"referencedDeclaration":1007,"src":"3447:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage_ptr","typeString":"struct LotteryPool.LotteryInfo"}},"visibility":"internal"}],"id":1237,"initialValue":{"baseExpression":{"id":1234,"name":"lotteriesMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"3477:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_LotteryInfo_$1007_storage_$","typeString":"mapping(address => struct LotteryPool.LotteryInfo storage ref)"}},"id":1236,"indexExpression":{"id":1235,"name":"_lotteryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"3494:15:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:33:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage","typeString":"struct LotteryPool.LotteryInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3447:63:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1239,"name":"lottery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"3528:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage_ptr","typeString":"struct LotteryPool.LotteryInfo storage pointer"}},"id":1240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":1004,"src":"3528:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1241,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3547:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"3547:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3528:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6f747465727920686173206e6f7420656e64656420796574","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3564:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_14b0a8be84d07d61bcf74a33fcc6fa503cd75bcfaaf8a34b4e6af88a7c0b12b0","typeString":"literal_string \"Lottery has not ended yet\""},"value":"Lottery has not ended yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14b0a8be84d07d61bcf74a33fcc6fa503cd75bcfaaf8a34b4e6af88a7c0b12b0","typeString":"literal_string \"Lottery has not ended yet\""}],"id":1238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3520:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3520:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"ExpressionStatement","src":"3520:72:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1248,"name":"lottery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"3610:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage_ptr","typeString":"struct LotteryPool.LotteryInfo storage pointer"}},"id":1249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalPlayers","nodeType":"MemberAccess","referencedDeclaration":1006,"src":"3610:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3633:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3610:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f207061727469636970616e7473","id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3636:17:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f","typeString":"literal_string \"No participants\""},"value":"No participants"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f","typeString":"literal_string \"No participants\""}],"id":1247,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3602:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3602:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1254,"nodeType":"ExpressionStatement","src":"3602:52:5"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":1255,"name":"lottery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"3665:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_LotteryInfo_$1007_storage_ptr","typeString":"struct LotteryPool.LotteryInfo storage pointer"}},"id":1258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"lotteryContract","nodeType":"MemberAccess","referencedDeclaration":1000,"src":"3665:23:5","typeDescriptions":{"typeIdentifier":"t_contract$_Lottery_$987","typeString":"contract Lottery"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdrawRemainingFunds","nodeType":"MemberAccess","referencedDeclaration":946,"src":"3665:46:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1261,"nodeType":"ExpressionStatement","src":"3665:48:5"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"3114:154:5","text":" @dev Withdraw remaining funds from a lottery contract after it ends.\n @param _lotteryAddress The address of the lottery contract."},"functionSelector":"b3b5a9c9","id":1263,"implemented":true,"kind":"function","modifiers":[{"id":1217,"kind":"modifierInvocation","modifierName":{"id":1216,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1037,"src":"3339:9:5"},"nodeType":"ModifierInvocation","src":"3339:9:5"},{"id":1219,"kind":"modifierInvocation","modifierName":{"id":1218,"name":"nonReentrant","nodeType":"IdentifierPath","referencedDeclaration":142,"src":"3349:12:5"},"nodeType":"ModifierInvocation","src":"3349:12:5"}],"name":"withdrawRemainingFunds","nameLocation":"3282:22:5","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"_lotteryAddress","nameLocation":"3313:15:5","nodeType":"VariableDeclaration","scope":1263,"src":"3305:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"3305:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3304:25:5"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[],"src":"3362:0:5"},"scope":1299,"src":"3273:447:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1285,"nodeType":"Block","src":"3913:105:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1272,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3931:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3944:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"3944:7:5","typeDescriptions":{}}},"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3944:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3931:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206e6577206f776e65722061646472657373","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3956:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222","typeString":"literal_string \"Invalid new owner address\""},"value":"Invalid new owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222","typeString":"literal_string \"Invalid new owner address\""}],"id":1271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3923:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3923:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1280,"nodeType":"ExpressionStatement","src":"3923:61:5"},{"expression":{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1281,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"3994:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1282,"name":"_newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"4002:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3994:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1284,"nodeType":"ExpressionStatement","src":"3994:17:5"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"3726:123:5","text":" @dev Change the owner of the LotteryPool contract.\n @param _newOwner The address of the new owner."},"functionSelector":"a6f9dae1","id":1286,"implemented":true,"kind":"function","modifiers":[{"id":1269,"kind":"modifierInvocation","modifierName":{"id":1268,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1037,"src":"3903:9:5"},"nodeType":"ModifierInvocation","src":"3903:9:5"}],"name":"changeOwner","nameLocation":"3863:11:5","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"_newOwner","nameLocation":"3883:9:5","nodeType":"VariableDeclaration","scope":1286,"src":"3875:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"3875:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3874:19:5"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[],"src":"3913:0:5"},"scope":1299,"src":"3854:164:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1289,"nodeType":"Block","src":"4051:2:5","statements":[]},"id":1290,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[],"src":"4031:2:5"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[],"src":"4051:0:5"},"scope":1299,"src":"4024:29:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1297,"nodeType":"Block","src":"4129:45:5","statements":[{"expression":{"arguments":[{"hexValue":"4574686572206e6f74206163636570746564","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4146:20:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_10c030b8fde171d5eeb750d80503a36de026870bb3baac0a0b8e70e69750a5ee","typeString":"literal_string \"Ether not accepted\""},"value":"Ether not accepted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_10c030b8fde171d5eeb750d80503a36de026870bb3baac0a0b8e70e69750a5ee","typeString":"literal_string \"Ether not accepted\""}],"id":1293,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"4139:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4139:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"ExpressionStatement","src":"4139:28:5"}]},"id":1298,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[],"src":"4117:2:5"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[],"src":"4129:0:5"},"scope":1299,"src":"4109:65:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1300,"src":"203:3973:5","usedErrors":[]}],"src":"32:4145:5"},"id":5}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":123,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2f7155ee744f87fca2d7f7865c1ce5e24156404cf73335c88590187a029e3ce64736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xF7 ISZERO 0x5E 0xE7 DIFFICULTY 0xF8 PUSH32 0xCA2D7F7865C1CE5E24156404CF73335C88590187A029E3CE64736F6C63430008 EXP STOP CALLER ","sourceMap":"482:6210:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2f7155ee744f87fca2d7f7865c1ce5e24156404cf73335c88590187a029e3ce64736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xF7 ISZERO 0x5E 0xE7 DIFFICULTY 0xF8 PUSH32 0xCA2D7F7865C1CE5E24156404CF73335C88590187A029E3CE64736F6C63430008 EXP STOP CALLER ","sourceMap":"482:6210:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Lottery.sol":{"Lottery":{"abi":[{"inputs":[{"internalType":"address","name":"_manager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"CommissionWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"winningPrize","type":"uint256"}],"name":"WinnerDeclared","type":"event"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"changeEntryFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"closeIfEnded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"commissionBasisPoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"end","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"enter","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllPlayers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRemainingTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lotteryStatus","outputs":[{"internalType":"enum Lottery.LotteryStatus","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"manager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"players","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_basisPoints","type":"uint256"}],"name":"setCommissionBasisPoints","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_timeInMinutes","type":"uint256"}],"name":"start","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"winner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawRemainingFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"changeEntryFee(uint256)":{"details":"Change the entry fee for participating in the lottery.","params":{"_newFee":"The new entry fee in wei."}},"closeIfEnded()":{"details":"End the lottery if blocktime >= endTime"},"constructor":{"details":"Constructor function to initialize the lottery contract."},"end()":{"details":"End the lottery and select a random winner."},"enter()":{"details":"Enter the lottery by sending an entry fee."},"getAllPlayers()":{"details":"Get details of a all players.","returns":{"_0":"address[] containing players."}},"getRemainingTime()":{"details":"Get the remaining time until the lottery ends.","returns":{"_0":"The remaining time in seconds."}},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setCommissionBasisPoints(uint256)":{"details":"Set the commission basis points.","params":{"_basisPoints":"The new commission basis points."}},"start(uint256)":{"details":"Start the lottery with a specified duration.","params":{"_timeInMinutes":"The duration of the lottery in minutes."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawRemainingFunds()":{"details":"Allows the owner to withdraw any remaining funds after the lottery ends."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_594":{"entryPoint":null,"id":594,"parameterSlots":1,"returnSlots":0},"@_msgSender_189":{"entryPoint":null,"id":189,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":126,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":206,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:438:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:6","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:6"},"nodeType":"YulFunctionCall","src":"143:12:6"},"nodeType":"YulExpressionStatement","src":"143:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:6"},"nodeType":"YulFunctionCall","src":"112:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:6"},"nodeType":"YulFunctionCall","src":"108:32:6"},"nodeType":"YulIf","src":"105:52:6"},{"nodeType":"YulVariableDeclaration","src":"166:29:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:6"},"nodeType":"YulFunctionCall","src":"179:16:6"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:6"},"nodeType":"YulFunctionCall","src":"260:12:6"},"nodeType":"YulExpressionStatement","src":"260:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:6"},"nodeType":"YulFunctionCall","src":"239:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:6"},"nodeType":"YulFunctionCall","src":"235:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:6"},"nodeType":"YulFunctionCall","src":"224:31:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:6"},"nodeType":"YulFunctionCall","src":"214:42:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:6"},"nodeType":"YulFunctionCall","src":"207:50:6"},"nodeType":"YulIf","src":"204:70:6"},{"nodeType":"YulAssignment","src":"283:15:6","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:6"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:6","type":""}],"src":"14:290:6"},{"body":{"nodeType":"YulBlock","src":"341:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"358:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"365:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"370:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"361:3:6"},"nodeType":"YulFunctionCall","src":"361:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"351:6:6"},"nodeType":"YulFunctionCall","src":"351:31:6"},"nodeType":"YulExpressionStatement","src":"351:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"398:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"401:4:6","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"391:6:6"},"nodeType":"YulFunctionCall","src":"391:15:6"},"nodeType":"YulExpressionStatement","src":"391:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"422:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"425:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"415:6:6"},"nodeType":"YulFunctionCall","src":"415:15:6"},"nodeType":"YulExpressionStatement","src":"415:15:6"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"309:127:6"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x16345785D8A0000 PUSH1 0x2 SSTORE PUSH2 0x1F4 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10D2 CODESIZE SUB DUP1 PUSH2 0x10D2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x41 SWAP2 PUSH2 0xCE JUMP JUMPDEST PUSH2 0x4A CALLER PUSH2 0x7E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFC5 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDFBF53AE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEFBE1C1C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF00F6921 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xF7D978A2 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xEF86CE8E EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xEFA1C482 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xEFB98BCF EQ PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x481C6A75 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x89FDFD05 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95805DAD EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72EA61C EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xD683DD9 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xDED5DCF EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x15C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xD54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x340 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1B6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x384 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1B6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x463 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x5E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x77B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x7C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xB70 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI POP PUSH1 0x1 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x375 JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x373 JUMPI PUSH2 0x373 PUSH2 0xD3E JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x382 JUMPI PUSH2 0x382 PUSH2 0x7C4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x38C PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x382 PUSH1 0x0 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x39E PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x54696D65206475726174696F6E206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x45C PUSH2 0x455 DUP4 PUSH1 0x3C PUSH2 0xC77 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x47C JUMPI PUSH2 0x47C PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x131BDD1D195C9E481B9BDD081CDD185C9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x505 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x456E74727920666565206973206C657373 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2A34B6B29034B9903AB817 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x54D CALLER PUSH2 0xC96 JUMP JUMPDEST ISZERO PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C72656164792061207061727469636970616E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x382 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x5EB PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x605 JUMPI PUSH2 0x605 PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072656D61696E696E672066756E647320746F2077697468647261770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6F8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0xE51 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x74B JUMPI PUSH2 0x74B PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x76D DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6FE JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0xD3E JUMP JUMPDEST EQ ISZERO PUSH2 0x7BE JUMPI TIMESTAMP PUSH1 0x4 SLOAD GT PUSH2 0x7AB JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT ISZERO PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F7420656E6420746865206C6F7474657279206265666F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65207468652074696D65 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F207061727469636970616E7473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x8CA SWAP2 DIFFICULTY SWAP2 TIMESTAMP SWAP2 CALLER SWAP1 PUSH1 0x20 ADD PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x902 JUMPI PUSH2 0x902 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 SLOAD SELFBALANCE SWAP2 SWAP1 PUSH2 0x94B SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x945 SWAP1 DUP6 SWAP1 PUSH2 0xC77 JUMP JUMPDEST SWAP1 PUSH2 0xD00 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x959 DUP3 DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x9A1 PUSH1 0x1 PUSH1 0x0 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x3CF1AF53E79884A92609CE59DB1EC9F584D88E2D14C8EABA43A21DB81318301E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xC2BB3206848157E57E737EEC7E141F06F5DE585E2F1C0F0EC60A04F45A2C0031 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 DUP6 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D697373696F6E20626173697320706F696E74732063616E6E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x78636565642031303025 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xAD5 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xB43 DUP2 PUSH2 0xC27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xB78 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74727920666565206D7573742062652067726561746572207468616E2030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xCF7 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCC1 JUMPI PUSH2 0xCC1 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xCE5 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xCEF DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC9A JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF7B JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB43 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD26 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xD76 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDD6 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDB1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206C6F747465727920737461747573 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE67 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xEAA PUSH2 0xE67 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 DUP2 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP6 SLOAD DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEF1 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xECC JUMP JUMPDEST POP POP POP PUSH1 0x60 SWAP5 SWAP1 SWAP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 MSTORE POP POP PUSH1 0x14 SWAP1 SWAP2 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF3F JUMPI PUSH2 0xF3F PUSH2 0xF1A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF5E JUMPI PUSH2 0xF5E PUSH2 0xE67 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF76 JUMPI PUSH2 0xF76 PUSH2 0xE67 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF8A JUMPI PUSH2 0xF8A PUSH2 0xF1A JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xEE BASEFEE SWAP15 SWAP1 0xA8 SWAP4 GAS SWAP6 OR 0x24 CALLDATALOAD 0xB4 0x1F SSTORE KECCAK256 0x5F CREATE2 0xB9 0x2C SELFBALANCE PUSH15 0xEC67044BB936A25D680B64736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ","sourceMap":"169:5334:4:-:0;;;292:9;266:35;;429:3;390:42;;1027:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:2;936:18:0;:32::i;:::-;1067:13:4;:35;;-1:-1:-1;;1067:35:4;1083:19;1067:35;;;1112:7;:18;;-1:-1:-1;;;;;1112:18:4;;;;-1:-1:-1;;;;;;1112:18:4;;;;;;;;;169:5334;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:290:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;309:127::-;169:5334:4;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":3021,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_189":{"entryPoint":null,"id":189,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":3111,"id":111,"parameterSlots":1,"returnSlots":0},"@add_375":{"entryPoint":3210,"id":375,"parameterSlots":2,"returnSlots":1},"@changeEntryFee_966":{"entryPoint":2928,"id":966,"parameterSlots":1,"returnSlots":0},"@closeIfEnded_836":{"entryPoint":832,"id":836,"parameterSlots":0,"returnSlots":0},"@commissionBasisPoints_535":{"entryPoint":null,"id":535,"parameterSlots":0,"returnSlots":0},"@div_420":{"entryPoint":3328,"id":420,"parameterSlots":2,"returnSlots":1},"@endTime_530":{"entryPoint":null,"id":530,"parameterSlots":0,"returnSlots":0},"@end_812":{"entryPoint":1988,"id":812,"parameterSlots":0,"returnSlots":0},"@enter_878":{"entryPoint":1123,"id":878,"parameterSlots":0,"returnSlots":0},"@entryFee_526":{"entryPoint":null,"id":526,"parameterSlots":0,"returnSlots":0},"@getAllPlayers_665":{"entryPoint":1710,"id":665,"parameterSlots":0,"returnSlots":1},"@getRemainingTime_622":{"entryPoint":1915,"id":622,"parameterSlots":0,"returnSlots":1},"@isParticipating_911":{"entryPoint":3222,"id":911,"parameterSlots":1,"returnSlots":1},"@lotteryStatus_552":{"entryPoint":null,"id":552,"parameterSlots":0,"returnSlots":0},"@manager_532":{"entryPoint":null,"id":532,"parameterSlots":0,"returnSlots":0},"@mul_405":{"entryPoint":3191,"id":405,"parameterSlots":2,"returnSlots":1},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@players_523":{"entryPoint":2886,"id":523,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":900,"id":68,"parameterSlots":0,"returnSlots":0},"@setCommissionBasisPoints_986":{"entryPoint":2651,"id":986,"parameterSlots":1,"returnSlots":0},"@start_701":{"entryPoint":918,"id":701,"parameterSlots":1,"returnSlots":0},"@transferOwnership_91":{"entryPoint":2765,"id":91,"parameterSlots":1,"returnSlots":0},"@winner_528":{"entryPoint":null,"id":528,"parameterSlots":0,"returnSlots":0},"@withdrawRemainingFunds_946":{"entryPoint":1507,"id":946,"parameterSlots":0,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":3554,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3452,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_uint256_t_array$_t_address_$dyn_storage_t_address__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":3759,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3477,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_LotteryStatus_$549__to_t_uint8__fromStack_reversed":{"entryPoint":3412,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0176e3ab2d4b949c8cdf74389e145f1cb17b49ad99ca6e2210e1f76690a23bb5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0a07f15ed8fda2b0e9813162ada4a5f85607aa44d111269fff93ed22e29a1b29__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3357eaf62de67f3cfd864ae72873026f55eab5ea856f0b110d8bb2603b4e6445__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3595,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6700e2b82b5ba714f445e23281b296feecb156559c232baa389ee1d385c2338f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7cc5d79b1c73ccef75c9f1f675b6f82d5612beb368d152012cef1c19739968c1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_82d95a0200688b2b701a66cdd6076f2568570fdd7df3373b72d40e59a0718e2c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9cea1712fe99ba3fd837ee413ddf8e57c55c7a9c5cabbc44655aac74c46400b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c3296dabe30e4c1074a5e3c32184d39b477e1b44c10a182c99d9e25124654231__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d1233424687cc54989fb956693559ffe4af8d14501c9505562d598cfa17f1ec5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f7e2564710dc6082efe7dd2929a7a93d8953df30d2554971f2c009ceb346aff6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3939,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3963,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3908,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3736,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":3709,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":3888,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":3687,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3866,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":3390,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3665,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3643,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9290:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:76:6","statements":[{"nodeType":"YulAssignment","src":"125:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:6"},"nodeType":"YulFunctionCall","src":"133:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"178:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:6"},"nodeType":"YulFunctionCall","src":"160:25:6"},"nodeType":"YulExpressionStatement","src":"160:25:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:6","type":""}],"src":"14:177:6"},{"body":{"nodeType":"YulBlock","src":"228:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"245:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"252:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"257:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"248:3:6"},"nodeType":"YulFunctionCall","src":"248:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"238:6:6"},"nodeType":"YulFunctionCall","src":"238:31:6"},"nodeType":"YulExpressionStatement","src":"238:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"285:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"288:4:6","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"278:6:6"},"nodeType":"YulFunctionCall","src":"278:15:6"},"nodeType":"YulExpressionStatement","src":"278:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:6"},"nodeType":"YulFunctionCall","src":"302:15:6"},"nodeType":"YulExpressionStatement","src":"302:15:6"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"196:127:6"},{"body":{"nodeType":"YulBlock","src":"444:229:6","statements":[{"nodeType":"YulAssignment","src":"454:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"466:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"477:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"462:3:6"},"nodeType":"YulFunctionCall","src":"462:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"454:4:6"}]},{"body":{"nodeType":"YulBlock","src":"522:111:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"543:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"550:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"555:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"546:3:6"},"nodeType":"YulFunctionCall","src":"546:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"536:6:6"},"nodeType":"YulFunctionCall","src":"536:31:6"},"nodeType":"YulExpressionStatement","src":"536:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"587:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"590:4:6","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"580:6:6"},"nodeType":"YulFunctionCall","src":"580:15:6"},"nodeType":"YulExpressionStatement","src":"580:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"615:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"618:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"608:6:6"},"nodeType":"YulFunctionCall","src":"608:15:6"},"nodeType":"YulExpressionStatement","src":"608:15:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"502:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"510:1:6","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"499:2:6"},"nodeType":"YulFunctionCall","src":"499:13:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"492:6:6"},"nodeType":"YulFunctionCall","src":"492:21:6"},"nodeType":"YulIf","src":"489:144:6"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"649:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"660:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"642:6:6"},"nodeType":"YulFunctionCall","src":"642:25:6"},"nodeType":"YulExpressionStatement","src":"642:25:6"}]},"name":"abi_encode_tuple_t_enum$_LotteryStatus_$549__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"413:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"424:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"435:4:6","type":""}],"src":"328:345:6"},{"body":{"nodeType":"YulBlock","src":"779:102:6","statements":[{"nodeType":"YulAssignment","src":"789:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"812:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"797:3:6"},"nodeType":"YulFunctionCall","src":"797:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"789:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"831:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"846:6:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"862:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"867:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"858:3:6"},"nodeType":"YulFunctionCall","src":"858:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"871:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"854:3:6"},"nodeType":"YulFunctionCall","src":"854:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"842:3:6"},"nodeType":"YulFunctionCall","src":"842:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"824:6:6"},"nodeType":"YulFunctionCall","src":"824:51:6"},"nodeType":"YulExpressionStatement","src":"824:51:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"748:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"759:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"770:4:6","type":""}],"src":"678:203:6"},{"body":{"nodeType":"YulBlock","src":"956:110:6","statements":[{"body":{"nodeType":"YulBlock","src":"1002:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1011:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1014:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1004:6:6"},"nodeType":"YulFunctionCall","src":"1004:12:6"},"nodeType":"YulExpressionStatement","src":"1004:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"977:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"986:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"973:3:6"},"nodeType":"YulFunctionCall","src":"973:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"998:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"969:3:6"},"nodeType":"YulFunctionCall","src":"969:32:6"},"nodeType":"YulIf","src":"966:52:6"},{"nodeType":"YulAssignment","src":"1027:33:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1050:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1037:12:6"},"nodeType":"YulFunctionCall","src":"1037:23:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1027:6:6"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"922:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"933:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"945:6:6","type":""}],"src":"886:180:6"},{"body":{"nodeType":"YulBlock","src":"1222:507:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1232:12:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1242:2:6","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1236:2:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1253:32:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1271:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1282:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1267:3:6"},"nodeType":"YulFunctionCall","src":"1267:18:6"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1257:6:6","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1301:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1312:2:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1294:6:6"},"nodeType":"YulFunctionCall","src":"1294:21:6"},"nodeType":"YulExpressionStatement","src":"1294:21:6"},{"nodeType":"YulVariableDeclaration","src":"1324:17:6","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1335:6:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1328:3:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1350:27:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1364:5:6"},"nodeType":"YulFunctionCall","src":"1364:13:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1354:6:6","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1393:6:6"},{"name":"length","nodeType":"YulIdentifier","src":"1401:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1386:6:6"},"nodeType":"YulFunctionCall","src":"1386:22:6"},"nodeType":"YulExpressionStatement","src":"1386:22:6"},{"nodeType":"YulAssignment","src":"1417:25:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1428:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1439:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1424:3:6"},"nodeType":"YulFunctionCall","src":"1424:18:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1417:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"1451:29:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1469:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1477:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1465:3:6"},"nodeType":"YulFunctionCall","src":"1465:15:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1455:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1489:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1498:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1493:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1557:146:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1578:3:6"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1593:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1587:5:6"},"nodeType":"YulFunctionCall","src":"1587:13:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1610:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1615:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1606:3:6"},"nodeType":"YulFunctionCall","src":"1606:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"1619:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1602:3:6"},"nodeType":"YulFunctionCall","src":"1602:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1583:3:6"},"nodeType":"YulFunctionCall","src":"1583:39:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1571:6:6"},"nodeType":"YulFunctionCall","src":"1571:52:6"},"nodeType":"YulExpressionStatement","src":"1571:52:6"},{"nodeType":"YulAssignment","src":"1636:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1647:3:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1652:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1643:3:6"},"nodeType":"YulFunctionCall","src":"1643:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1636:3:6"}]},{"nodeType":"YulAssignment","src":"1668:25:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1682:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1690:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1678:3:6"},"nodeType":"YulFunctionCall","src":"1678:15:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1668:6:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1519:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"1522:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1516:2:6"},"nodeType":"YulFunctionCall","src":"1516:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1530:18:6","statements":[{"nodeType":"YulAssignment","src":"1532:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1541:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"1544:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1537:3:6"},"nodeType":"YulFunctionCall","src":"1537:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1532:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"1512:3:6","statements":[]},"src":"1508:195:6"},{"nodeType":"YulAssignment","src":"1712:11:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"1720:3:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1712:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1191:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1202:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1213:4:6","type":""}],"src":"1071:658:6"},{"body":{"nodeType":"YulBlock","src":"1804:216:6","statements":[{"body":{"nodeType":"YulBlock","src":"1850:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1859:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1862:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1852:6:6"},"nodeType":"YulFunctionCall","src":"1852:12:6"},"nodeType":"YulExpressionStatement","src":"1852:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1825:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1834:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1821:3:6"},"nodeType":"YulFunctionCall","src":"1821:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"1846:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1817:3:6"},"nodeType":"YulFunctionCall","src":"1817:32:6"},"nodeType":"YulIf","src":"1814:52:6"},{"nodeType":"YulVariableDeclaration","src":"1875:36:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1901:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1888:12:6"},"nodeType":"YulFunctionCall","src":"1888:23:6"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1879:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1974:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1983:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1986:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1976:6:6"},"nodeType":"YulFunctionCall","src":"1976:12:6"},"nodeType":"YulExpressionStatement","src":"1976:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1933:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1944:5:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1959:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1964:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1955:3:6"},"nodeType":"YulFunctionCall","src":"1955:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"1968:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1951:3:6"},"nodeType":"YulFunctionCall","src":"1951:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1940:3:6"},"nodeType":"YulFunctionCall","src":"1940:31:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1930:2:6"},"nodeType":"YulFunctionCall","src":"1930:42:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1923:6:6"},"nodeType":"YulFunctionCall","src":"1923:50:6"},"nodeType":"YulIf","src":"1920:70:6"},{"nodeType":"YulAssignment","src":"1999:15:6","value":{"name":"value","nodeType":"YulIdentifier","src":"2009:5:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1999:6:6"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1770:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1781:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1793:6:6","type":""}],"src":"1734:286:6"},{"body":{"nodeType":"YulBlock","src":"2199:172:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2216:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2227:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2209:6:6"},"nodeType":"YulFunctionCall","src":"2209:21:6"},"nodeType":"YulExpressionStatement","src":"2209:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2250:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2261:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2246:3:6"},"nodeType":"YulFunctionCall","src":"2246:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"2266:2:6","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2239:6:6"},"nodeType":"YulFunctionCall","src":"2239:30:6"},"nodeType":"YulExpressionStatement","src":"2239:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2289:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2300:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2285:3:6"},"nodeType":"YulFunctionCall","src":"2285:18:6"},{"hexValue":"496e76616c6964206c6f747465727920737461747573","kind":"string","nodeType":"YulLiteral","src":"2305:24:6","type":"","value":"Invalid lottery status"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2278:6:6"},"nodeType":"YulFunctionCall","src":"2278:52:6"},"nodeType":"YulExpressionStatement","src":"2278:52:6"},{"nodeType":"YulAssignment","src":"2339:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2351:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2362:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:6"},"nodeType":"YulFunctionCall","src":"2347:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2339:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_3357eaf62de67f3cfd864ae72873026f55eab5ea856f0b110d8bb2603b4e6445__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2176:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2190:4:6","type":""}],"src":"2025:346:6"},{"body":{"nodeType":"YulBlock","src":"2550:226:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2567:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2578:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2560:6:6"},"nodeType":"YulFunctionCall","src":"2560:21:6"},"nodeType":"YulExpressionStatement","src":"2560:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2601:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2612:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2597:3:6"},"nodeType":"YulFunctionCall","src":"2597:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"2617:2:6","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2590:6:6"},"nodeType":"YulFunctionCall","src":"2590:30:6"},"nodeType":"YulExpressionStatement","src":"2590:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2640:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2651:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2636:3:6"},"nodeType":"YulFunctionCall","src":"2636:18:6"},{"hexValue":"54696d65206475726174696f6e206d7573742062652067726561746572207468","kind":"string","nodeType":"YulLiteral","src":"2656:34:6","type":"","value":"Time duration must be greater th"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2629:6:6"},"nodeType":"YulFunctionCall","src":"2629:62:6"},"nodeType":"YulExpressionStatement","src":"2629:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2711:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2722:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2707:3:6"},"nodeType":"YulFunctionCall","src":"2707:18:6"},{"hexValue":"616e2030","kind":"string","nodeType":"YulLiteral","src":"2727:6:6","type":"","value":"an 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2700:6:6"},"nodeType":"YulFunctionCall","src":"2700:34:6"},"nodeType":"YulExpressionStatement","src":"2700:34:6"},{"nodeType":"YulAssignment","src":"2743:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2755:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2766:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2751:3:6"},"nodeType":"YulFunctionCall","src":"2751:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2743:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_c3296dabe30e4c1074a5e3c32184d39b477e1b44c10a182c99d9e25124654231__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2527:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2541:4:6","type":""}],"src":"2376:400:6"},{"body":{"nodeType":"YulBlock","src":"2955:169:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2972:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2983:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2965:6:6"},"nodeType":"YulFunctionCall","src":"2965:21:6"},"nodeType":"YulExpressionStatement","src":"2965:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3006:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3017:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3002:3:6"},"nodeType":"YulFunctionCall","src":"3002:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"3022:2:6","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2995:6:6"},"nodeType":"YulFunctionCall","src":"2995:30:6"},"nodeType":"YulExpressionStatement","src":"2995:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3045:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3056:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3041:3:6"},"nodeType":"YulFunctionCall","src":"3041:18:6"},{"hexValue":"4c6f7474657279206e6f742073746172746564","kind":"string","nodeType":"YulLiteral","src":"3061:21:6","type":"","value":"Lottery not started"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3034:6:6"},"nodeType":"YulFunctionCall","src":"3034:49:6"},"nodeType":"YulExpressionStatement","src":"3034:49:6"},{"nodeType":"YulAssignment","src":"3092:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3104:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3115:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3100:3:6"},"nodeType":"YulFunctionCall","src":"3100:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3092:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_6700e2b82b5ba714f445e23281b296feecb156559c232baa389ee1d385c2338f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2932:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2946:4:6","type":""}],"src":"2781:343:6"},{"body":{"nodeType":"YulBlock","src":"3303:167:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3320:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3331:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3313:6:6"},"nodeType":"YulFunctionCall","src":"3313:21:6"},"nodeType":"YulExpressionStatement","src":"3313:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3354:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3365:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3350:3:6"},"nodeType":"YulFunctionCall","src":"3350:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"3370:2:6","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3343:6:6"},"nodeType":"YulFunctionCall","src":"3343:30:6"},"nodeType":"YulExpressionStatement","src":"3343:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3393:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3404:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3389:3:6"},"nodeType":"YulFunctionCall","src":"3389:18:6"},{"hexValue":"456e74727920666565206973206c657373","kind":"string","nodeType":"YulLiteral","src":"3409:19:6","type":"","value":"Entry fee is less"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3382:6:6"},"nodeType":"YulFunctionCall","src":"3382:47:6"},"nodeType":"YulExpressionStatement","src":"3382:47:6"},{"nodeType":"YulAssignment","src":"3438:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3450:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3461:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:6"},"nodeType":"YulFunctionCall","src":"3446:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3438:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_d1233424687cc54989fb956693559ffe4af8d14501c9505562d598cfa17f1ec5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3280:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3294:4:6","type":""}],"src":"3129:341:6"},{"body":{"nodeType":"YulBlock","src":"3649:161:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3666:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3677:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3659:6:6"},"nodeType":"YulFunctionCall","src":"3659:21:6"},"nodeType":"YulExpressionStatement","src":"3659:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3700:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3711:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3696:3:6"},"nodeType":"YulFunctionCall","src":"3696:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"3716:2:6","type":"","value":"11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3689:6:6"},"nodeType":"YulFunctionCall","src":"3689:30:6"},"nodeType":"YulExpressionStatement","src":"3689:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3739:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3750:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3735:3:6"},"nodeType":"YulFunctionCall","src":"3735:18:6"},{"hexValue":"54696d652069732075702e","kind":"string","nodeType":"YulLiteral","src":"3755:13:6","type":"","value":"Time is up."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3728:6:6"},"nodeType":"YulFunctionCall","src":"3728:41:6"},"nodeType":"YulExpressionStatement","src":"3728:41:6"},{"nodeType":"YulAssignment","src":"3778:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3790:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3801:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3786:3:6"},"nodeType":"YulFunctionCall","src":"3786:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3778:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_7cc5d79b1c73ccef75c9f1f675b6f82d5612beb368d152012cef1c19739968c1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3626:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3640:4:6","type":""}],"src":"3475:335:6"},{"body":{"nodeType":"YulBlock","src":"3989:179:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4006:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4017:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3999:6:6"},"nodeType":"YulFunctionCall","src":"3999:21:6"},"nodeType":"YulExpressionStatement","src":"3999:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4040:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4051:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:6"},"nodeType":"YulFunctionCall","src":"4036:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"4056:2:6","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4029:6:6"},"nodeType":"YulFunctionCall","src":"4029:30:6"},"nodeType":"YulExpressionStatement","src":"4029:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4079:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4090:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4075:3:6"},"nodeType":"YulFunctionCall","src":"4075:18:6"},{"hexValue":"596f752061726520616c72656164792061207061727469636970616e74","kind":"string","nodeType":"YulLiteral","src":"4095:31:6","type":"","value":"You are already a participant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4068:6:6"},"nodeType":"YulFunctionCall","src":"4068:59:6"},"nodeType":"YulExpressionStatement","src":"4068:59:6"},{"nodeType":"YulAssignment","src":"4136:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4148:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4159:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4144:3:6"},"nodeType":"YulFunctionCall","src":"4144:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4136:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_0a07f15ed8fda2b0e9813162ada4a5f85607aa44d111269fff93ed22e29a1b29__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3966:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3980:4:6","type":""}],"src":"3815:353:6"},{"body":{"nodeType":"YulBlock","src":"4347:180:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4364:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4375:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4357:6:6"},"nodeType":"YulFunctionCall","src":"4357:21:6"},"nodeType":"YulExpressionStatement","src":"4357:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4398:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4409:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4394:3:6"},"nodeType":"YulFunctionCall","src":"4394:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"4414:2:6","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4387:6:6"},"nodeType":"YulFunctionCall","src":"4387:30:6"},"nodeType":"YulExpressionStatement","src":"4387:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4437:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4448:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4433:3:6"},"nodeType":"YulFunctionCall","src":"4433:18:6"},{"hexValue":"4e6f2072656d61696e696e672066756e647320746f207769746864726177","kind":"string","nodeType":"YulLiteral","src":"4453:32:6","type":"","value":"No remaining funds to withdraw"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4426:6:6"},"nodeType":"YulFunctionCall","src":"4426:60:6"},"nodeType":"YulExpressionStatement","src":"4426:60:6"},{"nodeType":"YulAssignment","src":"4495:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4507:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4518:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4503:3:6"},"nodeType":"YulFunctionCall","src":"4503:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4495:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_82d95a0200688b2b701a66cdd6076f2568570fdd7df3373b72d40e59a0718e2c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4324:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4338:4:6","type":""}],"src":"4173:354:6"},{"body":{"nodeType":"YulBlock","src":"4564:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4581:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4588:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4593:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4584:3:6"},"nodeType":"YulFunctionCall","src":"4584:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4574:6:6"},"nodeType":"YulFunctionCall","src":"4574:31:6"},"nodeType":"YulExpressionStatement","src":"4574:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4621:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4624:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4614:6:6"},"nodeType":"YulFunctionCall","src":"4614:15:6"},"nodeType":"YulExpressionStatement","src":"4614:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4645:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4648:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4638:6:6"},"nodeType":"YulFunctionCall","src":"4638:15:6"},"nodeType":"YulExpressionStatement","src":"4638:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4532:127:6"},{"body":{"nodeType":"YulBlock","src":"4696:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4713:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4720:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4725:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4716:3:6"},"nodeType":"YulFunctionCall","src":"4716:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4706:6:6"},"nodeType":"YulFunctionCall","src":"4706:31:6"},"nodeType":"YulExpressionStatement","src":"4706:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4753:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4756:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4746:6:6"},"nodeType":"YulFunctionCall","src":"4746:15:6"},"nodeType":"YulExpressionStatement","src":"4746:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4777:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4780:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4770:6:6"},"nodeType":"YulFunctionCall","src":"4770:15:6"},"nodeType":"YulExpressionStatement","src":"4770:15:6"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4664:127:6"},{"body":{"nodeType":"YulBlock","src":"4828:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4845:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4852:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4857:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4848:3:6"},"nodeType":"YulFunctionCall","src":"4848:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4838:6:6"},"nodeType":"YulFunctionCall","src":"4838:31:6"},"nodeType":"YulExpressionStatement","src":"4838:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4885:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4888:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4878:6:6"},"nodeType":"YulFunctionCall","src":"4878:15:6"},"nodeType":"YulExpressionStatement","src":"4878:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4909:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4912:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4902:6:6"},"nodeType":"YulFunctionCall","src":"4902:15:6"},"nodeType":"YulExpressionStatement","src":"4902:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4796:127:6"},{"body":{"nodeType":"YulBlock","src":"4975:88:6","statements":[{"body":{"nodeType":"YulBlock","src":"5006:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5008:16:6"},"nodeType":"YulFunctionCall","src":"5008:18:6"},"nodeType":"YulExpressionStatement","src":"5008:18:6"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4991:5:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5002:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4998:3:6"},"nodeType":"YulFunctionCall","src":"4998:6:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4988:2:6"},"nodeType":"YulFunctionCall","src":"4988:17:6"},"nodeType":"YulIf","src":"4985:43:6"},{"nodeType":"YulAssignment","src":"5037:20:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5048:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"5055:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5044:3:6"},"nodeType":"YulFunctionCall","src":"5044:13:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5037:3:6"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4957:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4967:3:6","type":""}],"src":"4928:135:6"},{"body":{"nodeType":"YulBlock","src":"5117:76:6","statements":[{"body":{"nodeType":"YulBlock","src":"5139:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5141:16:6"},"nodeType":"YulFunctionCall","src":"5141:18:6"},"nodeType":"YulExpressionStatement","src":"5141:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5133:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"5136:1:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5130:2:6"},"nodeType":"YulFunctionCall","src":"5130:8:6"},"nodeType":"YulIf","src":"5127:34:6"},{"nodeType":"YulAssignment","src":"5170:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5182:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"5185:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5178:3:6"},"nodeType":"YulFunctionCall","src":"5178:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"5170:4:6"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5099:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"5102:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"5108:4:6","type":""}],"src":"5068:125:6"},{"body":{"nodeType":"YulBlock","src":"5372:232:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5389:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5400:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5382:6:6"},"nodeType":"YulFunctionCall","src":"5382:21:6"},"nodeType":"YulExpressionStatement","src":"5382:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5423:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5434:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5419:3:6"},"nodeType":"YulFunctionCall","src":"5419:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"5439:2:6","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5412:6:6"},"nodeType":"YulFunctionCall","src":"5412:30:6"},"nodeType":"YulExpressionStatement","src":"5412:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5462:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5473:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5458:3:6"},"nodeType":"YulFunctionCall","src":"5458:18:6"},{"hexValue":"596f752063616e6e6f7420656e6420746865206c6f7474657279206265666f72","kind":"string","nodeType":"YulLiteral","src":"5478:34:6","type":"","value":"You cannot end the lottery befor"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5451:6:6"},"nodeType":"YulFunctionCall","src":"5451:62:6"},"nodeType":"YulExpressionStatement","src":"5451:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5533:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5544:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5529:3:6"},"nodeType":"YulFunctionCall","src":"5529:18:6"},{"hexValue":"65207468652074696d65","kind":"string","nodeType":"YulLiteral","src":"5549:12:6","type":"","value":"e the time"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5522:6:6"},"nodeType":"YulFunctionCall","src":"5522:40:6"},"nodeType":"YulExpressionStatement","src":"5522:40:6"},{"nodeType":"YulAssignment","src":"5571:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5583:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5594:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5579:3:6"},"nodeType":"YulFunctionCall","src":"5579:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5571:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_9cea1712fe99ba3fd837ee413ddf8e57c55c7a9c5cabbc44655aac74c46400b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5349:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5363:4:6","type":""}],"src":"5198:406:6"},{"body":{"nodeType":"YulBlock","src":"5783:165:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5800:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5811:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5793:6:6"},"nodeType":"YulFunctionCall","src":"5793:21:6"},"nodeType":"YulExpressionStatement","src":"5793:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5834:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5845:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5830:3:6"},"nodeType":"YulFunctionCall","src":"5830:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"5850:2:6","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5823:6:6"},"nodeType":"YulFunctionCall","src":"5823:30:6"},"nodeType":"YulExpressionStatement","src":"5823:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5873:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5884:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5869:3:6"},"nodeType":"YulFunctionCall","src":"5869:18:6"},{"hexValue":"4e6f207061727469636970616e7473","kind":"string","nodeType":"YulLiteral","src":"5889:17:6","type":"","value":"No participants"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5862:6:6"},"nodeType":"YulFunctionCall","src":"5862:45:6"},"nodeType":"YulExpressionStatement","src":"5862:45:6"},{"nodeType":"YulAssignment","src":"5916:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5928:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5939:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5924:3:6"},"nodeType":"YulFunctionCall","src":"5924:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5916:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5760:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5774:4:6","type":""}],"src":"5609:339:6"},{"body":{"nodeType":"YulBlock","src":"6203:586:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6220:3:6"},{"name":"value0","nodeType":"YulIdentifier","src":"6225:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6213:6:6"},"nodeType":"YulFunctionCall","src":"6213:19:6"},"nodeType":"YulExpressionStatement","src":"6213:19:6"},{"nodeType":"YulVariableDeclaration","src":"6241:12:6","value":{"kind":"number","nodeType":"YulLiteral","src":"6251:2:6","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6245:2:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6273:3:6"},{"name":"_1","nodeType":"YulIdentifier","src":"6278:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6269:3:6"},"nodeType":"YulFunctionCall","src":"6269:12:6"},{"name":"value1","nodeType":"YulIdentifier","src":"6283:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6262:6:6"},"nodeType":"YulFunctionCall","src":"6262:28:6"},"nodeType":"YulExpressionStatement","src":"6262:28:6"},{"nodeType":"YulVariableDeclaration","src":"6299:25:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6316:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"6321:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6312:3:6"},"nodeType":"YulFunctionCall","src":"6312:12:6"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"6303:5:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6333:27:6","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6353:6:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6347:5:6"},"nodeType":"YulFunctionCall","src":"6347:13:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6337:6:6","type":""}]},{"nodeType":"YulAssignment","src":"6369:14:6","value":{"name":"pos_1","nodeType":"YulIdentifier","src":"6378:5:6"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"6369:5:6"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6399:1:6","type":"","value":"0"},{"name":"value2","nodeType":"YulIdentifier","src":"6402:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6392:6:6"},"nodeType":"YulFunctionCall","src":"6392:17:6"},"nodeType":"YulExpressionStatement","src":"6392:17:6"},{"nodeType":"YulVariableDeclaration","src":"6418:30:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6442:1:6","type":"","value":"0"},{"name":"_1","nodeType":"YulIdentifier","src":"6445:2:6"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6432:9:6"},"nodeType":"YulFunctionCall","src":"6432:16:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6422:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6457:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"6466:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6461:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"6525:151:6","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"6546:5:6"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6563:6:6"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"6557:5:6"},"nodeType":"YulFunctionCall","src":"6557:13:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6580:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6585:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6576:3:6"},"nodeType":"YulFunctionCall","src":"6576:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"6589:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6572:3:6"},"nodeType":"YulFunctionCall","src":"6572:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6553:3:6"},"nodeType":"YulFunctionCall","src":"6553:39:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6539:6:6"},"nodeType":"YulFunctionCall","src":"6539:54:6"},"nodeType":"YulExpressionStatement","src":"6539:54:6"},{"nodeType":"YulAssignment","src":"6606:23:6","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"6619:5:6"},{"name":"_1","nodeType":"YulIdentifier","src":"6626:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6615:3:6"},"nodeType":"YulFunctionCall","src":"6615:14:6"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"6606:5:6"}]},{"nodeType":"YulAssignment","src":"6642:24:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6656:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"6664:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6652:3:6"},"nodeType":"YulFunctionCall","src":"6652:14:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6642:6:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6487:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"6490:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6484:2:6"},"nodeType":"YulFunctionCall","src":"6484:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6498:18:6","statements":[{"nodeType":"YulAssignment","src":"6500:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6509:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"6512:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6505:3:6"},"nodeType":"YulFunctionCall","src":"6505:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6500:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"6480:3:6","statements":[]},"src":"6476:200:6"},{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"6692:5:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6707:2:6","type":"","value":"96"},{"name":"value3","nodeType":"YulIdentifier","src":"6711:6:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6703:3:6"},"nodeType":"YulFunctionCall","src":"6703:15:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6724:26:6","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6720:3:6"},"nodeType":"YulFunctionCall","src":"6720:31:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6699:3:6"},"nodeType":"YulFunctionCall","src":"6699:53:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6685:6:6"},"nodeType":"YulFunctionCall","src":"6685:68:6"},"nodeType":"YulExpressionStatement","src":"6685:68:6"},{"nodeType":"YulAssignment","src":"6762:21:6","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"6773:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"6780:2:6","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6769:3:6"},"nodeType":"YulFunctionCall","src":"6769:14:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6762:3:6"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_uint256_t_array$_t_address_$dyn_storage_t_address__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6155:3:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6160:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6168:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6176:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6184:6:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6195:3:6","type":""}],"src":"5953:836:6"},{"body":{"nodeType":"YulBlock","src":"6826:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6843:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6850:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6855:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6846:3:6"},"nodeType":"YulFunctionCall","src":"6846:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6836:6:6"},"nodeType":"YulFunctionCall","src":"6836:31:6"},"nodeType":"YulExpressionStatement","src":"6836:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6883:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6886:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6876:6:6"},"nodeType":"YulFunctionCall","src":"6876:15:6"},"nodeType":"YulExpressionStatement","src":"6876:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6907:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6910:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6900:6:6"},"nodeType":"YulFunctionCall","src":"6900:15:6"},"nodeType":"YulExpressionStatement","src":"6900:15:6"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6794:127:6"},{"body":{"nodeType":"YulBlock","src":"6964:74:6","statements":[{"body":{"nodeType":"YulBlock","src":"6987:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6989:16:6"},"nodeType":"YulFunctionCall","src":"6989:18:6"},"nodeType":"YulExpressionStatement","src":"6989:18:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6984:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6977:6:6"},"nodeType":"YulFunctionCall","src":"6977:9:6"},"nodeType":"YulIf","src":"6974:35:6"},{"nodeType":"YulAssignment","src":"7018:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7027:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"7030:1:6"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"7023:3:6"},"nodeType":"YulFunctionCall","src":"7023:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7018:1:6"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6949:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6952:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6958:1:6","type":""}],"src":"6926:112:6"},{"body":{"nodeType":"YulBlock","src":"7172:145:6","statements":[{"nodeType":"YulAssignment","src":"7182:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7194:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7205:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7190:3:6"},"nodeType":"YulFunctionCall","src":"7190:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7182:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7224:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7239:6:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7255:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7260:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7251:3:6"},"nodeType":"YulFunctionCall","src":"7251:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"7264:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7247:3:6"},"nodeType":"YulFunctionCall","src":"7247:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7235:3:6"},"nodeType":"YulFunctionCall","src":"7235:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7217:6:6"},"nodeType":"YulFunctionCall","src":"7217:51:6"},"nodeType":"YulExpressionStatement","src":"7217:51:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7288:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7299:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7284:3:6"},"nodeType":"YulFunctionCall","src":"7284:18:6"},{"name":"value1","nodeType":"YulIdentifier","src":"7304:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7277:6:6"},"nodeType":"YulFunctionCall","src":"7277:34:6"},"nodeType":"YulExpressionStatement","src":"7277:34:6"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7133:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7144:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7152:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7163:4:6","type":""}],"src":"7043:274:6"},{"body":{"nodeType":"YulBlock","src":"7496:232:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7513:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7524:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7506:6:6"},"nodeType":"YulFunctionCall","src":"7506:21:6"},"nodeType":"YulExpressionStatement","src":"7506:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7547:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7558:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7543:3:6"},"nodeType":"YulFunctionCall","src":"7543:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"7563:2:6","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7536:6:6"},"nodeType":"YulFunctionCall","src":"7536:30:6"},"nodeType":"YulExpressionStatement","src":"7536:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7586:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7597:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7582:3:6"},"nodeType":"YulFunctionCall","src":"7582:18:6"},{"hexValue":"436f6d6d697373696f6e20626173697320706f696e74732063616e6e6f742065","kind":"string","nodeType":"YulLiteral","src":"7602:34:6","type":"","value":"Commission basis points cannot e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7575:6:6"},"nodeType":"YulFunctionCall","src":"7575:62:6"},"nodeType":"YulExpressionStatement","src":"7575:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7657:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7668:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7653:3:6"},"nodeType":"YulFunctionCall","src":"7653:18:6"},{"hexValue":"78636565642031303025","kind":"string","nodeType":"YulLiteral","src":"7673:12:6","type":"","value":"xceed 100%"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7646:6:6"},"nodeType":"YulFunctionCall","src":"7646:40:6"},"nodeType":"YulExpressionStatement","src":"7646:40:6"},{"nodeType":"YulAssignment","src":"7695:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7707:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7718:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7703:3:6"},"nodeType":"YulFunctionCall","src":"7703:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7695:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_0176e3ab2d4b949c8cdf74389e145f1cb17b49ad99ca6e2210e1f76690a23bb5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7473:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7487:4:6","type":""}],"src":"7322:406:6"},{"body":{"nodeType":"YulBlock","src":"7907:228:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7924:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7935:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7917:6:6"},"nodeType":"YulFunctionCall","src":"7917:21:6"},"nodeType":"YulExpressionStatement","src":"7917:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7958:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"7969:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7954:3:6"},"nodeType":"YulFunctionCall","src":"7954:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"7974:2:6","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7947:6:6"},"nodeType":"YulFunctionCall","src":"7947:30:6"},"nodeType":"YulExpressionStatement","src":"7947:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7997:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8008:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7993:3:6"},"nodeType":"YulFunctionCall","src":"7993:18:6"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"8013:34:6","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7986:6:6"},"nodeType":"YulFunctionCall","src":"7986:62:6"},"nodeType":"YulExpressionStatement","src":"7986:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8068:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8079:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8064:3:6"},"nodeType":"YulFunctionCall","src":"8064:18:6"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8084:8:6","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8057:6:6"},"nodeType":"YulFunctionCall","src":"8057:36:6"},"nodeType":"YulExpressionStatement","src":"8057:36:6"},{"nodeType":"YulAssignment","src":"8102:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8114:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8125:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8110:3:6"},"nodeType":"YulFunctionCall","src":"8110:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8102:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7884:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7898:4:6","type":""}],"src":"7733:402:6"},{"body":{"nodeType":"YulBlock","src":"8314:182:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8331:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8342:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8324:6:6"},"nodeType":"YulFunctionCall","src":"8324:21:6"},"nodeType":"YulExpressionStatement","src":"8324:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8365:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8376:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8361:3:6"},"nodeType":"YulFunctionCall","src":"8361:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"8381:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8354:6:6"},"nodeType":"YulFunctionCall","src":"8354:30:6"},"nodeType":"YulExpressionStatement","src":"8354:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8404:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8415:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8400:3:6"},"nodeType":"YulFunctionCall","src":"8400:18:6"},{"hexValue":"456e74727920666565206d7573742062652067726561746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"8420:34:6","type":"","value":"Entry fee must be greater than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8393:6:6"},"nodeType":"YulFunctionCall","src":"8393:62:6"},"nodeType":"YulExpressionStatement","src":"8393:62:6"},{"nodeType":"YulAssignment","src":"8464:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8476:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8487:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8472:3:6"},"nodeType":"YulFunctionCall","src":"8472:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_f7e2564710dc6082efe7dd2929a7a93d8953df30d2554971f2c009ceb346aff6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8291:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8305:4:6","type":""}],"src":"8140:356:6"},{"body":{"nodeType":"YulBlock","src":"8675:182:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8692:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8703:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8685:6:6"},"nodeType":"YulFunctionCall","src":"8685:21:6"},"nodeType":"YulExpressionStatement","src":"8685:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8726:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8737:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8722:3:6"},"nodeType":"YulFunctionCall","src":"8722:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"8742:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8715:6:6"},"nodeType":"YulFunctionCall","src":"8715:30:6"},"nodeType":"YulExpressionStatement","src":"8715:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8765:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8776:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8761:3:6"},"nodeType":"YulFunctionCall","src":"8761:18:6"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8781:34:6","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8754:6:6"},"nodeType":"YulFunctionCall","src":"8754:62:6"},"nodeType":"YulExpressionStatement","src":"8754:62:6"},{"nodeType":"YulAssignment","src":"8825:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8837:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8848:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8833:3:6"},"nodeType":"YulFunctionCall","src":"8833:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8825:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8652:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8666:4:6","type":""}],"src":"8501:356:6"},{"body":{"nodeType":"YulBlock","src":"8914:116:6","statements":[{"body":{"nodeType":"YulBlock","src":"8973:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8975:16:6"},"nodeType":"YulFunctionCall","src":"8975:18:6"},"nodeType":"YulExpressionStatement","src":"8975:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8945:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8938:6:6"},"nodeType":"YulFunctionCall","src":"8938:9:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8931:6:6"},"nodeType":"YulFunctionCall","src":"8931:17:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8953:1:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8964:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8960:3:6"},"nodeType":"YulFunctionCall","src":"8960:6:6"},{"name":"x","nodeType":"YulIdentifier","src":"8968:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8956:3:6"},"nodeType":"YulFunctionCall","src":"8956:14:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8950:2:6"},"nodeType":"YulFunctionCall","src":"8950:21:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8927:3:6"},"nodeType":"YulFunctionCall","src":"8927:45:6"},"nodeType":"YulIf","src":"8924:71:6"},{"nodeType":"YulAssignment","src":"9004:20:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9019:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"9022:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9015:3:6"},"nodeType":"YulFunctionCall","src":"9015:9:6"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"9004:7:6"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8893:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"8896:1:6","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"8902:7:6","type":""}],"src":"8862:168:6"},{"body":{"nodeType":"YulBlock","src":"9083:80:6","statements":[{"body":{"nodeType":"YulBlock","src":"9110:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9112:16:6"},"nodeType":"YulFunctionCall","src":"9112:18:6"},"nodeType":"YulExpressionStatement","src":"9112:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9099:1:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9106:1:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9102:3:6"},"nodeType":"YulFunctionCall","src":"9102:6:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9096:2:6"},"nodeType":"YulFunctionCall","src":"9096:13:6"},"nodeType":"YulIf","src":"9093:39:6"},{"nodeType":"YulAssignment","src":"9141:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9152:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"9155:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9148:3:6"},"nodeType":"YulFunctionCall","src":"9148:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"9141:3:6"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9066:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"9069:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"9075:3:6","type":""}],"src":"9035:128:6"},{"body":{"nodeType":"YulBlock","src":"9214:74:6","statements":[{"body":{"nodeType":"YulBlock","src":"9237:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"9239:16:6"},"nodeType":"YulFunctionCall","src":"9239:18:6"},"nodeType":"YulExpressionStatement","src":"9239:18:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9234:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9227:6:6"},"nodeType":"YulFunctionCall","src":"9227:9:6"},"nodeType":"YulIf","src":"9224:35:6"},{"nodeType":"YulAssignment","src":"9268:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9277:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"9280:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9273:3:6"},"nodeType":"YulFunctionCall","src":"9273:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9268:1:6"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9199:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"9202:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"9208:1:6","type":""}],"src":"9168:120:6"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_LotteryStatus_$549__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_3357eaf62de67f3cfd864ae72873026f55eab5ea856f0b110d8bb2603b4e6445__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid lottery status\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c3296dabe30e4c1074a5e3c32184d39b477e1b44c10a182c99d9e25124654231__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Time duration must be greater th\")\n        mstore(add(headStart, 96), \"an 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6700e2b82b5ba714f445e23281b296feecb156559c232baa389ee1d385c2338f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Lottery not started\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d1233424687cc54989fb956693559ffe4af8d14501c9505562d598cfa17f1ec5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Entry fee is less\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7cc5d79b1c73ccef75c9f1f675b6f82d5612beb368d152012cef1c19739968c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Time is up.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0a07f15ed8fda2b0e9813162ada4a5f85607aa44d111269fff93ed22e29a1b29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"You are already a participant\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_82d95a0200688b2b701a66cdd6076f2568570fdd7df3373b72d40e59a0718e2c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"No remaining funds to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9cea1712fe99ba3fd837ee413ddf8e57c55c7a9c5cabbc44655aac74c46400b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"You cannot end the lottery befor\")\n        mstore(add(headStart, 96), \"e the time\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"No participants\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_array$_t_address_$dyn_storage_t_address__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        let _1 := 32\n        mstore(add(pos, _1), value1)\n        let pos_1 := add(pos, 64)\n        let length := sload(value2)\n        pos_1 := pos_1\n        mstore(0, value2)\n        let srcPtr := keccak256(0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos_1, and(sload(srcPtr), sub(shl(160, 1), 1)))\n            pos_1 := add(pos_1, _1)\n            srcPtr := add(srcPtr, 1)\n        }\n        mstore(pos_1, and(shl(96, value3), not(0xffffffffffffffffffffffff)))\n        end := add(pos_1, 20)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0176e3ab2d4b949c8cdf74389e145f1cb17b49ad99ca6e2210e1f76690a23bb5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Commission basis points cannot e\")\n        mstore(add(headStart, 96), \"xceed 100%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f7e2564710dc6082efe7dd2929a7a93d8953df30d2554971f2c009ceb346aff6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Entry fee must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDFBF53AE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEFBE1C1C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF00F6921 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xF7D978A2 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xEF86CE8E EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xEFA1C482 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xEFB98BCF EQ PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x481C6A75 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x89FDFD05 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95805DAD EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72EA61C EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xD683DD9 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xDED5DCF EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x15C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xD54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x340 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1B6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x384 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1B6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x463 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x5E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x77B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x7C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xB70 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI POP PUSH1 0x1 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x375 JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x373 JUMPI PUSH2 0x373 PUSH2 0xD3E JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x382 JUMPI PUSH2 0x382 PUSH2 0x7C4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x38C PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x382 PUSH1 0x0 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x39E PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x54696D65206475726174696F6E206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x45C PUSH2 0x455 DUP4 PUSH1 0x3C PUSH2 0xC77 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x47C JUMPI PUSH2 0x47C PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x131BDD1D195C9E481B9BDD081CDD185C9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x505 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x456E74727920666565206973206C657373 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2A34B6B29034B9903AB817 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x54D CALLER PUSH2 0xC96 JUMP JUMPDEST ISZERO PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C72656164792061207061727469636970616E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x382 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x5EB PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x605 JUMPI PUSH2 0x605 PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072656D61696E696E672066756E647320746F2077697468647261770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6F8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0xE51 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x74B JUMPI PUSH2 0x74B PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x76D DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6FE JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0xD3E JUMP JUMPDEST EQ ISZERO PUSH2 0x7BE JUMPI TIMESTAMP PUSH1 0x4 SLOAD GT PUSH2 0x7AB JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT ISZERO PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F7420656E6420746865206C6F7474657279206265666F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65207468652074696D65 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F207061727469636970616E7473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x8CA SWAP2 DIFFICULTY SWAP2 TIMESTAMP SWAP2 CALLER SWAP1 PUSH1 0x20 ADD PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x902 JUMPI PUSH2 0x902 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 SLOAD SELFBALANCE SWAP2 SWAP1 PUSH2 0x94B SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x945 SWAP1 DUP6 SWAP1 PUSH2 0xC77 JUMP JUMPDEST SWAP1 PUSH2 0xD00 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x959 DUP3 DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x9A1 PUSH1 0x1 PUSH1 0x0 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x3CF1AF53E79884A92609CE59DB1EC9F584D88E2D14C8EABA43A21DB81318301E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xC2BB3206848157E57E737EEC7E141F06F5DE585E2F1C0F0EC60A04F45A2C0031 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 DUP6 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D697373696F6E20626173697320706F696E74732063616E6E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x78636565642031303025 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xAD5 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xB43 DUP2 PUSH2 0xC27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xB78 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74727920666565206D7573742062652067726561746572207468616E2030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xCF7 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCC1 JUMPI PUSH2 0xCC1 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xCE5 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xCEF DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC9A JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF7B JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB43 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD26 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xD76 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDD6 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDB1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206C6F747465727920737461747573 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE67 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xEAA PUSH2 0xE67 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 DUP2 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP6 SLOAD DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEF1 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xECC JUMP JUMPDEST POP POP POP PUSH1 0x60 SWAP5 SWAP1 SWAP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 MSTORE POP POP PUSH1 0x14 SWAP1 SWAP2 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF3F JUMPI PUSH2 0xF3F PUSH2 0xF1A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF5E JUMPI PUSH2 0xF5E PUSH2 0xE67 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF76 JUMPI PUSH2 0xF76 PUSH2 0xE67 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF8A JUMPI PUSH2 0xF8A PUSH2 0xF1A JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xEE BASEFEE SWAP15 SWAP1 0xA8 SWAP4 GAS SWAP6 OR 0x24 CALLDATALOAD 0xB4 0x1F SSTORE KECCAK256 0x5F CREATE2 0xB9 0x2C SELFBALANCE PUSH15 0xEC67044BB936A25D680B64736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ","sourceMap":"169:5334:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:35;;;;;;;;;;;;;;;;;;;160:25:6;;;148:2;133:18;266:35:4;;;;;;;;635:34;;;;;;;;;;-1:-1:-1;635:34:4;;;;;;;;;;;;;;;:::i;3437:173::-;;;;;;;;;;;;;:::i;:::-;;334:22;;;;;;;;;;;;;;;;362;;;;;;;;;;-1:-1:-1;362:22:4;;;;-1:-1:-1;;;;;362:22:4;;;;;;-1:-1:-1;;;;;842:32:6;;;824:51;;812:2;797:18;362:22:4;678:203:6;1824:101:0;;;;;;;;;;;;;:::i;390:42:4:-;;;;;;;;;;;;;;;;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;2068:284:4;;;;;;;;;;-1:-1:-1;2068:284:4;;;;;:::i;:::-;;:::i;307:21::-;;;;;;;;;;-1:-1:-1;307:21:4;;;;-1:-1:-1;;;;;307:21:4;;;3687:311;;;:::i;4589:276::-;;;;;;;;;;;;;:::i;1652:268::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1264:279::-;;;;;;;;;;;;;:::i;2430:933::-;;;;;;;;;;;;;:::i;5288:213::-;;;;;;;;;;-1:-1:-1;5288:213:4;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;;;;;-1:-1:-1;2074:198:0;;;;;:::i;:::-;;:::i;236:24:4:-;;;;;;;;;;-1:-1:-1;236:24:4;;;;;:::i;:::-;;:::i;5002:159::-;;;;;;;;;;-1:-1:-1;5002:159:4;;;;;:::i;:::-;;:::i;3437:173::-;3493:15;3482:7;;:26;;:48;;;;-1:-1:-1;3512:7:4;:14;:18;;3482:48;:90;;;;-1:-1:-1;3551:21:4;3534:13;;;;:38;;;;;;;;:::i;:::-;;3482:90;3478:126;;;3588:5;:3;:5::i;:::-;3437:173::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;2068:284:4:-:0;1094:13:0;:11;:13::i;:::-;2137:19:4::1;::::0;739:13:::1;::::0;::::1;;:24;::::0;::::1;;;;;;:::i;:::-;;731:59;;;;-1:-1:-1::0;;;731:59:4::1;;;;;;;:::i;:::-;;;;;;;;;2193:1:::2;2176:14;:18;2168:67;;;::::0;-1:-1:-1;;;2168:67:4;;2578:2:6;2168:67:4::2;::::0;::::2;2560:21:6::0;2617:2;2597:18;;;2590:30;2656:34;2636:18;;;2629:62;-1:-1:-1;;;2707:18:6;;;2700:34;2751:19;;2168:67:4::2;2376:400:6::0;2168:67:4::2;2245:13;:37:::0;;-1:-1:-1;;2245:37:4::2;2261:21;2245:37;::::0;;2302:43:::2;2322:22;:14:::0;2341:2:::2;2322:18;:22::i;:::-;2302:15;::::0;:19:::2;:43::i;:::-;2292:7;:53:::0;-1:-1:-1;;2068:284:4:o;3687:311::-;873:21;856:13;;;;:38;;;;;;;;:::i;:::-;;848:70;;;;-1:-1:-1;;;848:70:4;;2983:2:6;848:70:4;;;2965:21:6;3022:2;3002:18;;;2995:30;-1:-1:-1;;;3041:18:6;;;3034:49;3100:18;;848:70:4;2781:343:6;848:70:4;3763:8:::1;;3750:9;:21;;3742:51;;;::::0;-1:-1:-1;;;3742:51:4;;3331:2:6;3742:51:4::1;::::0;::::1;3313:21:6::0;3370:2;3350:18;;;3343:30;-1:-1:-1;;;3389:18:6;;;3382:47;3446:18;;3742:51:4::1;3129:341:6::0;3742:51:4::1;3821:15;3811:7;;:25;3803:49;;;::::0;-1:-1:-1;;;3803:49:4;;3677:2:6;3803:49:4::1;::::0;::::1;3659:21:6::0;3716:2;3696:18;;;3689:30;-1:-1:-1;;;3735:18:6;;;3728:41;3786:18;;3803:49:4::1;3475:335:6::0;3803:49:4::1;3871:27;3887:10;3871:15;:27::i;:::-;3870:28;3862:70;;;::::0;-1:-1:-1;;;3862:70:4;;4017:2:6;3862:70:4::1;::::0;::::1;3999:21:6::0;4056:2;4036:18;;;4029:30;4095:31;4075:18;;;4068:59;4144:18;;3862:70:4::1;3815:353:6::0;3862:70:4::1;3942:7;:24:::0;;;;::::1;::::0;;-1:-1:-1;3942:24:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;3942:24:4::1;3955:10;3942:24;::::0;;3977:14:::1;:12;:14::i;4589:276::-:0;1094:13:0;:11;:13::i;:::-;4653:19:4::1;::::0;739:13:::1;::::0;::::1;;:24;::::0;::::1;;;;;;:::i;:::-;;731:59;;;;-1:-1:-1::0;;;731:59:4::1;;;;;;;:::i;:::-;4711:21:::2;4750:20:::0;4742:63:::2;;;::::0;-1:-1:-1;;;4742:63:4;;4375:2:6;4742:63:4::2;::::0;::::2;4357:21:6::0;4414:2;4394:18;;;4387:30;4453:32;4433:18;;;4426:60;4503:18;;4742:63:4::2;4173:354:6::0;4742:63:4::2;1247:7:0::0;1273:6;;4815:43:4::2;::::0;-1:-1:-1;;;;;1273:6:0;;;;4815:43:4;::::2;;;::::0;4841:16;;4815:43;1247:7:0;4815:43:4;4841:16;1273:6:0;4815:43:4;::::2;;;;;;;;;;;;;::::0;::::2;;;;;;4674:191;1117:1:0::1;4589:276:4:o:0;1652:268::-;1770:7;:14;1700:16;;1728:25;;1756:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1756:29:4;;1728:57;;1800:9;1795:94;1819:7;:14;1815:18;;1795:94;;;1868:7;1876:1;1868:10;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1868:10:4;1854:8;1863:1;1854:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1854:24:4;;;:11;;;;;;;;;;;:24;1835:3;;;;:::i;:::-;;;;1795:94;;;-1:-1:-1;1905:8:4;1652:268;-1:-1:-1;1652:268:4:o;1264:279::-;1313:7;1353:21;1336:13;;;;:38;;;;;;;;:::i;:::-;;1332:187;;;1405:15;1394:7;;:26;1390:73;;-1:-1:-1;1447:1:4;;1264:279::o;1390:73::-;1493:15;1483:7;;:25;;;;:::i;:::-;1476:32;;1264:279;:::o;1332:187::-;-1:-1:-1;1535:1:4;;1264:279::o;2430:933::-;2465:21;;739:13;;;;:24;;;;;;;;:::i;:::-;;731:59;;;;-1:-1:-1;;;731:59:4;;;;;;;:::i;:::-;2517:15:::1;2506:7;;:26;;2498:81;;;::::0;-1:-1:-1;;;2498:81:4;;5400:2:6;2498:81:4::1;::::0;::::1;5382:21:6::0;5439:2;5419:18;;;5412:30;5478:34;5458:18;;;5451:62;-1:-1:-1;;;5529:18:6;;;5522:40;5579:19;;2498:81:4::1;5198:406:6::0;2498:81:4::1;2597:7;:14:::0;2589:46:::1;;;::::0;-1:-1:-1;;;2589:46:4;;5811:2:6;2589:46:4::1;::::0;::::1;5793:21:6::0;5850:2;5830:18;;;5823:30;-1:-1:-1;;;5869:18:6;;;5862:45;5924:18;;2589:46:4::1;5609:339:6::0;2589:46:4::1;2645:13;:35:::0;;-1:-1:-1;;2645:35:4::1;2661:19;2645:35;::::0;;;2808:14;;2731:72:::1;::::0;-1:-1:-1;;2731:72:4::1;::::0;2748:16:::1;::::0;2766:15:::1;::::0;2792:10:::1;::::0;2731:72:::1;;;:::i;:::-;;;;;;;;;;;;;2721:83;;;;;;2713:92;;:109;;;;:::i;:::-;2691:131;;2841:7;2849:11;2841:20;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;2832:6:::1;:29:::0;;-1:-1:-1;;;;;;2832:29:4::1;-1:-1:-1::0;;;;;2841:20:4;;::::1;2832:29:::0;;;::::1;::::0;;2960:21:::1;::::0;2892::::1;::::0;2841:20;2944:51:::1;::::0;2988:6:::1;::::0;2945:37:::1;::::0;2892:21;;2945:14:::1;:37::i;:::-;2944:43:::0;::::1;:51::i;:::-;2923:72:::0;-1:-1:-1;3048:22:4::1;3073:23;2923:72:::0;3073:10;:23:::1;:::i;:::-;3115:6;::::0;3107:40:::1;::::0;3048:48;;-1:-1:-1;;;;;;3115:6:4::1;::::0;3107:40;::::1;;;::::0;3048:48;;3115:6:::1;3107:40:::0;3115:6;3107:40;3048:48;3115:6;3107:40;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3158:14:4::1;3165:7;;3158:14;:::i;:::-;3203:6;::::0;3188:38:::1;::::0;;-1:-1:-1;;;;;3203:6:4;;::::1;7217:51:6::0;;7299:2;7284:18;;7277:34;;;3188:38:4::1;::::0;7190:18:6;3188:38:4::1;;;;;;;3241:31;::::0;160:25:6;;;3241:31:4::1;::::0;148:2:6;133:18;3241:31:4::1;;;;;;;1247:7:0::0;1273:6;;3319:37:4::1;::::0;-1:-1:-1;;;;;1273:6:0;;;;3319:37:4;::::1;;;::::0;3345:10;;3319:37;1247:7:0;3319:37:4;3345:10;1273:6:0;3319:37:4;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2488:875;;;;2430:933:::0;:::o;5288:213::-;1094:13:0;:11;:13::i;:::-;5395:6:4::1;5379:12;:22;;5371:77;;;::::0;-1:-1:-1;;;5371:77:4;;7524:2:6;5371:77:4::1;::::0;::::1;7506:21:6::0;7563:2;7543:18;;;7536:30;7602:34;7582:18;;;7575:62;-1:-1:-1;;;7653:18:6;;;7646:40;7703:19;;5371:77:4::1;7322:406:6::0;5371:77:4::1;5458:21;:36:::0;5288:213::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;7935:2:6;2154:73:0::1;::::0;::::1;7917:21:6::0;7974:2;7954:18;;;7947:30;8013:34;7993:18;;;7986:62;-1:-1:-1;;;8064:18:6;;;8057:36;8110:19;;2154:73:0::1;7733:402:6::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;236:24:4:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;236:24:4;;-1:-1:-1;236:24:4;:::o;5002:159::-;1094:13:0;:11;:13::i;:::-;5088:1:4::1;5078:7;:11;5070:56;;;::::0;-1:-1:-1;;;5070:56:4;;8342:2:6;5070:56:4::1;::::0;::::1;8324:21:6::0;;;8361:18;;;8354:30;8420:34;8400:18;;;8393:62;8472:18;;5070:56:4::1;8140:356:6::0;5070:56:4::1;5136:8;:18:::0;5002:159::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:2;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;8703:2:6;1414:68:0;;;8685:21:6;;;8722:18;;;8715:30;8781:34;8761:18;;;8754:62;8833:18;;1414:68:0;8501:356:6;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;3465:96:3:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:3:o;2755:::-;2813:7;2839:5;2843:1;2839;:5;:::i;4224:258:4:-;4293:4;;4309:145;4333:7;:14;4329:18;;4309:145;;;4386:12;-1:-1:-1;;;;;4372:26:4;:7;4380:1;4372:10;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4372:10:4;:26;4368:76;;;-1:-1:-1;4425:4:4;;4224:258;-1:-1:-1;;4224:258:4:o;4368:76::-;4349:3;;;;:::i;:::-;;;;4309:145;;;-1:-1:-1;4470:5:4;;4224:258;-1:-1:-1;;4224:258:4:o;3850:96:3:-;3908:7;3934:5;3938:1;3934;:5;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:127:6:-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:345;477:2;462:18;;510:1;499:13;;489:144;;555:10;550:3;546:20;543:1;536:31;590:4;587:1;580:15;618:4;615:1;608:15;489:144;642:25;;;328:345;:::o;886:180::-;945:6;998:2;986:9;977:7;973:23;969:32;966:52;;;1014:1;1011;1004:12;966:52;-1:-1:-1;1037:23:6;;886:180;-1:-1:-1;886:180:6:o;1071:658::-;1242:2;1294:21;;;1364:13;;1267:18;;;1386:22;;;1213:4;;1242:2;1465:15;;;;1439:2;1424:18;;;1213:4;1508:195;1522:6;1519:1;1516:13;1508:195;;;1587:13;;-1:-1:-1;;;;;1583:39:6;1571:52;;1678:15;;;;1643:12;;;;1619:1;1537:9;1508:195;;;-1:-1:-1;1720:3:6;;1071:658;-1:-1:-1;;;;;;1071:658:6:o;1734:286::-;1793:6;1846:2;1834:9;1825:7;1821:23;1817:32;1814:52;;;1862:1;1859;1852:12;1814:52;1888:23;;-1:-1:-1;;;;;1940:31:6;;1930:42;;1920:70;;1986:1;1983;1976:12;2025:346;2227:2;2209:21;;;2266:2;2246:18;;;2239:30;-1:-1:-1;;;2300:2:6;2285:18;;2278:52;2362:2;2347:18;;2025:346::o;4532:127::-;4593:10;4588:3;4584:20;4581:1;4574:31;4624:4;4621:1;4614:15;4648:4;4645:1;4638:15;4664:127;4725:10;4720:3;4716:20;4713:1;4706:31;4756:4;4753:1;4746:15;4780:4;4777:1;4770:15;4796:127;4857:10;4852:3;4848:20;4845:1;4838:31;4888:4;4885:1;4878:15;4912:4;4909:1;4902:15;4928:135;4967:3;-1:-1:-1;;4988:17:6;;4985:43;;;5008:18;;:::i;:::-;-1:-1:-1;5055:1:6;5044:13;;4928:135::o;5068:125::-;5108:4;5136:1;5133;5130:8;5127:34;;;5141:18;;:::i;:::-;-1:-1:-1;5178:9:6;;5068:125::o;5953:836::-;6225:6;6220:3;6213:19;6195:3;6251:2;6283:6;6278:2;6273:3;6269:12;6262:28;6321:2;6316:3;6312:12;6353:6;6347:13;6402:6;6399:1;6392:17;6445:2;6442:1;6432:16;6466:1;6476:200;6490:6;6487:1;6484:13;6476:200;;;6557:13;;-1:-1:-1;;;;;6553:39:6;6539:54;;6615:14;;;;6589:1;6652:14;;;;6505:9;6476:200;;;-1:-1:-1;;;6707:2:6;6703:15;;;;-1:-1:-1;;6699:53:6;6685:68;;-1:-1:-1;;6780:2:6;6769:14;;;;5953:836;-1:-1:-1;;;;5953:836:6:o;6794:127::-;6855:10;6850:3;6846:20;6843:1;6836:31;6886:4;6883:1;6876:15;6910:4;6907:1;6900:15;6926:112;6958:1;6984;6974:35;;6989:18;;:::i;:::-;-1:-1:-1;7023:9:6;;6926:112::o;8862:168::-;8902:7;8968:1;8964;8960:6;8956:14;8953:1;8950:21;8945:1;8938:9;8931:17;8927:45;8924:71;;;8975:18;;:::i;:::-;-1:-1:-1;9015:9:6;;8862:168::o;9035:128::-;9075:3;9106:1;9102:6;9099:1;9096:13;9093:39;;;9112:18;;:::i;:::-;-1:-1:-1;9148:9:6;;9035:128::o;9168:120::-;9208:1;9234;9224:35;;9239:18;;:::i;:::-;-1:-1:-1;9273:9:6;;9168:120::o"},"gasEstimates":{"creation":{"codeDepositCost":"807400","executionCost":"infinite","totalCost":"infinite"},"external":{"changeEntryFee(uint256)":"24621","closeIfEnded()":"infinite","commissionBasisPoints()":"2351","end()":"infinite","endTime()":"2374","enter()":"infinite","entryFee()":"2308","getAllPlayers()":"infinite","getRemainingTime()":"6763","lotteryStatus()":"2397","manager()":"2360","owner()":"2420","players(uint256)":"4702","renounceOwnership()":"infinite","setCommissionBasisPoints(uint256)":"24558","start(uint256)":"infinite","transferOwnership(address)":"28364","winner()":"2360","withdrawRemainingFunds()":"infinite"},"internal":{"isParticipating(address)":"infinite"}},"methodIdentifiers":{"changeEntryFee(uint256)":"f7d978a2","closeIfEnded()":"0ded5dcf","commissionBasisPoints()":"89fdfd05","end()":"efbe1c1c","endTime()":"3197cbb6","enter()":"e97dcb62","entryFee()":"072ea61c","getAllPlayers()":"efa1c482","getRemainingTime()":"efb98bcf","lotteryStatus()":"0d683dd9","manager()":"481c6a75","owner()":"8da5cb5b","players(uint256)":"f71d96cb","renounceOwnership()":"715018a6","setCommissionBasisPoints(uint256)":"f00f6921","start(uint256)":"95805dad","transferOwnership(address)":"f2fde38b","winner()":"dfbf53ae","withdrawRemainingFunds()":"ef86ce8e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CommissionWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningPrize\",\"type\":\"uint256\"}],\"name\":\"WinnerDeclared\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeEntryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeIfEnded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commissionBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPlayers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRemainingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lotteryStatus\",\"outputs\":[{\"internalType\":\"enum Lottery.LotteryStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_basisPoints\",\"type\":\"uint256\"}],\"name\":\"setCommissionBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeInMinutes\",\"type\":\"uint256\"}],\"name\":\"start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRemainingFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeEntryFee(uint256)\":{\"details\":\"Change the entry fee for participating in the lottery.\",\"params\":{\"_newFee\":\"The new entry fee in wei.\"}},\"closeIfEnded()\":{\"details\":\"End the lottery if blocktime >= endTime\"},\"constructor\":{\"details\":\"Constructor function to initialize the lottery contract.\"},\"end()\":{\"details\":\"End the lottery and select a random winner.\"},\"enter()\":{\"details\":\"Enter the lottery by sending an entry fee.\"},\"getAllPlayers()\":{\"details\":\"Get details of a all players.\",\"returns\":{\"_0\":\"address[] containing players.\"}},\"getRemainingTime()\":{\"details\":\"Get the remaining time until the lottery ends.\",\"returns\":{\"_0\":\"The remaining time in seconds.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setCommissionBasisPoints(uint256)\":{\"details\":\"Set the commission basis points.\",\"params\":{\"_basisPoints\":\"The new commission basis points.\"}},\"start(uint256)\":{\"details\":\"Start the lottery with a specified duration.\",\"params\":{\"_timeInMinutes\":\"The duration of the lottery in minutes.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawRemainingFunds()\":{\"details\":\"Allows the owner to withdraw any remaining funds after the lottery ends.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lottery.sol\":\"Lottery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"contracts/Lottery.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\ncontract Lottery is Ownable {\\n    using SafeMath for uint256;\\n\\n    address[] public players;\\n    uint256 public entryFee = 0.1 ether;\\n    address public winner;\\n    uint256 public endTime;\\n    address public manager;\\n    uint256 public commissionBasisPoints = 500;\\n\\n    event WinnerDeclared(address winner, uint256 winningPrize);\\n    event CommissionWithdrawn(uint256 amount);\\n\\n    enum LotteryStatus {\\n        NOT_STARTED,\\n        STARTED,\\n        ENDED\\n    }\\n\\n    LotteryStatus public lotteryStatus;\\n\\n    modifier onlyInStatus(LotteryStatus _status) {\\n        require(lotteryStatus == _status, \\\"Invalid lottery status\\\");\\n        _;\\n    }\\n\\n    modifier nonReentrant() {\\n        require(lotteryStatus == LotteryStatus.STARTED, \\\"Lottery not started\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Constructor function to initialize the lottery contract.\\n     */\\n    constructor(address _manager) {\\n        lotteryStatus = LotteryStatus.ENDED;\\n        manager = _manager;\\n    }\\n\\n    /**\\n     * @dev Get the remaining time until the lottery ends.\\n     * @return The remaining time in seconds.\\n     */\\n    function getRemainingTime() public view returns (uint256) {\\n        if (lotteryStatus == LotteryStatus.STARTED) {\\n            if (endTime <= block.timestamp) {\\n                return 0;\\n            }\\n            return endTime - block.timestamp;\\n        }\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Get details of a all players.\\n     * @return address[] containing players.\\n     */\\n    function getAllPlayers() external view returns (address[] memory) {\\n        address[] memory _players = new address[](players.length);\\n        for (uint256 i = 0; i < players.length; i++) {\\n            _players[i] = players[i];\\n        }\\n        return _players;\\n    }\\n\\n    /**\\n     * @dev Start the lottery with a specified duration.\\n     * @param _timeInMinutes The duration of the lottery in minutes.\\n     */\\n    function start(uint256 _timeInMinutes) public onlyOwner onlyInStatus(LotteryStatus.ENDED) {\\n        require(_timeInMinutes > 0, \\\"Time duration must be greater than 0\\\");\\n        lotteryStatus = LotteryStatus.STARTED;\\n        endTime = block.timestamp.add(_timeInMinutes.mul(60));\\n    }\\n\\n    /**\\n     * @dev End the lottery and select a random winner.\\n     */\\n    function end() public onlyInStatus(LotteryStatus.STARTED) {\\n        require(endTime <= block.timestamp, \\\"You cannot end the lottery before the time\\\");\\n        require(players.length > 0, \\\"No participants\\\");\\n        lotteryStatus = LotteryStatus.ENDED;\\n\\n        uint256 winnerIndex = uint256(keccak256(abi.encodePacked(block.difficulty, block.timestamp, players, msg.sender))) % players.length;\\n        winner = players[winnerIndex];\\n        uint256 prizeMoney = address(this).balance;\\n        uint256 commission = (prizeMoney.mul(commissionBasisPoints)).div(10_000); // Calculate commission using basis points\\n        uint256 remainingPrize = prizeMoney - commission;\\n\\n        payable(winner).transfer(remainingPrize);\\n\\n        delete players;\\n\\n        emit WinnerDeclared(winner, remainingPrize);\\n        emit CommissionWithdrawn(commission);\\n\\n        // Send commission to owner\\n        payable(owner()).transfer(commission);\\n    }\\n\\n    /**\\n     * @dev End the lottery if blocktime >= endTime\\n     */\\n    function closeIfEnded() public {\\n        if (endTime <= block.timestamp && players.length > 0 && lotteryStatus == LotteryStatus.STARTED) {\\n            end();\\n        }\\n    }\\n\\n    /**\\n     * @dev Enter the lottery by sending an entry fee.\\n     */\\n    function enter() public payable nonReentrant {\\n        require(msg.value >= entryFee, \\\"Entry fee is less\\\");\\n        require(endTime > block.timestamp, \\\"Time is up.\\\");\\n        require(!isParticipating(msg.sender), \\\"You are already a participant\\\");\\n        players.push(msg.sender);\\n\\n        closeIfEnded();\\n    }\\n\\n    /**\\n     * @dev Check if a participant has already entered the lottery.\\n     * @param _participant The participant's address to check.\\n     * @return A boolean indicating whether the participant has entered.\\n     */\\n    function isParticipating(address _participant) private view returns (bool) {\\n        for (uint256 i = 0; i < players.length; i++) {\\n            if (players[i] == _participant) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to withdraw any remaining funds after the lottery ends.\\n     */\\n    function withdrawRemainingFunds() public onlyOwner onlyInStatus(LotteryStatus.ENDED) {\\n        uint256 remainingBalance = address(this).balance;\\n        require(remainingBalance > 0, \\\"No remaining funds to withdraw\\\");\\n        payable(owner()).transfer(remainingBalance);\\n    }\\n\\n    /**\\n     * @dev Change the entry fee for participating in the lottery.\\n     * @param _newFee The new entry fee in wei.\\n     */\\n    function changeEntryFee(uint256 _newFee) public onlyOwner {\\n        require(_newFee > 0, \\\"Entry fee must be greater than 0\\\");\\n        entryFee = _newFee;\\n    }\\n\\n    /**\\n     * @dev Set the commission basis points.\\n     * @param _basisPoints The new commission basis points.\\n     */\\n    function setCommissionBasisPoints(uint256 _basisPoints) public onlyOwner {\\n        require(_basisPoints <= 10_000, \\\"Commission basis points cannot exceed 100%\\\");\\n        commissionBasisPoints = _basisPoints;\\n    }\\n}\\n\",\"keccak256\":\"0xbae2b79cfb50c74b98d7591c690e4acae6234e8b6972f05869a8750c54e27251\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/Lottery.sol:Lottery","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":523,"contract":"contracts/Lottery.sol:Lottery","label":"players","offset":0,"slot":"1","type":"t_array(t_address)dyn_storage"},{"astId":526,"contract":"contracts/Lottery.sol:Lottery","label":"entryFee","offset":0,"slot":"2","type":"t_uint256"},{"astId":528,"contract":"contracts/Lottery.sol:Lottery","label":"winner","offset":0,"slot":"3","type":"t_address"},{"astId":530,"contract":"contracts/Lottery.sol:Lottery","label":"endTime","offset":0,"slot":"4","type":"t_uint256"},{"astId":532,"contract":"contracts/Lottery.sol:Lottery","label":"manager","offset":0,"slot":"5","type":"t_address"},{"astId":535,"contract":"contracts/Lottery.sol:Lottery","label":"commissionBasisPoints","offset":0,"slot":"6","type":"t_uint256"},{"astId":552,"contract":"contracts/Lottery.sol:Lottery","label":"lotteryStatus","offset":0,"slot":"7","type":"t_enum(LotteryStatus)549"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_enum(LotteryStatus)549":{"encoding":"inplace","label":"enum Lottery.LotteryStatus","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/LotteryPool.sol":{"LotteryPool":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"lotteryAddress","type":"address"},{"indexed":true,"internalType":"address","name":"manager","type":"address"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"LotteryCreated","type":"event"},{"stateMutability":"nonpayable","type":"fallback"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_timeInMinutes","type":"uint256"}],"name":"createLottery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getLotteries","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lotteryAddress","type":"address"}],"name":"getLotteryContractDetails","outputs":[{"components":[{"internalType":"contract Lottery","name":"lotteryContract","type":"address"},{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalPlayers","type":"uint256"}],"internalType":"struct LotteryPool.LotteryInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLotteryContractsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLotteryContractsDetails","outputs":[{"components":[{"internalType":"contract Lottery","name":"lotteryContract","type":"address"},{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalPlayers","type":"uint256"}],"internalType":"struct LotteryPool.LotteryInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"lotteriesContractsAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lotteriesMapping","outputs":[{"internalType":"contract Lottery","name":"lotteryContract","type":"address"},{"internalType":"address","name":"manager","type":"address"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalPlayers","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lotteryAddress","type":"address"}],"name":"withdrawRemainingFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"changeOwner(address)":{"details":"Change the owner of the LotteryPool contract.","params":{"_newOwner":"The address of the new owner."}},"createLottery(uint256)":{"details":"Create a new lottery with a specified duration.","params":{"_timeInMinutes":"The duration of the lottery in minutes."}},"getLotteries()":{"details":"Get the addresses of all lottery contracts in the pool.","returns":{"_0":"An array of lottery contract addresses."}},"getLotteryContractDetails(address)":{"details":"Get details of a specific lottery contract.","params":{"_lotteryAddress":"The address of the lottery contract."},"returns":{"_0":"LotteryInfo struct containing contract information."}},"getLotteryContractsCount()":{"details":"Get the number of lottery contracts created in the pool.","returns":{"_0":"The number of lottery contracts."}},"getLotteryContractsDetails()":{"details":"Get details of a all lottery contract.","returns":{"_0":"LotteryInfo struct containing contract information."}},"withdrawRemainingFunds(address)":{"details":"Withdraw remaining funds from a lottery contract after it ends.","params":{"_lotteryAddress":"The address of the lottery contract."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1046":{"entryPoint":null,"id":1046,"parameterSlots":0,"returnSlots":0},"@_131":{"entryPoint":null,"id":131,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506001600055600380546001600160a01b03191633179055611d07806100376000396000f3fe6080604052600436106100955760003560e01c806398d5abbb1161005957806398d5abbb14610219578063a1bbfcee14610237578063a6f9dae114610257578063b3b5a9c914610277578063bcc82ec4146102975761009c565b8063296df292146100eb578063386021b51461012157806359d23279146101435780638da5cb5b146101bf5780638dd8c56d146101f75761009c565b3661009c57005b3480156100a857600080fd5b5060405162461bcd60e51b8152602060048201526012602482015271115d1a195c881b9bdd081858d8d95c1d195960721b60448201526064015b60405180910390fd5b3480156100f757600080fd5b5061010b6101063660046109e8565b6102b9565b6040516101189190610a18565b60405180910390f35b34801561012d57600080fd5b50610136610312565b6040516101189190610a51565b34801561014f57600080fd5b5061019461015e3660046109e8565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b0393841693909116919084565b604080516001600160a01b039586168152949093166020850152918301526060820152608001610118565b3480156101cb57600080fd5b506003546101df906001600160a01b031681565b6040516001600160a01b039091168152602001610118565b34801561020357600080fd5b50610217610212366004610acb565b610426565b005b34801561022557600080fd5b50600254604051908152602001610118565b34801561024357600080fd5b506101df610252366004610acb565b610656565b34801561026357600080fd5b506102176102723660046109e8565b610680565b34801561028357600080fd5b506102176102923660046109e8565b610722565b3480156102a357600080fd5b506102ac6108c4565b6040516101189190610ae4565b6102c16109a1565b506001600160a01b0390811660009081526001602081815260409283902083516080810185528154861681529281015490941690820152600283015491810191909152600390910154606082015290565b60025460609060009067ffffffffffffffff81111561033357610333610b25565b60405190808252806020026020018201604052801561036c57816020015b6103596109a1565b8152602001906001900390816103515790505b50905060005b6002548110156104205760006002828154811061039157610391610b3b565b60009182526020808320909101546001600160a01b0390811680845260018084526040948590208551608081018752815485168152918101549093169381019390935260028201549383019390935260030154606082015284519192509084908490811061040157610401610b3b565b602002602001018190525050808061041890610b67565b915050610372565b50919050565b6003546001600160a01b031633146104505760405162461bcd60e51b81526004016100e290610b82565b610458610926565b600081116104a85760405162461bcd60e51b815260206004820152601f60248201527f4475726174696f6e206d7573742062652067726561746572207468616e20300060448201526064016100e2565b6000336040516104b7906109db565b6001600160a01b039091168152602001604051809103906000f0801580156104e3573d6000803e3d6000fd5b506040516395805dad60e01b8152600481018490529091506001600160a01b038216906395805dad90602401600060405180830381600087803b15801561052957600080fd5b505af115801561053d573d6000803e3d6000fd5b50505050600061056161055a603c8561098090919063ffffffff16565b4290610995565b604080516080810182526001600160a01b0385811680835233602080850182815285870188815260006060880181815286825260018086528a832099518a54908a166001600160a01b0319918216178b5594518a8201805491909a169086161790985591516002808a01919091559151600390980197909755805495860181559095527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90930180549094168217909355925184815293945090927fadb31808e993e3fdb94e6cb53cd5613030fbcaf5d5491b9a181a3d495995135b910160405180910390a350506106536001600055565b50565b6002818154811061066657600080fd5b6000918252602090912001546001600160a01b0316905081565b6003546001600160a01b031633146106aa5760405162461bcd60e51b81526004016100e290610b82565b6001600160a01b0381166107005760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964206e6577206f776e657220616464726573730000000000000060448201526064016100e2565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b0316331461074c5760405162461bcd60e51b81526004016100e290610b82565b610754610926565b6001600160a01b0381166107aa5760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206c6f7474657279206164647265737300000000000000000060448201526064016100e2565b6001600160a01b038116600090815260016020526040902060028101544210156108165760405162461bcd60e51b815260206004820152601960248201527f4c6f747465727920686173206e6f7420656e646564207965740000000000000060448201526064016100e2565b600081600301541161085c5760405162461bcd60e51b815260206004820152600f60248201526e4e6f207061727469636970616e747360881b60448201526064016100e2565b8054604080516377c3674760e11b815290516001600160a01b039092169163ef86ce8e9160048082019260009290919082900301818387803b1580156108a157600080fd5b505af11580156108b5573d6000803e3d6000fd5b50505050506106536001600055565b6060600280548060200260200160405190810160405280929190818152602001828054801561091c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108fe575b5050505050905090565b600260005414156109795760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100e2565b6002600055565b600061098c8284610bc8565b90505b92915050565b600061098c8284610be7565b604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081525090565b6110d280610c0083390190565b6000602082840312156109fa57600080fd5b81356001600160a01b0381168114610a1157600080fd5b9392505050565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080810161098f565b6020808252825182820181905260009190848201906040850190845b81811015610abf57610aac83855180516001600160a01b0390811683526020808301519091169083015260408082015190830152606090810151910152565b9284019260809290920191600101610a6d565b50909695505050505050565b600060208284031215610add57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610abf5783516001600160a01b031683529284019291840191600101610b00565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610b7b57610b7b610b51565b5060010190565b60208082526026908201527f4f6e6c7920746865206f776e65722063616e20706572666f726d20746869732060408201526530b1ba34b7b760d11b606082015260800190565b6000816000190483118215151615610be257610be2610b51565b500290565b60008219821115610bfa57610bfa610b51565b50019056fe608060405267016345785d8a00006002556101f460065534801561002257600080fd5b506040516110d23803806110d2833981016040819052610041916100ce565b61004a3361007e565b6007805460ff19166002179055600580546001600160a01b03929092166001600160a01b03199092169190911790556100fe565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e057600080fd5b81516001600160a01b03811681146100f757600080fd5b9392505050565b610fc58061010d6000396000f3fe6080604052600436106101145760003560e01c8063dfbf53ae116100a0578063efbe1c1c11610064578063efbe1c1c146102ab578063f00f6921146102c0578063f2fde38b146102e0578063f71d96cb14610300578063f7d978a21461032057600080fd5b8063dfbf53ae14610237578063e97dcb6214610257578063ef86ce8e1461025f578063efa1c48214610274578063efb98bcf1461029657600080fd5b8063481c6a75116100e7578063481c6a7514610196578063715018a6146101ce57806389fdfd05146101e35780638da5cb5b146101f957806395805dad1461021757600080fd5b8063072ea61c146101195780630d683dd9146101425780630ded5dcf146101695780633197cbb614610180575b600080fd5b34801561012557600080fd5b5061012f60025481565b6040519081526020015b60405180910390f35b34801561014e57600080fd5b5060075461015c9060ff1681565b6040516101399190610d54565b34801561017557600080fd5b5061017e610340565b005b34801561018c57600080fd5b5061012f60045481565b3480156101a257600080fd5b506005546101b6906001600160a01b031681565b6040516001600160a01b039091168152602001610139565b3480156101da57600080fd5b5061017e610384565b3480156101ef57600080fd5b5061012f60065481565b34801561020557600080fd5b506000546001600160a01b03166101b6565b34801561022357600080fd5b5061017e610232366004610d7c565b610396565b34801561024357600080fd5b506003546101b6906001600160a01b031681565b61017e610463565b34801561026b57600080fd5b5061017e6105e3565b34801561028057600080fd5b506102896106ae565b6040516101399190610d95565b3480156102a257600080fd5b5061012f61077b565b3480156102b757600080fd5b5061017e6107c4565b3480156102cc57600080fd5b5061017e6102db366004610d7c565b610a5b565b3480156102ec57600080fd5b5061017e6102fb366004610de2565b610acd565b34801561030c57600080fd5b506101b661031b366004610d7c565b610b46565b34801561032c57600080fd5b5061017e61033b366004610d7c565b610b70565b4260045411158015610353575060015415155b80156103755750600160075460ff16600281111561037357610373610d3e565b145b15610382576103826107c4565b565b61038c610bcd565b6103826000610c27565b61039e610bcd565b60028060075460ff1660028111156103b8576103b8610d3e565b146103de5760405162461bcd60e51b81526004016103d590610e0b565b60405180910390fd5b6000821161043a5760405162461bcd60e51b8152602060048201526024808201527f54696d65206475726174696f6e206d75737420626520677265617465722074686044820152630616e20360e41b60648201526084016103d5565b6007805460ff1916600117905561045c61045583603c610c77565b4290610c8a565b6004555050565b600160075460ff16600281111561047c5761047c610d3e565b146104bf5760405162461bcd60e51b8152602060048201526013602482015272131bdd1d195c9e481b9bdd081cdd185c9d1959606a1b60448201526064016103d5565b6002543410156105055760405162461bcd60e51b8152602060048201526011602482015270456e74727920666565206973206c65737360781b60448201526064016103d5565b42600454116105445760405162461bcd60e51b815260206004820152600b60248201526a2a34b6b29034b9903ab81760a91b60448201526064016103d5565b61054d33610c96565b1561059a5760405162461bcd60e51b815260206004820152601d60248201527f596f752061726520616c72656164792061207061727469636970616e7400000060448201526064016103d5565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055610382610340565b6105eb610bcd565b60028060075460ff16600281111561060557610605610d3e565b146106225760405162461bcd60e51b81526004016103d590610e0b565b47806106705760405162461bcd60e51b815260206004820152601e60248201527f4e6f2072656d61696e696e672066756e647320746f207769746864726177000060448201526064016103d5565b600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156106a9573d6000803e3d6000fd5b505050565b60015460609060009067ffffffffffffffff8111156106cf576106cf610e3b565b6040519080825280602002602001820160405280156106f8578160200160208202803683370190505b50905060005b600154811015610775576001818154811061071b5761071b610e51565b9060005260206000200160009054906101000a90046001600160a01b031682828151811061074b5761074b610e51565b6001600160a01b03909216602092830291909101909101528061076d81610e7d565b9150506106fe565b50919050565b6000600160075460ff16600281111561079657610796610d3e565b14156107be5742600454116107ab5750600090565b426004546107b99190610e98565b905090565b50600090565b60018060075460ff1660028111156107de576107de610d3e565b146107fb5760405162461bcd60e51b81526004016103d590610e0b565b4260045411156108605760405162461bcd60e51b815260206004820152602a60248201527f596f752063616e6e6f7420656e6420746865206c6f7474657279206265666f7260448201526965207468652074696d6560b01b60648201526084016103d5565b6001546108a15760405162461bcd60e51b815260206004820152600f60248201526e4e6f207061727469636970616e747360881b60448201526064016103d5565b6007805460ff19166002179055600180546040516000926108ca91449142913390602001610eaf565b6040516020818303038152906040528051906020012060001c6108ed9190610f30565b90506001818154811061090257610902610e51565b6000918252602082200154600380546001600160a01b0319166001600160a01b0390921691909117905560065447919061094b9061271090610945908590610c77565b90610d00565b905060006109598284610e98565b6003546040519192506001600160a01b03169082156108fc029083906000818181858888f19350505050158015610994573d6000803e3d6000fd5b506109a160016000610d0c565b600354604080516001600160a01b039092168252602082018390527f3cf1af53e79884a92609ce59db1ec9f584d88e2d14c8eaba43a21db81318301e910160405180910390a16040518281527fc2bb3206848157e57e737eec7e141f06f5de585e2f1c0f0ec60a04f45a2c00319060200160405180910390a1600080546040516001600160a01b039091169184156108fc02918591818181858888f19350505050158015610a53573d6000803e3d6000fd5b505050505050565b610a63610bcd565b612710811115610ac85760405162461bcd60e51b815260206004820152602a60248201527f436f6d6d697373696f6e20626173697320706f696e74732063616e6e6f7420656044820152697863656564203130302560b01b60648201526084016103d5565b600655565b610ad5610bcd565b6001600160a01b038116610b3a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d5565b610b4381610c27565b50565b60018181548110610b5657600080fd5b6000918252602090912001546001600160a01b0316905081565b610b78610bcd565b60008111610bc85760405162461bcd60e51b815260206004820181905260248201527f456e74727920666565206d7573742062652067726561746572207468616e203060448201526064016103d5565b600255565b6000546001600160a01b031633146103825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610c838284610f44565b9392505050565b6000610c838284610f63565b6000805b600154811015610cf757826001600160a01b031660018281548110610cc157610cc1610e51565b6000918252602090912001546001600160a01b03161415610ce55750600192915050565b80610cef81610e7d565b915050610c9a565b50600092915050565b6000610c838284610f7b565b5080546000825590600052602060002090810190610b4391905b80821115610d3a5760008155600101610d26565b5090565b634e487b7160e01b600052602160045260246000fd5b6020810160038310610d7657634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215610d8e57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610dd65783516001600160a01b031683529284019291840191600101610db1565b50909695505050505050565b600060208284031215610df457600080fd5b81356001600160a01b0381168114610c8357600080fd5b602080825260169082015275496e76616c6964206c6f74746572792073746174757360501b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610e9157610e91610e67565b5060010190565b600082821015610eaa57610eaa610e67565b500390565b848152600060208581840152604083018554866000528260002060005b82811015610ef15781546001600160a01b031684529284019260019182019101610ecc565b50505060609490941b6bffffffffffffffffffffffff1916845250506014909101949350505050565b634e487b7160e01b600052601260045260246000fd5b600082610f3f57610f3f610f1a565b500690565b6000816000190483118215151615610f5e57610f5e610e67565b500290565b60008219821115610f7657610f76610e67565b500190565b600082610f8a57610f8a610f1a565b50049056fea26469706673582212201aee489e90a8935a95172435b41f55205ff5b92c476eec67044bb936a25d680b64736f6c634300080a0033a264697066735822122033016e41317123aae96193903ee2d11878e8eb01107d946556c143be94b0325c64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x1D07 DUP1 PUSH2 0x37 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98D5ABBB GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x98D5ABBB EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA1BBFCEE EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xB3B5A9C9 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xBCC82EC4 EQ PUSH2 0x297 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x296DF292 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x386021B5 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x59D23279 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DD8C56D EQ PUSH2 0x1F7 JUMPI PUSH2 0x9C JUMP JUMPDEST CALLDATASIZE PUSH2 0x9C JUMPI STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115D1A195C881B9BDD081858D8D95C1D1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10B PUSH2 0x106 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x136 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x118 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x118 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x118 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0x9A1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP7 AND DUP2 MSTORE SWAP3 DUP2 ADD SLOAD SWAP1 SWAP5 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x333 JUMPI PUSH2 0x333 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x36C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x359 PUSH2 0x9A1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x351 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x391 JUMPI PUSH2 0x391 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE PUSH1 0x40 SWAP5 DUP6 SWAP1 KECCAK256 DUP6 MLOAD PUSH1 0x80 DUP2 ADD DUP8 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE SWAP2 DUP2 ADD SLOAD SWAP1 SWAP4 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP5 MLOAD SWAP2 SWAP3 POP SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x401 JUMPI PUSH2 0x401 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x418 SWAP1 PUSH2 0xB67 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x372 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x458 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x4E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x95805DAD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x95805DAD SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x53D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x561 PUSH2 0x55A PUSH1 0x3C DUP6 PUSH2 0x980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP9 ADD DUP2 DUP2 MSTORE DUP7 DUP3 MSTORE PUSH1 0x1 DUP1 DUP7 MSTORE DUP11 DUP4 KECCAK256 SWAP10 MLOAD DUP11 SLOAD SWAP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP12 SSTORE SWAP5 MLOAD DUP11 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP11 AND SWAP1 DUP7 AND OR SWAP1 SWAP9 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP1 DUP11 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP9 ADD SWAP8 SWAP1 SWAP8 SSTORE DUP1 SLOAD SWAP6 DUP7 ADD DUP2 SSTORE SWAP1 SWAP6 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP5 AND DUP3 OR SWAP1 SWAP4 SSTORE SWAP3 MLOAD DUP5 DUP2 MSTORE SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH32 0xADB31808E993E3FDB94E6CB53CD5613030FBCAF5D5491B9A181A3D495995135B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x653 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206E6577206F776E6572206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x754 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C6F74746572792061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x816 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F747465727920686173206E6F7420656E6465642079657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 ADD SLOAD GT PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F207061727469636970616E7473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x77C36747 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xEF86CE8E SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x653 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x91C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8FE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98C DUP3 DUP5 PUSH2 0xBC8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98C DUP3 DUP5 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x10D2 DUP1 PUSH2 0xC00 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x98F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xABF JUMPI PUSH2 0xAAC DUP4 DUP6 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0x80 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA6D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xABF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB00 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7B PUSH2 0xB51 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E20706572666F726D207468697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x30B1BA34B7B7 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE2 PUSH2 0xB51 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBFA JUMPI PUSH2 0xBFA PUSH2 0xB51 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x16345785D8A0000 PUSH1 0x2 SSTORE PUSH2 0x1F4 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10D2 CODESIZE SUB DUP1 PUSH2 0x10D2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x41 SWAP2 PUSH2 0xCE JUMP JUMPDEST PUSH2 0x4A CALLER PUSH2 0x7E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFC5 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDFBF53AE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEFBE1C1C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF00F6921 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xF7D978A2 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xEF86CE8E EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xEFA1C482 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xEFB98BCF EQ PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x481C6A75 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x89FDFD05 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95805DAD EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72EA61C EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xD683DD9 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xDED5DCF EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x15C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xD54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x340 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1B6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x384 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1B6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x463 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x5E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x77B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x7C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xB70 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI POP PUSH1 0x1 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x375 JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x373 JUMPI PUSH2 0x373 PUSH2 0xD3E JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x382 JUMPI PUSH2 0x382 PUSH2 0x7C4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x38C PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x382 PUSH1 0x0 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x39E PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x54696D65206475726174696F6E206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x45C PUSH2 0x455 DUP4 PUSH1 0x3C PUSH2 0xC77 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x47C JUMPI PUSH2 0x47C PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x131BDD1D195C9E481B9BDD081CDD185C9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x505 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x456E74727920666565206973206C657373 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2A34B6B29034B9903AB817 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x54D CALLER PUSH2 0xC96 JUMP JUMPDEST ISZERO PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C72656164792061207061727469636970616E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x382 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x5EB PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x605 JUMPI PUSH2 0x605 PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072656D61696E696E672066756E647320746F2077697468647261770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6F8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0xE51 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x74B JUMPI PUSH2 0x74B PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x76D DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6FE JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0xD3E JUMP JUMPDEST EQ ISZERO PUSH2 0x7BE JUMPI TIMESTAMP PUSH1 0x4 SLOAD GT PUSH2 0x7AB JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT ISZERO PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F7420656E6420746865206C6F7474657279206265666F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65207468652074696D65 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F207061727469636970616E7473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x8CA SWAP2 DIFFICULTY SWAP2 TIMESTAMP SWAP2 CALLER SWAP1 PUSH1 0x20 ADD PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x902 JUMPI PUSH2 0x902 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 SLOAD SELFBALANCE SWAP2 SWAP1 PUSH2 0x94B SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x945 SWAP1 DUP6 SWAP1 PUSH2 0xC77 JUMP JUMPDEST SWAP1 PUSH2 0xD00 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x959 DUP3 DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x9A1 PUSH1 0x1 PUSH1 0x0 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x3CF1AF53E79884A92609CE59DB1EC9F584D88E2D14C8EABA43A21DB81318301E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xC2BB3206848157E57E737EEC7E141F06F5DE585E2F1C0F0EC60A04F45A2C0031 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 DUP6 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D697373696F6E20626173697320706F696E74732063616E6E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x78636565642031303025 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xAD5 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xB43 DUP2 PUSH2 0xC27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xB78 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74727920666565206D7573742062652067726561746572207468616E2030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xCF7 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCC1 JUMPI PUSH2 0xCC1 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xCE5 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xCEF DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC9A JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF7B JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB43 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD26 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xD76 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDD6 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDB1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206C6F747465727920737461747573 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE67 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xEAA PUSH2 0xE67 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 DUP2 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP6 SLOAD DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEF1 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xECC JUMP JUMPDEST POP POP POP PUSH1 0x60 SWAP5 SWAP1 SWAP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 MSTORE POP POP PUSH1 0x14 SWAP1 SWAP2 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF3F JUMPI PUSH2 0xF3F PUSH2 0xF1A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF5E JUMPI PUSH2 0xF5E PUSH2 0xE67 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF76 JUMPI PUSH2 0xF76 PUSH2 0xE67 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF8A JUMPI PUSH2 0xF8A PUSH2 0xF1A JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xEE BASEFEE SWAP15 SWAP1 0xA8 SWAP4 GAS SWAP6 OR 0x24 CALLDATALOAD 0xB4 0x1F SSTORE KECCAK256 0x5F CREATE2 0xB9 0x2C SELFBALANCE PUSH15 0xEC67044BB936A25D680B64736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER ADD PUSH15 0x41317123AAE96193903EE2D11878E8 0xEB ADD LT PUSH30 0x946556C143BE94B0325C64736F6C634300080A0033000000000000000000 ","sourceMap":"203:3973:5:-:0;;;791:49;;;;;;;;;-1:-1:-1;1716:1:1;1821:7;:22;815:5:5;:18;;-1:-1:-1;;;;;;815:18:5;823:10;815:18;;;203:3973;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_1290":{"entryPoint":null,"id":1290,"parameterSlots":0,"returnSlots":0},"@_1298":{"entryPoint":null,"id":1298,"parameterSlots":0,"returnSlots":0},"@_nonReentrantAfter_165":{"entryPoint":null,"id":165,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_157":{"entryPoint":2342,"id":157,"parameterSlots":0,"returnSlots":0},"@add_375":{"entryPoint":2453,"id":375,"parameterSlots":2,"returnSlots":1},"@changeOwner_1286":{"entryPoint":1664,"id":1286,"parameterSlots":1,"returnSlots":0},"@createLottery_1125":{"entryPoint":1062,"id":1125,"parameterSlots":1,"returnSlots":0},"@getLotteries_1211":{"entryPoint":2244,"id":1211,"parameterSlots":0,"returnSlots":1},"@getLotteryContractDetails_1149":{"entryPoint":697,"id":1149,"parameterSlots":1,"returnSlots":1},"@getLotteryContractsCount_1135":{"entryPoint":null,"id":1135,"parameterSlots":0,"returnSlots":1},"@getLotteryContractsDetails_1201":{"entryPoint":786,"id":1201,"parameterSlots":0,"returnSlots":1},"@lotteriesContractsAddresses_1015":{"entryPoint":1622,"id":1015,"parameterSlots":0,"returnSlots":0},"@lotteriesMapping_1012":{"entryPoint":null,"id":1012,"parameterSlots":0,"returnSlots":0},"@mul_405":{"entryPoint":2432,"id":405,"parameterSlots":2,"returnSlots":1},"@owner_1017":{"entryPoint":null,"id":1017,"parameterSlots":0,"returnSlots":0},"@withdrawRemainingFunds_1263":{"entryPoint":1826,"id":1263,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":2536,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":2763,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_LotteryInfo":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2788,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2641,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_Lottery_$987_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_10c030b8fde171d5eeb750d80503a36de026870bb3baac0a0b8e70e69750a5ee__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14b0a8be84d07d61bcf74a33fcc6fa503cd75bcfaaf8a34b4e6af88a7c0b12b0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2946,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cb4ee7ccc904fc4dc20bc129220c478ddd4ee71dbfce7c47cf0cb0500a022473__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_LotteryInfo_$1007_memory_ptr__to_t_struct$_LotteryInfo_$1007_memory_ptr__fromStack_reversed":{"entryPoint":2584,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3047,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3016,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":2919,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2897,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2875,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2853,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7036:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"188:168:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"205:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"216:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"198:6:6"},"nodeType":"YulFunctionCall","src":"198:21:6"},"nodeType":"YulExpressionStatement","src":"198:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"239:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"250:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"235:3:6"},"nodeType":"YulFunctionCall","src":"235:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"255:2:6","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"228:6:6"},"nodeType":"YulFunctionCall","src":"228:30:6"},"nodeType":"YulExpressionStatement","src":"228:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"278:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"289:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"274:3:6"},"nodeType":"YulFunctionCall","src":"274:18:6"},{"hexValue":"4574686572206e6f74206163636570746564","kind":"string","nodeType":"YulLiteral","src":"294:20:6","type":"","value":"Ether not accepted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"267:6:6"},"nodeType":"YulFunctionCall","src":"267:48:6"},"nodeType":"YulExpressionStatement","src":"267:48:6"},{"nodeType":"YulAssignment","src":"324:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"336:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"347:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"332:3:6"},"nodeType":"YulFunctionCall","src":"332:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"324:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_10c030b8fde171d5eeb750d80503a36de026870bb3baac0a0b8e70e69750a5ee__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"165:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"179:4:6","type":""}],"src":"14:342:6"},{"body":{"nodeType":"YulBlock","src":"431:216:6","statements":[{"body":{"nodeType":"YulBlock","src":"477:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"486:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"489:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"479:6:6"},"nodeType":"YulFunctionCall","src":"479:12:6"},"nodeType":"YulExpressionStatement","src":"479:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"452:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"461:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"448:3:6"},"nodeType":"YulFunctionCall","src":"448:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"473:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"444:3:6"},"nodeType":"YulFunctionCall","src":"444:32:6"},"nodeType":"YulIf","src":"441:52:6"},{"nodeType":"YulVariableDeclaration","src":"502:36:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"528:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"515:12:6"},"nodeType":"YulFunctionCall","src":"515:23:6"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"506:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"601:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"610:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"613:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"603:6:6"},"nodeType":"YulFunctionCall","src":"603:12:6"},"nodeType":"YulExpressionStatement","src":"603:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"560:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"571:5:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"586:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"591:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"582:3:6"},"nodeType":"YulFunctionCall","src":"582:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"595:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"578:3:6"},"nodeType":"YulFunctionCall","src":"578:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"567:3:6"},"nodeType":"YulFunctionCall","src":"567:31:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"557:2:6"},"nodeType":"YulFunctionCall","src":"557:42:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"550:6:6"},"nodeType":"YulFunctionCall","src":"550:50:6"},"nodeType":"YulIf","src":"547:70:6"},{"nodeType":"YulAssignment","src":"626:15:6","value":{"name":"value","nodeType":"YulIdentifier","src":"636:5:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"626:6:6"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"397:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"408:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"420:6:6","type":""}],"src":"361:286:6"},{"body":{"nodeType":"YulBlock","src":"707:265:6","statements":[{"nodeType":"YulVariableDeclaration","src":"717:29:6","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"735:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"740:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"731:3:6"},"nodeType":"YulFunctionCall","src":"731:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"744:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"727:3:6"},"nodeType":"YulFunctionCall","src":"727:19:6"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"721:2:6","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"762:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"777:5:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:6"},"nodeType":"YulFunctionCall","src":"771:12:6"},{"name":"_1","nodeType":"YulIdentifier","src":"785:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"767:3:6"},"nodeType":"YulFunctionCall","src":"767:21:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"755:6:6"},"nodeType":"YulFunctionCall","src":"755:34:6"},"nodeType":"YulExpressionStatement","src":"755:34:6"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"809:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"814:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"805:3:6"},"nodeType":"YulFunctionCall","src":"805:14:6"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"842:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:6"},"nodeType":"YulFunctionCall","src":"831:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"825:5:6"},"nodeType":"YulFunctionCall","src":"825:23:6"},{"name":"_1","nodeType":"YulIdentifier","src":"850:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"821:3:6"},"nodeType":"YulFunctionCall","src":"821:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"798:6:6"},"nodeType":"YulFunctionCall","src":"798:56:6"},"nodeType":"YulExpressionStatement","src":"798:56:6"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"874:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"879:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"870:3:6"},"nodeType":"YulFunctionCall","src":"870:14:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"896:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"903:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"892:3:6"},"nodeType":"YulFunctionCall","src":"892:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"886:5:6"},"nodeType":"YulFunctionCall","src":"886:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"863:6:6"},"nodeType":"YulFunctionCall","src":"863:47:6"},"nodeType":"YulExpressionStatement","src":"863:47:6"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"930:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"935:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"926:3:6"},"nodeType":"YulFunctionCall","src":"926:14:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"952:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"959:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"948:3:6"},"nodeType":"YulFunctionCall","src":"948:16:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"942:5:6"},"nodeType":"YulFunctionCall","src":"942:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"919:6:6"},"nodeType":"YulFunctionCall","src":"919:47:6"},"nodeType":"YulExpressionStatement","src":"919:47:6"}]},"name":"abi_encode_struct_LotteryInfo","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"691:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"698:3:6","type":""}],"src":"652:320:6"},{"body":{"nodeType":"YulBlock","src":"1136:100:6","statements":[{"nodeType":"YulAssignment","src":"1146:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1158:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1169:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1154:3:6"},"nodeType":"YulFunctionCall","src":"1154:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1146:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1212:6:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1220:9:6"}],"functionName":{"name":"abi_encode_struct_LotteryInfo","nodeType":"YulIdentifier","src":"1182:29:6"},"nodeType":"YulFunctionCall","src":"1182:48:6"},"nodeType":"YulExpressionStatement","src":"1182:48:6"}]},"name":"abi_encode_tuple_t_struct$_LotteryInfo_$1007_memory_ptr__to_t_struct$_LotteryInfo_$1007_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1105:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1116:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1127:4:6","type":""}],"src":"977:259:6"},{"body":{"nodeType":"YulBlock","src":"1450:506:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1460:12:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1470:2:6","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1464:2:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1481:32:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1499:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1510:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1495:3:6"},"nodeType":"YulFunctionCall","src":"1495:18:6"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1485:6:6","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1529:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1540:2:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1522:6:6"},"nodeType":"YulFunctionCall","src":"1522:21:6"},"nodeType":"YulExpressionStatement","src":"1522:21:6"},{"nodeType":"YulVariableDeclaration","src":"1552:17:6","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1563:6:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1556:3:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1578:27:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1598:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1592:5:6"},"nodeType":"YulFunctionCall","src":"1592:13:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1582:6:6","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1621:6:6"},{"name":"length","nodeType":"YulIdentifier","src":"1629:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1614:6:6"},"nodeType":"YulFunctionCall","src":"1614:22:6"},"nodeType":"YulExpressionStatement","src":"1614:22:6"},{"nodeType":"YulAssignment","src":"1645:25:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:6"},"nodeType":"YulFunctionCall","src":"1652:18:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1645:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"1679:29:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1697:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1705:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1693:3:6"},"nodeType":"YulFunctionCall","src":"1693:15:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1683:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1717:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1726:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1721:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1785:145:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1835:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1829:5:6"},"nodeType":"YulFunctionCall","src":"1829:13:6"},{"name":"pos","nodeType":"YulIdentifier","src":"1844:3:6"}],"functionName":{"name":"abi_encode_struct_LotteryInfo","nodeType":"YulIdentifier","src":"1799:29:6"},"nodeType":"YulFunctionCall","src":"1799:49:6"},"nodeType":"YulExpressionStatement","src":"1799:49:6"},{"nodeType":"YulAssignment","src":"1861:21:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1872:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"1877:4:6","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1868:3:6"},"nodeType":"YulFunctionCall","src":"1868:14:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1861:3:6"}]},{"nodeType":"YulAssignment","src":"1895:25:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1909:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1917:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:6"},"nodeType":"YulFunctionCall","src":"1905:15:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1895:6:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1747:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"1750:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1744:2:6"},"nodeType":"YulFunctionCall","src":"1744:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1758:18:6","statements":[{"nodeType":"YulAssignment","src":"1760:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1769:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"1772:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1765:3:6"},"nodeType":"YulFunctionCall","src":"1765:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1760:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"1740:3:6","statements":[]},"src":"1736:194:6"},{"nodeType":"YulAssignment","src":"1939:11:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"1947:3:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1939:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1419:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1430:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1441:4:6","type":""}],"src":"1241:715:6"},{"body":{"nodeType":"YulBlock","src":"2161:262:6","statements":[{"nodeType":"YulAssignment","src":"2171:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2183:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2194:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2179:3:6"},"nodeType":"YulFunctionCall","src":"2179:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2171:4:6"}]},{"nodeType":"YulVariableDeclaration","src":"2207:29:6","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2225:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2230:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2221:3:6"},"nodeType":"YulFunctionCall","src":"2221:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"2234:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2217:3:6"},"nodeType":"YulFunctionCall","src":"2217:19:6"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2211:2:6","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2252:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2267:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"2275:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2263:3:6"},"nodeType":"YulFunctionCall","src":"2263:15:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2245:6:6"},"nodeType":"YulFunctionCall","src":"2245:34:6"},"nodeType":"YulExpressionStatement","src":"2245:34:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2299:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2310:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2295:3:6"},"nodeType":"YulFunctionCall","src":"2295:18:6"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2319:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"2327:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2315:3:6"},"nodeType":"YulFunctionCall","src":"2315:15:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2288:6:6"},"nodeType":"YulFunctionCall","src":"2288:43:6"},"nodeType":"YulExpressionStatement","src":"2288:43:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2351:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2362:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:6"},"nodeType":"YulFunctionCall","src":"2347:18:6"},{"name":"value2","nodeType":"YulIdentifier","src":"2367:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:6"},"nodeType":"YulFunctionCall","src":"2340:34:6"},"nodeType":"YulExpressionStatement","src":"2340:34:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2394:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2405:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2390:3:6"},"nodeType":"YulFunctionCall","src":"2390:18:6"},{"name":"value3","nodeType":"YulIdentifier","src":"2410:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2383:6:6"},"nodeType":"YulFunctionCall","src":"2383:34:6"},"nodeType":"YulExpressionStatement","src":"2383:34:6"}]},"name":"abi_encode_tuple_t_contract$_Lottery_$987_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2106:9:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2117:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2125:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2133:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2141:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2152:4:6","type":""}],"src":"1961:462:6"},{"body":{"nodeType":"YulBlock","src":"2529:102:6","statements":[{"nodeType":"YulAssignment","src":"2539:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2551:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2562:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:6"},"nodeType":"YulFunctionCall","src":"2547:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2539:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2581:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2596:6:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2612:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2617:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2608:3:6"},"nodeType":"YulFunctionCall","src":"2608:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"2621:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2604:3:6"},"nodeType":"YulFunctionCall","src":"2604:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2592:3:6"},"nodeType":"YulFunctionCall","src":"2592:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2574:6:6"},"nodeType":"YulFunctionCall","src":"2574:51:6"},"nodeType":"YulExpressionStatement","src":"2574:51:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2498:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2509:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2520:4:6","type":""}],"src":"2428:203:6"},{"body":{"nodeType":"YulBlock","src":"2706:110:6","statements":[{"body":{"nodeType":"YulBlock","src":"2752:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2761:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2764:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2754:6:6"},"nodeType":"YulFunctionCall","src":"2754:12:6"},"nodeType":"YulExpressionStatement","src":"2754:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2727:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2736:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2723:3:6"},"nodeType":"YulFunctionCall","src":"2723:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"2748:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2719:3:6"},"nodeType":"YulFunctionCall","src":"2719:32:6"},"nodeType":"YulIf","src":"2716:52:6"},{"nodeType":"YulAssignment","src":"2777:33:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2800:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2787:12:6"},"nodeType":"YulFunctionCall","src":"2787:23:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2777:6:6"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2672:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2683:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2695:6:6","type":""}],"src":"2636:180:6"},{"body":{"nodeType":"YulBlock","src":"2922:76:6","statements":[{"nodeType":"YulAssignment","src":"2932:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2944:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2955:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2940:3:6"},"nodeType":"YulFunctionCall","src":"2940:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2932:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2974:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"2985:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2967:6:6"},"nodeType":"YulFunctionCall","src":"2967:25:6"},"nodeType":"YulExpressionStatement","src":"2967:25:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2891:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2902:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2913:4:6","type":""}],"src":"2821:177:6"},{"body":{"nodeType":"YulBlock","src":"3154:507:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3164:12:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3174:2:6","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3168:2:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3185:32:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3203:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"3214:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3199:3:6"},"nodeType":"YulFunctionCall","src":"3199:18:6"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"3189:6:6","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3233:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"3244:2:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3226:6:6"},"nodeType":"YulFunctionCall","src":"3226:21:6"},"nodeType":"YulExpressionStatement","src":"3226:21:6"},{"nodeType":"YulVariableDeclaration","src":"3256:17:6","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"3267:6:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"3260:3:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3282:27:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3302:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3296:5:6"},"nodeType":"YulFunctionCall","src":"3296:13:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3286:6:6","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"3325:6:6"},{"name":"length","nodeType":"YulIdentifier","src":"3333:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3318:6:6"},"nodeType":"YulFunctionCall","src":"3318:22:6"},"nodeType":"YulExpressionStatement","src":"3318:22:6"},{"nodeType":"YulAssignment","src":"3349:25:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3371:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3356:3:6"},"nodeType":"YulFunctionCall","src":"3356:18:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3349:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"3383:29:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3401:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"3409:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3397:3:6"},"nodeType":"YulFunctionCall","src":"3397:15:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"3387:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3421:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3430:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3425:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3489:146:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3510:3:6"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3525:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3519:5:6"},"nodeType":"YulFunctionCall","src":"3519:13:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3542:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3547:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3538:3:6"},"nodeType":"YulFunctionCall","src":"3538:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"3551:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3534:3:6"},"nodeType":"YulFunctionCall","src":"3534:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3515:3:6"},"nodeType":"YulFunctionCall","src":"3515:39:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3503:6:6"},"nodeType":"YulFunctionCall","src":"3503:52:6"},"nodeType":"YulExpressionStatement","src":"3503:52:6"},{"nodeType":"YulAssignment","src":"3568:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3579:3:6"},{"name":"_1","nodeType":"YulIdentifier","src":"3584:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3575:3:6"},"nodeType":"YulFunctionCall","src":"3575:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3568:3:6"}]},{"nodeType":"YulAssignment","src":"3600:25:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3614:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"3622:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3610:3:6"},"nodeType":"YulFunctionCall","src":"3610:15:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3600:6:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3451:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"3454:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3448:2:6"},"nodeType":"YulFunctionCall","src":"3448:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3462:18:6","statements":[{"nodeType":"YulAssignment","src":"3464:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3473:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"3476:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3469:3:6"},"nodeType":"YulFunctionCall","src":"3469:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3464:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"3444:3:6","statements":[]},"src":"3440:195:6"},{"nodeType":"YulAssignment","src":"3644:11:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"3652:3:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3644:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3123:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3134:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3145:4:6","type":""}],"src":"3003:658:6"},{"body":{"nodeType":"YulBlock","src":"3698:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3715:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3722:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3727:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3718:3:6"},"nodeType":"YulFunctionCall","src":"3718:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3708:6:6"},"nodeType":"YulFunctionCall","src":"3708:31:6"},"nodeType":"YulExpressionStatement","src":"3708:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3755:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3758:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3748:6:6"},"nodeType":"YulFunctionCall","src":"3748:15:6"},"nodeType":"YulExpressionStatement","src":"3748:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3779:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3782:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3772:6:6"},"nodeType":"YulFunctionCall","src":"3772:15:6"},"nodeType":"YulExpressionStatement","src":"3772:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3666:127:6"},{"body":{"nodeType":"YulBlock","src":"3830:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3847:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3854:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3859:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3850:3:6"},"nodeType":"YulFunctionCall","src":"3850:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3840:6:6"},"nodeType":"YulFunctionCall","src":"3840:31:6"},"nodeType":"YulExpressionStatement","src":"3840:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3887:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3890:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3880:6:6"},"nodeType":"YulFunctionCall","src":"3880:15:6"},"nodeType":"YulExpressionStatement","src":"3880:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3911:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3914:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3904:6:6"},"nodeType":"YulFunctionCall","src":"3904:15:6"},"nodeType":"YulExpressionStatement","src":"3904:15:6"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"3798:127:6"},{"body":{"nodeType":"YulBlock","src":"3962:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3979:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3986:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3991:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3982:3:6"},"nodeType":"YulFunctionCall","src":"3982:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3972:6:6"},"nodeType":"YulFunctionCall","src":"3972:31:6"},"nodeType":"YulExpressionStatement","src":"3972:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4019:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4022:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4012:6:6"},"nodeType":"YulFunctionCall","src":"4012:15:6"},"nodeType":"YulExpressionStatement","src":"4012:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4043:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4046:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4036:6:6"},"nodeType":"YulFunctionCall","src":"4036:15:6"},"nodeType":"YulExpressionStatement","src":"4036:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3930:127:6"},{"body":{"nodeType":"YulBlock","src":"4109:88:6","statements":[{"body":{"nodeType":"YulBlock","src":"4140:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4142:16:6"},"nodeType":"YulFunctionCall","src":"4142:18:6"},"nodeType":"YulExpressionStatement","src":"4142:18:6"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4125:5:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4136:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4132:3:6"},"nodeType":"YulFunctionCall","src":"4132:6:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4122:2:6"},"nodeType":"YulFunctionCall","src":"4122:17:6"},"nodeType":"YulIf","src":"4119:43:6"},{"nodeType":"YulAssignment","src":"4171:20:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4182:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"4189:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4178:3:6"},"nodeType":"YulFunctionCall","src":"4178:13:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4171:3:6"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4091:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4101:3:6","type":""}],"src":"4062:135:6"},{"body":{"nodeType":"YulBlock","src":"4376:228:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4393:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4404:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4386:6:6"},"nodeType":"YulFunctionCall","src":"4386:21:6"},"nodeType":"YulExpressionStatement","src":"4386:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4427:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4438:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4423:3:6"},"nodeType":"YulFunctionCall","src":"4423:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"4443:2:6","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4416:6:6"},"nodeType":"YulFunctionCall","src":"4416:30:6"},"nodeType":"YulExpressionStatement","src":"4416:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4466:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4477:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4462:3:6"},"nodeType":"YulFunctionCall","src":"4462:18:6"},{"hexValue":"4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320","kind":"string","nodeType":"YulLiteral","src":"4482:34:6","type":"","value":"Only the owner can perform this "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4455:6:6"},"nodeType":"YulFunctionCall","src":"4455:62:6"},"nodeType":"YulExpressionStatement","src":"4455:62:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4537:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4548:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4533:3:6"},"nodeType":"YulFunctionCall","src":"4533:18:6"},{"hexValue":"616374696f6e","kind":"string","nodeType":"YulLiteral","src":"4553:8:6","type":"","value":"action"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4526:6:6"},"nodeType":"YulFunctionCall","src":"4526:36:6"},"nodeType":"YulExpressionStatement","src":"4526:36:6"},{"nodeType":"YulAssignment","src":"4571:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4583:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4594:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4579:3:6"},"nodeType":"YulFunctionCall","src":"4579:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4571:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4353:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4367:4:6","type":""}],"src":"4202:402:6"},{"body":{"nodeType":"YulBlock","src":"4783:181:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4800:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4811:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:6"},"nodeType":"YulFunctionCall","src":"4793:21:6"},"nodeType":"YulExpressionStatement","src":"4793:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4834:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4845:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4830:3:6"},"nodeType":"YulFunctionCall","src":"4830:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"4850:2:6","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4823:6:6"},"nodeType":"YulFunctionCall","src":"4823:30:6"},"nodeType":"YulExpressionStatement","src":"4823:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4873:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4884:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4869:3:6"},"nodeType":"YulFunctionCall","src":"4869:18:6"},{"hexValue":"4475726174696f6e206d7573742062652067726561746572207468616e2030","kind":"string","nodeType":"YulLiteral","src":"4889:33:6","type":"","value":"Duration must be greater than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4862:6:6"},"nodeType":"YulFunctionCall","src":"4862:61:6"},"nodeType":"YulExpressionStatement","src":"4862:61:6"},{"nodeType":"YulAssignment","src":"4932:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4944:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4955:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4940:3:6"},"nodeType":"YulFunctionCall","src":"4940:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4932:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4760:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4774:4:6","type":""}],"src":"4609:355:6"},{"body":{"nodeType":"YulBlock","src":"5143:175:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5160:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5171:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5153:6:6"},"nodeType":"YulFunctionCall","src":"5153:21:6"},"nodeType":"YulExpressionStatement","src":"5153:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5194:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5205:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5190:3:6"},"nodeType":"YulFunctionCall","src":"5190:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"5210:2:6","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5183:6:6"},"nodeType":"YulFunctionCall","src":"5183:30:6"},"nodeType":"YulExpressionStatement","src":"5183:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5233:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5244:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5229:3:6"},"nodeType":"YulFunctionCall","src":"5229:18:6"},{"hexValue":"496e76616c6964206e6577206f776e65722061646472657373","kind":"string","nodeType":"YulLiteral","src":"5249:27:6","type":"","value":"Invalid new owner address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5222:6:6"},"nodeType":"YulFunctionCall","src":"5222:55:6"},"nodeType":"YulExpressionStatement","src":"5222:55:6"},{"nodeType":"YulAssignment","src":"5286:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5298:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5309:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5294:3:6"},"nodeType":"YulFunctionCall","src":"5294:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5286:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5120:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5134:4:6","type":""}],"src":"4969:349:6"},{"body":{"nodeType":"YulBlock","src":"5497:173:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5514:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5525:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5507:6:6"},"nodeType":"YulFunctionCall","src":"5507:21:6"},"nodeType":"YulExpressionStatement","src":"5507:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5548:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5559:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5544:3:6"},"nodeType":"YulFunctionCall","src":"5544:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"5564:2:6","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5537:6:6"},"nodeType":"YulFunctionCall","src":"5537:30:6"},"nodeType":"YulExpressionStatement","src":"5537:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5587:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5598:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5583:3:6"},"nodeType":"YulFunctionCall","src":"5583:18:6"},{"hexValue":"496e76616c6964206c6f74746572792061646472657373","kind":"string","nodeType":"YulLiteral","src":"5603:25:6","type":"","value":"Invalid lottery address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5576:6:6"},"nodeType":"YulFunctionCall","src":"5576:53:6"},"nodeType":"YulExpressionStatement","src":"5576:53:6"},{"nodeType":"YulAssignment","src":"5638:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5650:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5661:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5646:3:6"},"nodeType":"YulFunctionCall","src":"5646:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5638:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_cb4ee7ccc904fc4dc20bc129220c478ddd4ee71dbfce7c47cf0cb0500a022473__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5474:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5488:4:6","type":""}],"src":"5323:347:6"},{"body":{"nodeType":"YulBlock","src":"5849:175:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5866:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5877:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5859:6:6"},"nodeType":"YulFunctionCall","src":"5859:21:6"},"nodeType":"YulExpressionStatement","src":"5859:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5900:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5911:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5896:3:6"},"nodeType":"YulFunctionCall","src":"5896:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"5916:2:6","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5889:6:6"},"nodeType":"YulFunctionCall","src":"5889:30:6"},"nodeType":"YulExpressionStatement","src":"5889:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5939:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5950:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5935:3:6"},"nodeType":"YulFunctionCall","src":"5935:18:6"},{"hexValue":"4c6f747465727920686173206e6f7420656e64656420796574","kind":"string","nodeType":"YulLiteral","src":"5955:27:6","type":"","value":"Lottery has not ended yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5928:6:6"},"nodeType":"YulFunctionCall","src":"5928:55:6"},"nodeType":"YulExpressionStatement","src":"5928:55:6"},{"nodeType":"YulAssignment","src":"5992:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6004:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6015:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6000:3:6"},"nodeType":"YulFunctionCall","src":"6000:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5992:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_14b0a8be84d07d61bcf74a33fcc6fa503cd75bcfaaf8a34b4e6af88a7c0b12b0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5826:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5840:4:6","type":""}],"src":"5675:349:6"},{"body":{"nodeType":"YulBlock","src":"6203:165:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6220:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6231:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6213:6:6"},"nodeType":"YulFunctionCall","src":"6213:21:6"},"nodeType":"YulExpressionStatement","src":"6213:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6254:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6265:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6250:3:6"},"nodeType":"YulFunctionCall","src":"6250:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"6270:2:6","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6243:6:6"},"nodeType":"YulFunctionCall","src":"6243:30:6"},"nodeType":"YulExpressionStatement","src":"6243:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6293:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6304:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6289:3:6"},"nodeType":"YulFunctionCall","src":"6289:18:6"},{"hexValue":"4e6f207061727469636970616e7473","kind":"string","nodeType":"YulLiteral","src":"6309:17:6","type":"","value":"No participants"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6282:6:6"},"nodeType":"YulFunctionCall","src":"6282:45:6"},"nodeType":"YulExpressionStatement","src":"6282:45:6"},{"nodeType":"YulAssignment","src":"6336:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6348:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6359:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6344:3:6"},"nodeType":"YulFunctionCall","src":"6344:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6336:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6180:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6194:4:6","type":""}],"src":"6029:339:6"},{"body":{"nodeType":"YulBlock","src":"6547:181:6","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6564:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6575:2:6","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6557:6:6"},"nodeType":"YulFunctionCall","src":"6557:21:6"},"nodeType":"YulExpressionStatement","src":"6557:21:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6598:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6609:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6594:3:6"},"nodeType":"YulFunctionCall","src":"6594:18:6"},{"kind":"number","nodeType":"YulLiteral","src":"6614:2:6","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6587:6:6"},"nodeType":"YulFunctionCall","src":"6587:30:6"},"nodeType":"YulExpressionStatement","src":"6587:30:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6637:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6648:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6633:3:6"},"nodeType":"YulFunctionCall","src":"6633:18:6"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"6653:33:6","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6626:6:6"},"nodeType":"YulFunctionCall","src":"6626:61:6"},"nodeType":"YulExpressionStatement","src":"6626:61:6"},{"nodeType":"YulAssignment","src":"6696:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6708:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6719:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6704:3:6"},"nodeType":"YulFunctionCall","src":"6704:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6696:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6524:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6538:4:6","type":""}],"src":"6373:355:6"},{"body":{"nodeType":"YulBlock","src":"6785:116:6","statements":[{"body":{"nodeType":"YulBlock","src":"6844:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6846:16:6"},"nodeType":"YulFunctionCall","src":"6846:18:6"},"nodeType":"YulExpressionStatement","src":"6846:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6816:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6809:6:6"},"nodeType":"YulFunctionCall","src":"6809:9:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6802:6:6"},"nodeType":"YulFunctionCall","src":"6802:17:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6824:1:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6835:1:6","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6831:3:6"},"nodeType":"YulFunctionCall","src":"6831:6:6"},{"name":"x","nodeType":"YulIdentifier","src":"6839:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6827:3:6"},"nodeType":"YulFunctionCall","src":"6827:14:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6821:2:6"},"nodeType":"YulFunctionCall","src":"6821:21:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6798:3:6"},"nodeType":"YulFunctionCall","src":"6798:45:6"},"nodeType":"YulIf","src":"6795:71:6"},{"nodeType":"YulAssignment","src":"6875:20:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6890:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6893:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6886:3:6"},"nodeType":"YulFunctionCall","src":"6886:9:6"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6875:7:6"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6764:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6767:1:6","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6773:7:6","type":""}],"src":"6733:168:6"},{"body":{"nodeType":"YulBlock","src":"6954:80:6","statements":[{"body":{"nodeType":"YulBlock","src":"6981:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6983:16:6"},"nodeType":"YulFunctionCall","src":"6983:18:6"},"nodeType":"YulExpressionStatement","src":"6983:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6970:1:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6977:1:6"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6973:3:6"},"nodeType":"YulFunctionCall","src":"6973:6:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6967:2:6"},"nodeType":"YulFunctionCall","src":"6967:13:6"},"nodeType":"YulIf","src":"6964:39:6"},{"nodeType":"YulAssignment","src":"7012:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7023:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"7026:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7019:3:6"},"nodeType":"YulFunctionCall","src":"7019:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7012:3:6"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6937:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6940:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6946:3:6","type":""}],"src":"6906:128:6"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_stringliteral_10c030b8fde171d5eeb750d80503a36de026870bb3baac0a0b8e70e69750a5ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Ether not accepted\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_struct_LotteryInfo(value, pos)\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(pos, and(mload(value), _1))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), _1))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n    }\n    function abi_encode_tuple_t_struct$_LotteryInfo_$1007_memory_ptr__to_t_struct$_LotteryInfo_$1007_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        abi_encode_struct_LotteryInfo(value0, headStart)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_LotteryInfo_$1007_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            abi_encode_struct_LotteryInfo(mload(srcPtr), pos)\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_Lottery_$987_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Only the owner can perform this \")\n        mstore(add(headStart, 96), \"action\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4cddbb94d1300656df5bfde10b4bba4a6155c17fd1e9dd53ca1cc5e40692aef0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Duration must be greater than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid new owner address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cb4ee7ccc904fc4dc20bc129220c478ddd4ee71dbfce7c47cf0cb0500a022473__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid lottery address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_14b0a8be84d07d61bcf74a33fcc6fa503cd75bcfaaf8a34b4e6af88a7c0b12b0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Lottery has not ended yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6c2f79a44715c61f2cf75bf9cbae3228e6e5625f9e20c93ed2ea1947444a713f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"No participants\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100955760003560e01c806398d5abbb1161005957806398d5abbb14610219578063a1bbfcee14610237578063a6f9dae114610257578063b3b5a9c914610277578063bcc82ec4146102975761009c565b8063296df292146100eb578063386021b51461012157806359d23279146101435780638da5cb5b146101bf5780638dd8c56d146101f75761009c565b3661009c57005b3480156100a857600080fd5b5060405162461bcd60e51b8152602060048201526012602482015271115d1a195c881b9bdd081858d8d95c1d195960721b60448201526064015b60405180910390fd5b3480156100f757600080fd5b5061010b6101063660046109e8565b6102b9565b6040516101189190610a18565b60405180910390f35b34801561012d57600080fd5b50610136610312565b6040516101189190610a51565b34801561014f57600080fd5b5061019461015e3660046109e8565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b0393841693909116919084565b604080516001600160a01b039586168152949093166020850152918301526060820152608001610118565b3480156101cb57600080fd5b506003546101df906001600160a01b031681565b6040516001600160a01b039091168152602001610118565b34801561020357600080fd5b50610217610212366004610acb565b610426565b005b34801561022557600080fd5b50600254604051908152602001610118565b34801561024357600080fd5b506101df610252366004610acb565b610656565b34801561026357600080fd5b506102176102723660046109e8565b610680565b34801561028357600080fd5b506102176102923660046109e8565b610722565b3480156102a357600080fd5b506102ac6108c4565b6040516101189190610ae4565b6102c16109a1565b506001600160a01b0390811660009081526001602081815260409283902083516080810185528154861681529281015490941690820152600283015491810191909152600390910154606082015290565b60025460609060009067ffffffffffffffff81111561033357610333610b25565b60405190808252806020026020018201604052801561036c57816020015b6103596109a1565b8152602001906001900390816103515790505b50905060005b6002548110156104205760006002828154811061039157610391610b3b565b60009182526020808320909101546001600160a01b0390811680845260018084526040948590208551608081018752815485168152918101549093169381019390935260028201549383019390935260030154606082015284519192509084908490811061040157610401610b3b565b602002602001018190525050808061041890610b67565b915050610372565b50919050565b6003546001600160a01b031633146104505760405162461bcd60e51b81526004016100e290610b82565b610458610926565b600081116104a85760405162461bcd60e51b815260206004820152601f60248201527f4475726174696f6e206d7573742062652067726561746572207468616e20300060448201526064016100e2565b6000336040516104b7906109db565b6001600160a01b039091168152602001604051809103906000f0801580156104e3573d6000803e3d6000fd5b506040516395805dad60e01b8152600481018490529091506001600160a01b038216906395805dad90602401600060405180830381600087803b15801561052957600080fd5b505af115801561053d573d6000803e3d6000fd5b50505050600061056161055a603c8561098090919063ffffffff16565b4290610995565b604080516080810182526001600160a01b0385811680835233602080850182815285870188815260006060880181815286825260018086528a832099518a54908a166001600160a01b0319918216178b5594518a8201805491909a169086161790985591516002808a01919091559151600390980197909755805495860181559095527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90930180549094168217909355925184815293945090927fadb31808e993e3fdb94e6cb53cd5613030fbcaf5d5491b9a181a3d495995135b910160405180910390a350506106536001600055565b50565b6002818154811061066657600080fd5b6000918252602090912001546001600160a01b0316905081565b6003546001600160a01b031633146106aa5760405162461bcd60e51b81526004016100e290610b82565b6001600160a01b0381166107005760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964206e6577206f776e657220616464726573730000000000000060448201526064016100e2565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b0316331461074c5760405162461bcd60e51b81526004016100e290610b82565b610754610926565b6001600160a01b0381166107aa5760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206c6f7474657279206164647265737300000000000000000060448201526064016100e2565b6001600160a01b038116600090815260016020526040902060028101544210156108165760405162461bcd60e51b815260206004820152601960248201527f4c6f747465727920686173206e6f7420656e646564207965740000000000000060448201526064016100e2565b600081600301541161085c5760405162461bcd60e51b815260206004820152600f60248201526e4e6f207061727469636970616e747360881b60448201526064016100e2565b8054604080516377c3674760e11b815290516001600160a01b039092169163ef86ce8e9160048082019260009290919082900301818387803b1580156108a157600080fd5b505af11580156108b5573d6000803e3d6000fd5b50505050506106536001600055565b6060600280548060200260200160405190810160405280929190818152602001828054801561091c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108fe575b5050505050905090565b600260005414156109795760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100e2565b6002600055565b600061098c8284610bc8565b90505b92915050565b600061098c8284610be7565b604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081525090565b6110d280610c0083390190565b6000602082840312156109fa57600080fd5b81356001600160a01b0381168114610a1157600080fd5b9392505050565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080810161098f565b6020808252825182820181905260009190848201906040850190845b81811015610abf57610aac83855180516001600160a01b0390811683526020808301519091169083015260408082015190830152606090810151910152565b9284019260809290920191600101610a6d565b50909695505050505050565b600060208284031215610add57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610abf5783516001600160a01b031683529284019291840191600101610b00565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610b7b57610b7b610b51565b5060010190565b60208082526026908201527f4f6e6c7920746865206f776e65722063616e20706572666f726d20746869732060408201526530b1ba34b7b760d11b606082015260800190565b6000816000190483118215151615610be257610be2610b51565b500290565b60008219821115610bfa57610bfa610b51565b50019056fe608060405267016345785d8a00006002556101f460065534801561002257600080fd5b506040516110d23803806110d2833981016040819052610041916100ce565b61004a3361007e565b6007805460ff19166002179055600580546001600160a01b03929092166001600160a01b03199092169190911790556100fe565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e057600080fd5b81516001600160a01b03811681146100f757600080fd5b9392505050565b610fc58061010d6000396000f3fe6080604052600436106101145760003560e01c8063dfbf53ae116100a0578063efbe1c1c11610064578063efbe1c1c146102ab578063f00f6921146102c0578063f2fde38b146102e0578063f71d96cb14610300578063f7d978a21461032057600080fd5b8063dfbf53ae14610237578063e97dcb6214610257578063ef86ce8e1461025f578063efa1c48214610274578063efb98bcf1461029657600080fd5b8063481c6a75116100e7578063481c6a7514610196578063715018a6146101ce57806389fdfd05146101e35780638da5cb5b146101f957806395805dad1461021757600080fd5b8063072ea61c146101195780630d683dd9146101425780630ded5dcf146101695780633197cbb614610180575b600080fd5b34801561012557600080fd5b5061012f60025481565b6040519081526020015b60405180910390f35b34801561014e57600080fd5b5060075461015c9060ff1681565b6040516101399190610d54565b34801561017557600080fd5b5061017e610340565b005b34801561018c57600080fd5b5061012f60045481565b3480156101a257600080fd5b506005546101b6906001600160a01b031681565b6040516001600160a01b039091168152602001610139565b3480156101da57600080fd5b5061017e610384565b3480156101ef57600080fd5b5061012f60065481565b34801561020557600080fd5b506000546001600160a01b03166101b6565b34801561022357600080fd5b5061017e610232366004610d7c565b610396565b34801561024357600080fd5b506003546101b6906001600160a01b031681565b61017e610463565b34801561026b57600080fd5b5061017e6105e3565b34801561028057600080fd5b506102896106ae565b6040516101399190610d95565b3480156102a257600080fd5b5061012f61077b565b3480156102b757600080fd5b5061017e6107c4565b3480156102cc57600080fd5b5061017e6102db366004610d7c565b610a5b565b3480156102ec57600080fd5b5061017e6102fb366004610de2565b610acd565b34801561030c57600080fd5b506101b661031b366004610d7c565b610b46565b34801561032c57600080fd5b5061017e61033b366004610d7c565b610b70565b4260045411158015610353575060015415155b80156103755750600160075460ff16600281111561037357610373610d3e565b145b15610382576103826107c4565b565b61038c610bcd565b6103826000610c27565b61039e610bcd565b60028060075460ff1660028111156103b8576103b8610d3e565b146103de5760405162461bcd60e51b81526004016103d590610e0b565b60405180910390fd5b6000821161043a5760405162461bcd60e51b8152602060048201526024808201527f54696d65206475726174696f6e206d75737420626520677265617465722074686044820152630616e20360e41b60648201526084016103d5565b6007805460ff1916600117905561045c61045583603c610c77565b4290610c8a565b6004555050565b600160075460ff16600281111561047c5761047c610d3e565b146104bf5760405162461bcd60e51b8152602060048201526013602482015272131bdd1d195c9e481b9bdd081cdd185c9d1959606a1b60448201526064016103d5565b6002543410156105055760405162461bcd60e51b8152602060048201526011602482015270456e74727920666565206973206c65737360781b60448201526064016103d5565b42600454116105445760405162461bcd60e51b815260206004820152600b60248201526a2a34b6b29034b9903ab81760a91b60448201526064016103d5565b61054d33610c96565b1561059a5760405162461bcd60e51b815260206004820152601d60248201527f596f752061726520616c72656164792061207061727469636970616e7400000060448201526064016103d5565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055610382610340565b6105eb610bcd565b60028060075460ff16600281111561060557610605610d3e565b146106225760405162461bcd60e51b81526004016103d590610e0b565b47806106705760405162461bcd60e51b815260206004820152601e60248201527f4e6f2072656d61696e696e672066756e647320746f207769746864726177000060448201526064016103d5565b600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156106a9573d6000803e3d6000fd5b505050565b60015460609060009067ffffffffffffffff8111156106cf576106cf610e3b565b6040519080825280602002602001820160405280156106f8578160200160208202803683370190505b50905060005b600154811015610775576001818154811061071b5761071b610e51565b9060005260206000200160009054906101000a90046001600160a01b031682828151811061074b5761074b610e51565b6001600160a01b03909216602092830291909101909101528061076d81610e7d565b9150506106fe565b50919050565b6000600160075460ff16600281111561079657610796610d3e565b14156107be5742600454116107ab5750600090565b426004546107b99190610e98565b905090565b50600090565b60018060075460ff1660028111156107de576107de610d3e565b146107fb5760405162461bcd60e51b81526004016103d590610e0b565b4260045411156108605760405162461bcd60e51b815260206004820152602a60248201527f596f752063616e6e6f7420656e6420746865206c6f7474657279206265666f7260448201526965207468652074696d6560b01b60648201526084016103d5565b6001546108a15760405162461bcd60e51b815260206004820152600f60248201526e4e6f207061727469636970616e747360881b60448201526064016103d5565b6007805460ff19166002179055600180546040516000926108ca91449142913390602001610eaf565b6040516020818303038152906040528051906020012060001c6108ed9190610f30565b90506001818154811061090257610902610e51565b6000918252602082200154600380546001600160a01b0319166001600160a01b0390921691909117905560065447919061094b9061271090610945908590610c77565b90610d00565b905060006109598284610e98565b6003546040519192506001600160a01b03169082156108fc029083906000818181858888f19350505050158015610994573d6000803e3d6000fd5b506109a160016000610d0c565b600354604080516001600160a01b039092168252602082018390527f3cf1af53e79884a92609ce59db1ec9f584d88e2d14c8eaba43a21db81318301e910160405180910390a16040518281527fc2bb3206848157e57e737eec7e141f06f5de585e2f1c0f0ec60a04f45a2c00319060200160405180910390a1600080546040516001600160a01b039091169184156108fc02918591818181858888f19350505050158015610a53573d6000803e3d6000fd5b505050505050565b610a63610bcd565b612710811115610ac85760405162461bcd60e51b815260206004820152602a60248201527f436f6d6d697373696f6e20626173697320706f696e74732063616e6e6f7420656044820152697863656564203130302560b01b60648201526084016103d5565b600655565b610ad5610bcd565b6001600160a01b038116610b3a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d5565b610b4381610c27565b50565b60018181548110610b5657600080fd5b6000918252602090912001546001600160a01b0316905081565b610b78610bcd565b60008111610bc85760405162461bcd60e51b815260206004820181905260248201527f456e74727920666565206d7573742062652067726561746572207468616e203060448201526064016103d5565b600255565b6000546001600160a01b031633146103825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610c838284610f44565b9392505050565b6000610c838284610f63565b6000805b600154811015610cf757826001600160a01b031660018281548110610cc157610cc1610e51565b6000918252602090912001546001600160a01b03161415610ce55750600192915050565b80610cef81610e7d565b915050610c9a565b50600092915050565b6000610c838284610f7b565b5080546000825590600052602060002090810190610b4391905b80821115610d3a5760008155600101610d26565b5090565b634e487b7160e01b600052602160045260246000fd5b6020810160038310610d7657634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215610d8e57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610dd65783516001600160a01b031683529284019291840191600101610db1565b50909695505050505050565b600060208284031215610df457600080fd5b81356001600160a01b0381168114610c8357600080fd5b602080825260169082015275496e76616c6964206c6f74746572792073746174757360501b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610e9157610e91610e67565b5060010190565b600082821015610eaa57610eaa610e67565b500390565b848152600060208581840152604083018554866000528260002060005b82811015610ef15781546001600160a01b031684529284019260019182019101610ecc565b50505060609490941b6bffffffffffffffffffffffff1916845250506014909101949350505050565b634e487b7160e01b600052601260045260246000fd5b600082610f3f57610f3f610f1a565b500690565b6000816000190483118215151615610f5e57610f5e610e67565b500290565b60008219821115610f7657610f76610e67565b500190565b600082610f8a57610f8a610f1a565b50049056fea26469706673582212201aee489e90a8935a95172435b41f55205ff5b92c476eec67044bb936a25d680b64736f6c634300080a0033a264697066735822122033016e41317123aae96193903ee2d11878e8eb01107d946556c143be94b0325c64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x95 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x98D5ABBB GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x98D5ABBB EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xA1BBFCEE EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xB3B5A9C9 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xBCC82EC4 EQ PUSH2 0x297 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x296DF292 EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x386021B5 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x59D23279 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DD8C56D EQ PUSH2 0x1F7 JUMPI PUSH2 0x9C JUMP JUMPDEST CALLDATASIZE PUSH2 0x9C JUMPI STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115D1A195C881B9BDD081858D8D95C1D1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10B PUSH2 0x106 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x136 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP1 SWAP2 AND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x118 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1DF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x118 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x203 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x118 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0x9A1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP7 AND DUP2 MSTORE SWAP3 DUP2 ADD SLOAD SWAP1 SWAP5 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x333 JUMPI PUSH2 0x333 PUSH2 0xB25 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x36C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x359 PUSH2 0x9A1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x351 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x420 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x391 JUMPI PUSH2 0x391 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x1 DUP1 DUP5 MSTORE PUSH1 0x40 SWAP5 DUP6 SWAP1 KECCAK256 DUP6 MLOAD PUSH1 0x80 DUP2 ADD DUP8 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE SWAP2 DUP2 ADD SLOAD SWAP1 SWAP4 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP5 MLOAD SWAP2 SWAP3 POP SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x401 JUMPI PUSH2 0x401 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x418 SWAP1 PUSH2 0xB67 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x372 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x450 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x458 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH1 0x40 MLOAD PUSH2 0x4B7 SWAP1 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x4E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x95805DAD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x95805DAD SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x53D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x561 PUSH2 0x55A PUSH1 0x3C DUP6 PUSH2 0x980 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP9 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP9 ADD DUP2 DUP2 MSTORE DUP7 DUP3 MSTORE PUSH1 0x1 DUP1 DUP7 MSTORE DUP11 DUP4 KECCAK256 SWAP10 MLOAD DUP11 SLOAD SWAP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP12 SSTORE SWAP5 MLOAD DUP11 DUP3 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP11 AND SWAP1 DUP7 AND OR SWAP1 SWAP9 SSTORE SWAP2 MLOAD PUSH1 0x2 DUP1 DUP11 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 MLOAD PUSH1 0x3 SWAP1 SWAP9 ADD SWAP8 SWAP1 SWAP8 SSTORE DUP1 SLOAD SWAP6 DUP7 ADD DUP2 SSTORE SWAP1 SWAP6 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP5 AND DUP3 OR SWAP1 SWAP4 SSTORE SWAP3 MLOAD DUP5 DUP2 MSTORE SWAP4 SWAP5 POP SWAP1 SWAP3 PUSH32 0xADB31808E993E3FDB94E6CB53CD5613030FBCAF5D5491B9A181A3D495995135B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x653 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206E6577206F776E6572206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2 SWAP1 PUSH2 0xB82 JUMP JUMPDEST PUSH2 0x754 PUSH2 0x926 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C6F74746572792061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x816 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F747465727920686173206E6F7420656E6465642079657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 ADD SLOAD GT PUSH2 0x85C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F207061727469636970616E7473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x77C36747 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xEF86CE8E SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH2 0x653 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x91C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8FE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98C DUP3 DUP5 PUSH2 0xBC8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98C DUP3 DUP5 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x10D2 DUP1 PUSH2 0xC00 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x98F JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xABF JUMPI PUSH2 0xAAC DUP4 DUP6 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0x80 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xA6D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xABF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB00 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xB7B JUMPI PUSH2 0xB7B PUSH2 0xB51 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E20706572666F726D207468697320 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x30B1BA34B7B7 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE2 PUSH2 0xB51 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBFA JUMPI PUSH2 0xBFA PUSH2 0xB51 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x16345785D8A0000 PUSH1 0x2 SSTORE PUSH2 0x1F4 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10D2 CODESIZE SUB DUP1 PUSH2 0x10D2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x41 SWAP2 PUSH2 0xCE JUMP JUMPDEST PUSH2 0x4A CALLER PUSH2 0x7E JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFC5 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDFBF53AE GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xEFBE1C1C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEFBE1C1C EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF00F6921 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xF7D978A2 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xEF86CE8E EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xEFA1C482 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xEFB98BCF EQ PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x481C6A75 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x89FDFD05 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x95805DAD EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72EA61C EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xD683DD9 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0xDED5DCF EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x15C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xD54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x340 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x1B6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x384 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x1B6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x463 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x5E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH2 0x77B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x7C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xB46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17E PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0xD7C JUMP JUMPDEST PUSH2 0xB70 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0x353 JUMPI POP PUSH1 0x1 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x375 JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x373 JUMPI PUSH2 0x373 PUSH2 0xD3E JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x382 JUMPI PUSH2 0x382 PUSH2 0x7C4 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x38C PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x382 PUSH1 0x0 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x39E PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3B8 PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x3DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x54696D65206475726174696F6E206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x616E203 PUSH1 0xE4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x45C PUSH2 0x455 DUP4 PUSH1 0x3C PUSH2 0xC77 JUMP JUMPDEST TIMESTAMP SWAP1 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x4 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x47C JUMPI PUSH2 0x47C PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x131BDD1D195C9E481B9BDD081CDD185C9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x2 SLOAD CALLVALUE LT ISZERO PUSH2 0x505 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x456E74727920666565206973206C657373 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x2A34B6B29034B9903AB817 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x54D CALLER PUSH2 0xC96 JUMP JUMPDEST ISZERO PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752061726520616C72656164792061207061727469636970616E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x382 PUSH2 0x340 JUMP JUMPDEST PUSH2 0x5EB PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x605 JUMPI PUSH2 0x605 PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2072656D61696E696E672066756E647320746F2077697468647261770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6F8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x71B JUMPI PUSH2 0x71B PUSH2 0xE51 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x74B JUMPI PUSH2 0x74B PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x76D DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6FE JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x796 PUSH2 0xD3E JUMP JUMPDEST EQ ISZERO PUSH2 0x7BE JUMPI TIMESTAMP PUSH1 0x4 SLOAD GT PUSH2 0x7AB JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x7B9 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0xD3E JUMP JUMPDEST EQ PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP1 PUSH2 0xE0B JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SLOAD GT ISZERO PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F7420656E6420746865206C6F7474657279206265666F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65207468652074696D65 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F207061727469636970616E7473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x8CA SWAP2 DIFFICULTY SWAP2 TIMESTAMP SWAP2 CALLER SWAP1 PUSH1 0x20 ADD PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x902 JUMPI PUSH2 0x902 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x6 SLOAD SELFBALANCE SWAP2 SWAP1 PUSH2 0x94B SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x945 SWAP1 DUP6 SWAP1 PUSH2 0xC77 JUMP JUMPDEST SWAP1 PUSH2 0xD00 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x959 DUP3 DUP5 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x9A1 PUSH1 0x1 PUSH1 0x0 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x3CF1AF53E79884A92609CE59DB1EC9F584D88E2D14C8EABA43A21DB81318301E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xC2BB3206848157E57E737EEC7E141F06F5DE585E2F1C0F0EC60A04F45A2C0031 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 DUP6 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D697373696F6E20626173697320706F696E74732063616E6E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x78636565642031303025 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xAD5 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0xB43 DUP2 PUSH2 0xC27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xB78 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E74727920666565206D7573742062652067726561746572207468616E2030 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xCF7 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCC1 JUMPI PUSH2 0xCC1 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xCE5 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xCEF DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC9A JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC83 DUP3 DUP5 PUSH2 0xF7B JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB43 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xD3A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD26 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xD76 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDD6 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDB1 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206C6F747465727920737461747573 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE67 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xEAA JUMPI PUSH2 0xEAA PUSH2 0xE67 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP6 DUP2 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD DUP6 SLOAD DUP7 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEF1 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xECC JUMP JUMPDEST POP POP POP PUSH1 0x60 SWAP5 SWAP1 SWAP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 MSTORE POP POP PUSH1 0x14 SWAP1 SWAP2 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF3F JUMPI PUSH2 0xF3F PUSH2 0xF1A JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF5E JUMPI PUSH2 0xF5E PUSH2 0xE67 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xF76 JUMPI PUSH2 0xF76 PUSH2 0xE67 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF8A JUMPI PUSH2 0xF8A PUSH2 0xF1A JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xEE BASEFEE SWAP15 SWAP1 0xA8 SWAP4 GAS SWAP6 OR 0x24 CALLDATALOAD 0xB4 0x1F SSTORE KECCAK256 0x5F CREATE2 0xB9 0x2C SELFBALANCE PUSH15 0xEC67044BB936A25D680B64736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER ADD PUSH15 0x41317123AAE96193903EE2D11878E8 0xEB ADD LT PUSH30 0x946556C143BE94B0325C64736F6C634300080A0033000000000000000000 ","sourceMap":"203:3973:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4139:28:5;;-1:-1:-1;;;4139:28:5;;216:2:6;4139:28:5;;;198:21:6;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:6;;;267:48;332:18;;4139:28:5;;;;;;;;2082:160;;;;;;;;;;-1:-1:-1;2082:160:5;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2382:465;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;427:55::-;;;;;;;;;;-1:-1:-1;427:55:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;427:55:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;2263:15:6;;;2245:34;;2315:15;;;;2310:2;2295:18;;2288:43;2347:18;;;2340:34;2405:2;2390:18;;2383:34;2194:3;2179:19;427:55:5;1961:462:6;538:20:5;;;;;;;;;;-1:-1:-1;538:20:5;;;;-1:-1:-1;;;;;538:20:5;;;;;;-1:-1:-1;;;;;2592:32:6;;;2574:51;;2562:2;2547:18;538:20:5;2428:203:6;991:614:5;;;;;;;;;;-1:-1:-1;991:614:5;;;;;:::i;:::-;;:::i;:::-;;1744:126;;;;;;;;;;-1:-1:-1;1829:27:5;:34;1744:126;;2967:25:6;;;2955:2;2940:18;1744:126:5;2821:177:6;488:44:5;;;;;;;;;;-1:-1:-1;488:44:5;;;;;:::i;:::-;;:::i;3854:164::-;;;;;;;;;;-1:-1:-1;3854:164:5;;;;;:::i;:::-;;:::i;3273:447::-;;;;;;;;;;-1:-1:-1;3273:447:5;;;;;:::i;:::-;;:::i;2992:116::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2082:160::-;2165:18;;:::i;:::-;-1:-1:-1;;;;;;2202:33:5;;;;;;;:16;:33;;;;;;;;;2195:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:160::o;2382:465::-;2554:27;:34;2443:20;;2475:46;;2524:65;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2475:114;;2604:9;2599:212;2623:27;:34;2619:38;;2599:212;;;2678:23;2704:27;2732:1;2704:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2704:30:5;;;2767:33;;;2704:30;2767:33;;;;;;;;2748:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:16;;2704:30;;-1:-1:-1;2748:52:5;:13;;2762:1;;2748:16;;;;;;:::i;:::-;;;;;;:52;;;;2664:147;2659:3;;;;;:::i;:::-;;;;2599:212;;;-1:-1:-1;2827:13:5;2382:465;-1:-1:-1;2382:465:5:o;991:614::-;719:5;;-1:-1:-1;;;;;719:5:5;705:10;:19;697:70;;;;-1:-1:-1;;;697:70:5;;;;;;;:::i;:::-;2261:21:1::1;:19;:21::i;:::-;1105:1:5::2;1088:14;:18;1080:62;;;::::0;-1:-1:-1;;;1080:62:5;;4811:2:6;1080:62:5::2;::::0;::::2;4793:21:6::0;4850:2;4830:18;;;4823:30;4889:33;4869:18;;;4862:61;4940:18;;1080:62:5::2;4609:355:6::0;1080:62:5::2;1153:18;1186:10;1174:23;;;;;:::i;:::-;-1:-1:-1::0;;;;;2592:32:6;;;2574:51;;2562:2;2547:18;1174:23:5::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;1207:32:5::2;::::0;-1:-1:-1;;;1207:32:5;;::::2;::::0;::::2;2967:25:6::0;;;1153:44:5;;-1:-1:-1;;;;;;1207:16:5;::::2;::::0;::::2;::::0;2940:18:6;;1207:32:5::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1250:15;1268:43;1288:22;1307:2;1288:14;:18;;:22;;;;:::i;:::-;1268:15;::::0;:19:::2;:43::i;:::-;1362:100;::::0;;::::2;::::0;::::2;::::0;;-1:-1:-1;;;;;1362:100:5;;::::2;::::0;;;1414:10:::2;1362:100;::::0;;::::2;::::0;;;;;;;;;-1:-1:-1;1362:100:5;;;;;;1322:37;;;:16:::2;:37:::0;;;;;;:140;;;;;;::::2;-1:-1:-1::0;;;;;;1322:140:5;;::::2;;::::0;;;;;;::::2;::::0;;;;;::::2;::::0;;::::2;;::::0;;;;;::::2;::::0;;::::2;::::0;;;;;;::::2;::::0;;::::2;::::0;;;;1473:53;;;;::::2;::::0;;;;;;;;::::2;::::0;;;;::::2;::::0;::::2;::::0;;;1542:56;;2967:25:6;;;1362:100:5;;-1:-1:-1;1414:10:5;;1542:56:::2;::::0;2940:18:6;1542:56:5::2;;;;;;;1070:535;;2303:20:1::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;991:614:5::0;:::o;488:44::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;488:44:5;;-1:-1:-1;488:44:5;:::o;3854:164::-;719:5;;-1:-1:-1;;;;;719:5:5;705:10;:19;697:70;;;;-1:-1:-1;;;697:70:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;3931:23:5;::::1;3923:61;;;::::0;-1:-1:-1;;;3923:61:5;;5171:2:6;3923:61:5::1;::::0;::::1;5153:21:6::0;5210:2;5190:18;;;5183:30;5249:27;5229:18;;;5222:55;5294:18;;3923:61:5::1;4969:349:6::0;3923:61:5::1;3994:5;:17:::0;;-1:-1:-1;;;;;;3994:17:5::1;-1:-1:-1::0;;;;;3994:17:5;;;::::1;::::0;;;::::1;::::0;;3854:164::o;3273:447::-;719:5;;-1:-1:-1;;;;;719:5:5;705:10;:19;697:70;;;;-1:-1:-1;;;697:70:5;;;;;;;:::i;:::-;2261:21:1::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;3380:29:5;::::2;3372:65;;;::::0;-1:-1:-1;;;3372:65:5;;5525:2:6;3372:65:5::2;::::0;::::2;5507:21:6::0;5564:2;5544:18;;;5537:30;5603:25;5583:18;;;5576:53;5646:18;;3372:65:5::2;5323:347:6::0;3372:65:5::2;-1:-1:-1::0;;;;;3477:33:5;::::2;3447:27;3477:33:::0;;;:16:::2;:33;::::0;;;;3528:15:::2;::::0;::::2;::::0;3547::::2;-1:-1:-1::0;3528:34:5::2;3520:72;;;::::0;-1:-1:-1;;;3520:72:5;;5877:2:6;3520:72:5::2;::::0;::::2;5859:21:6::0;5916:2;5896:18;;;5889:30;5955:27;5935:18;;;5928:55;6000:18;;3520:72:5::2;5675:349:6::0;3520:72:5::2;3633:1;3610:7;:20;;;:24;3602:52;;;::::0;-1:-1:-1;;;3602:52:5;;6231:2:6;3602:52:5::2;::::0;::::2;6213:21:6::0;6270:2;6250:18;;;6243:30;-1:-1:-1;;;6289:18:6;;;6282:45;6344:18;;3602:52:5::2;6029:339:6::0;3602:52:5::2;3665:23:::0;;:48:::2;::::0;;-1:-1:-1;;;3665:48:5;;;;-1:-1:-1;;;;;3665:23:5;;::::2;::::0;:46:::2;::::0;:48:::2;::::0;;::::2;::::0;:23:::2;::::0;:48;;;;;;;;:23;;:48;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;3362:358;2303:20:1::1;1716:1:::0;2809:7;:22;2629:209;2992:116:5;3039:16;3074:27;3067:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3067:34:5;;;;;;;;;;;;;;;;;;;;;;;2992:116;:::o;2336:287:1:-;1759:1;2468:7;;:19;;2460:63;;;;-1:-1:-1;;;2460:63:1;;6575:2:6;2460:63:1;;;6557:21:6;6614:2;6594:18;;;6587:30;6653:33;6633:18;;;6626:61;6704:18;;2460:63:1;6373:355:6;2460:63:1;1759:1;2598:7;:18;2336:287::o;3465:96:3:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;;3465:96;;;;;:::o;2755:::-;2813:7;2839:5;2843:1;2839;:5;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;361:286:6:-;420:6;473:2;461:9;452:7;448:23;444:32;441:52;;;489:1;486;479:12;441:52;515:23;;-1:-1:-1;;;;;567:31:6;;557:42;;547:70;;613:1;610;603:12;547:70;636:5;361:286;-1:-1:-1;;;361:286:6:o;977:259::-;771:12;;-1:-1:-1;;;;;767:21:6;;;755:34;;842:4;831:16;;;825:23;821:32;;;805:14;;;798:56;903:4;892:16;;;886:23;870:14;;;863:47;959:4;948:16;;;942:23;926:14;;;919:47;1169:3;1154:19;;1182:48;652:320;1241:715;1470:2;1522:21;;;1592:13;;1495:18;;;1614:22;;;1441:4;;1470:2;1693:15;;;;1667:2;1652:18;;;1441:4;1736:194;1750:6;1747:1;1744:13;1736:194;;;1799:49;1844:3;1835:6;1829:13;771:12;;-1:-1:-1;;;;;767:21:6;;;755:34;;842:4;831:16;;;825:23;821:32;;;805:14;;;798:56;903:4;892:16;;;886:23;870:14;;;863:47;959:4;948:16;;;942:23;926:14;;919:47;652:320;1799:49;1905:15;;;;1877:4;1868:14;;;;;1772:1;1765:9;1736:194;;;-1:-1:-1;1947:3:6;;1241:715;-1:-1:-1;;;;;;1241:715:6:o;2636:180::-;2695:6;2748:2;2736:9;2727:7;2723:23;2719:32;2716:52;;;2764:1;2761;2754:12;2716:52;-1:-1:-1;2787:23:6;;2636:180;-1:-1:-1;2636:180:6:o;3003:658::-;3174:2;3226:21;;;3296:13;;3199:18;;;3318:22;;;3145:4;;3174:2;3397:15;;;;3371:2;3356:18;;;3145:4;3440:195;3454:6;3451:1;3448:13;3440:195;;;3519:13;;-1:-1:-1;;;;;3515:39:6;3503:52;;3610:15;;;;3575:12;;;;3551:1;3469:9;3440:195;;3666:127;3727:10;3722:3;3718:20;3715:1;3708:31;3758:4;3755:1;3748:15;3782:4;3779:1;3772:15;3798:127;3859:10;3854:3;3850:20;3847:1;3840:31;3890:4;3887:1;3880:15;3914:4;3911:1;3904:15;3930:127;3991:10;3986:3;3982:20;3979:1;3972:31;4022:4;4019:1;4012:15;4046:4;4043:1;4036:15;4062:135;4101:3;-1:-1:-1;;4122:17:6;;4119:43;;;4142:18;;:::i;:::-;-1:-1:-1;4189:1:6;4178:13;;4062:135::o;4202:402::-;4404:2;4386:21;;;4443:2;4423:18;;;4416:30;4482:34;4477:2;4462:18;;4455:62;-1:-1:-1;;;4548:2:6;4533:18;;4526:36;4594:3;4579:19;;4202:402::o;6733:168::-;6773:7;6839:1;6835;6831:6;6827:14;6824:1;6821:21;6816:1;6809:9;6802:17;6798:45;6795:71;;;6846:18;;:::i;:::-;-1:-1:-1;6886:9:6;;6733:168::o;6906:128::-;6946:3;6977:1;6973:6;6970:1;6967:13;6964:39;;;6983:18;;:::i;:::-;-1:-1:-1;7019:9:6;;6906:128::o"},"gasEstimates":{"creation":{"codeDepositCost":"1486200","executionCost":"47896","totalCost":"1534096"},"external":{"":"332","changeOwner(address)":"26755","createLottery(uint256)":"infinite","getLotteries()":"infinite","getLotteryContractDetails(address)":"9291","getLotteryContractsCount()":"2280","getLotteryContractsDetails()":"infinite","lotteriesContractsAddresses(uint256)":"4636","lotteriesMapping(address)":"8994","owner()":"2404","withdrawRemainingFunds(address)":"infinite"}},"methodIdentifiers":{"changeOwner(address)":"a6f9dae1","createLottery(uint256)":"8dd8c56d","getLotteries()":"bcc82ec4","getLotteryContractDetails(address)":"296df292","getLotteryContractsCount()":"98d5abbb","getLotteryContractsDetails()":"386021b5","lotteriesContractsAddresses(uint256)":"a1bbfcee","lotteriesMapping(address)":"59d23279","owner()":"8da5cb5b","withdrawRemainingFunds(address)":"b3b5a9c9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lotteryAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"LotteryCreated\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeInMinutes\",\"type\":\"uint256\"}],\"name\":\"createLottery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lotteryAddress\",\"type\":\"address\"}],\"name\":\"getLotteryContractDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"contract Lottery\",\"name\":\"lotteryContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPlayers\",\"type\":\"uint256\"}],\"internalType\":\"struct LotteryPool.LotteryInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteryContractsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLotteryContractsDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"contract Lottery\",\"name\":\"lotteryContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPlayers\",\"type\":\"uint256\"}],\"internalType\":\"struct LotteryPool.LotteryInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lotteriesContractsAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lotteriesMapping\",\"outputs\":[{\"internalType\":\"contract Lottery\",\"name\":\"lotteryContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPlayers\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lotteryAddress\",\"type\":\"address\"}],\"name\":\"withdrawRemainingFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"changeOwner(address)\":{\"details\":\"Change the owner of the LotteryPool contract.\",\"params\":{\"_newOwner\":\"The address of the new owner.\"}},\"createLottery(uint256)\":{\"details\":\"Create a new lottery with a specified duration.\",\"params\":{\"_timeInMinutes\":\"The duration of the lottery in minutes.\"}},\"getLotteries()\":{\"details\":\"Get the addresses of all lottery contracts in the pool.\",\"returns\":{\"_0\":\"An array of lottery contract addresses.\"}},\"getLotteryContractDetails(address)\":{\"details\":\"Get details of a specific lottery contract.\",\"params\":{\"_lotteryAddress\":\"The address of the lottery contract.\"},\"returns\":{\"_0\":\"LotteryInfo struct containing contract information.\"}},\"getLotteryContractsCount()\":{\"details\":\"Get the number of lottery contracts created in the pool.\",\"returns\":{\"_0\":\"The number of lottery contracts.\"}},\"getLotteryContractsDetails()\":{\"details\":\"Get details of a all lottery contract.\",\"returns\":{\"_0\":\"LotteryInfo struct containing contract information.\"}},\"withdrawRemainingFunds(address)\":{\"details\":\"Withdraw remaining funds from a lottery contract after it ends.\",\"params\":{\"_lotteryAddress\":\"The address of the lottery contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LotteryPool.sol\":\"LotteryPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\"},\"contracts/Lottery.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\ncontract Lottery is Ownable {\\n    using SafeMath for uint256;\\n\\n    address[] public players;\\n    uint256 public entryFee = 0.1 ether;\\n    address public winner;\\n    uint256 public endTime;\\n    address public manager;\\n    uint256 public commissionBasisPoints = 500;\\n\\n    event WinnerDeclared(address winner, uint256 winningPrize);\\n    event CommissionWithdrawn(uint256 amount);\\n\\n    enum LotteryStatus {\\n        NOT_STARTED,\\n        STARTED,\\n        ENDED\\n    }\\n\\n    LotteryStatus public lotteryStatus;\\n\\n    modifier onlyInStatus(LotteryStatus _status) {\\n        require(lotteryStatus == _status, \\\"Invalid lottery status\\\");\\n        _;\\n    }\\n\\n    modifier nonReentrant() {\\n        require(lotteryStatus == LotteryStatus.STARTED, \\\"Lottery not started\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Constructor function to initialize the lottery contract.\\n     */\\n    constructor(address _manager) {\\n        lotteryStatus = LotteryStatus.ENDED;\\n        manager = _manager;\\n    }\\n\\n    /**\\n     * @dev Get the remaining time until the lottery ends.\\n     * @return The remaining time in seconds.\\n     */\\n    function getRemainingTime() public view returns (uint256) {\\n        if (lotteryStatus == LotteryStatus.STARTED) {\\n            if (endTime <= block.timestamp) {\\n                return 0;\\n            }\\n            return endTime - block.timestamp;\\n        }\\n        return 0;\\n    }\\n\\n    /**\\n     * @dev Get details of a all players.\\n     * @return address[] containing players.\\n     */\\n    function getAllPlayers() external view returns (address[] memory) {\\n        address[] memory _players = new address[](players.length);\\n        for (uint256 i = 0; i < players.length; i++) {\\n            _players[i] = players[i];\\n        }\\n        return _players;\\n    }\\n\\n    /**\\n     * @dev Start the lottery with a specified duration.\\n     * @param _timeInMinutes The duration of the lottery in minutes.\\n     */\\n    function start(uint256 _timeInMinutes) public onlyOwner onlyInStatus(LotteryStatus.ENDED) {\\n        require(_timeInMinutes > 0, \\\"Time duration must be greater than 0\\\");\\n        lotteryStatus = LotteryStatus.STARTED;\\n        endTime = block.timestamp.add(_timeInMinutes.mul(60));\\n    }\\n\\n    /**\\n     * @dev End the lottery and select a random winner.\\n     */\\n    function end() public onlyInStatus(LotteryStatus.STARTED) {\\n        require(endTime <= block.timestamp, \\\"You cannot end the lottery before the time\\\");\\n        require(players.length > 0, \\\"No participants\\\");\\n        lotteryStatus = LotteryStatus.ENDED;\\n\\n        uint256 winnerIndex = uint256(keccak256(abi.encodePacked(block.difficulty, block.timestamp, players, msg.sender))) % players.length;\\n        winner = players[winnerIndex];\\n        uint256 prizeMoney = address(this).balance;\\n        uint256 commission = (prizeMoney.mul(commissionBasisPoints)).div(10_000); // Calculate commission using basis points\\n        uint256 remainingPrize = prizeMoney - commission;\\n\\n        payable(winner).transfer(remainingPrize);\\n\\n        delete players;\\n\\n        emit WinnerDeclared(winner, remainingPrize);\\n        emit CommissionWithdrawn(commission);\\n\\n        // Send commission to owner\\n        payable(owner()).transfer(commission);\\n    }\\n\\n    /**\\n     * @dev End the lottery if blocktime >= endTime\\n     */\\n    function closeIfEnded() public {\\n        if (endTime <= block.timestamp && players.length > 0 && lotteryStatus == LotteryStatus.STARTED) {\\n            end();\\n        }\\n    }\\n\\n    /**\\n     * @dev Enter the lottery by sending an entry fee.\\n     */\\n    function enter() public payable nonReentrant {\\n        require(msg.value >= entryFee, \\\"Entry fee is less\\\");\\n        require(endTime > block.timestamp, \\\"Time is up.\\\");\\n        require(!isParticipating(msg.sender), \\\"You are already a participant\\\");\\n        players.push(msg.sender);\\n\\n        closeIfEnded();\\n    }\\n\\n    /**\\n     * @dev Check if a participant has already entered the lottery.\\n     * @param _participant The participant's address to check.\\n     * @return A boolean indicating whether the participant has entered.\\n     */\\n    function isParticipating(address _participant) private view returns (bool) {\\n        for (uint256 i = 0; i < players.length; i++) {\\n            if (players[i] == _participant) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to withdraw any remaining funds after the lottery ends.\\n     */\\n    function withdrawRemainingFunds() public onlyOwner onlyInStatus(LotteryStatus.ENDED) {\\n        uint256 remainingBalance = address(this).balance;\\n        require(remainingBalance > 0, \\\"No remaining funds to withdraw\\\");\\n        payable(owner()).transfer(remainingBalance);\\n    }\\n\\n    /**\\n     * @dev Change the entry fee for participating in the lottery.\\n     * @param _newFee The new entry fee in wei.\\n     */\\n    function changeEntryFee(uint256 _newFee) public onlyOwner {\\n        require(_newFee > 0, \\\"Entry fee must be greater than 0\\\");\\n        entryFee = _newFee;\\n    }\\n\\n    /**\\n     * @dev Set the commission basis points.\\n     * @param _basisPoints The new commission basis points.\\n     */\\n    function setCommissionBasisPoints(uint256 _basisPoints) public onlyOwner {\\n        require(_basisPoints <= 10_000, \\\"Commission basis points cannot exceed 100%\\\");\\n        commissionBasisPoints = _basisPoints;\\n    }\\n}\\n\",\"keccak256\":\"0xbae2b79cfb50c74b98d7591c690e4acae6234e8b6972f05869a8750c54e27251\",\"license\":\"MIT\"},\"contracts/LotteryPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Lottery.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ncontract LotteryPool is ReentrancyGuard {\\n    using SafeMath for uint256;\\n\\n    struct LotteryInfo {\\n        Lottery lotteryContract;\\n        address manager;\\n        uint256 endTime;\\n        uint256 totalPlayers;\\n    }\\n\\n    mapping(address => LotteryInfo) public lotteriesMapping;\\n    address[] public lotteriesContractsAddresses;\\n    address public owner;\\n\\n    event LotteryCreated(address indexed lotteryAddress, address indexed manager, uint256 endTime);\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Only the owner can perform this action\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n     * @dev Create a new lottery with a specified duration.\\n     * @param _timeInMinutes The duration of the lottery in minutes.\\n     */\\n    function createLottery(uint256 _timeInMinutes) external onlyOwner nonReentrant {\\n        require(_timeInMinutes > 0, \\\"Duration must be greater than 0\\\");\\n\\n        Lottery newLottery = new Lottery(msg.sender);\\n        newLottery.start(_timeInMinutes);\\n\\n        uint256 endTime = block.timestamp.add(_timeInMinutes.mul(60));\\n\\n        lotteriesMapping[address(newLottery)] = LotteryInfo({ lotteryContract: newLottery, manager: msg.sender, endTime: endTime, totalPlayers: 0 });\\n\\n        lotteriesContractsAddresses.push(address(newLottery));\\n\\n        emit LotteryCreated(address(newLottery), msg.sender, endTime);\\n    }\\n\\n    /**\\n     * @dev Get the number of lottery contracts created in the pool.\\n     * @return The number of lottery contracts.\\n     */\\n    function getLotteryContractsCount() external view returns (uint256) {\\n        return lotteriesContractsAddresses.length;\\n    }\\n\\n    /**\\n     * @dev Get details of a specific lottery contract.\\n     * @param _lotteryAddress The address of the lottery contract.\\n     * @return LotteryInfo struct containing contract information.\\n     */\\n    function getLotteryContractDetails(address _lotteryAddress) external view returns (LotteryInfo memory) {\\n        return lotteriesMapping[_lotteryAddress];\\n    }\\n\\n    /**\\n     * @dev Get details of a all lottery contract.\\n     * @return LotteryInfo struct containing contract information.\\n     */\\n    function getLotteryContractsDetails() external view returns (LotteryInfo[] memory) {\\n        LotteryPool.LotteryInfo[] memory _lotteryInfos = new LotteryPool.LotteryInfo[](lotteriesContractsAddresses.length);\\n        for (uint256 i = 0; i < lotteriesContractsAddresses.length; i++) {\\n            address _lotteryAddress = lotteriesContractsAddresses[i];\\n            _lotteryInfos[i] = lotteriesMapping[_lotteryAddress];\\n        }\\n        return _lotteryInfos;\\n    }\\n\\n    /**\\n     * @dev Get the addresses of all lottery contracts in the pool.\\n     * @return An array of lottery contract addresses.\\n     */\\n    function getLotteries() external view returns (address[] memory) {\\n        return lotteriesContractsAddresses;\\n    }\\n\\n    /**\\n     * @dev Withdraw remaining funds from a lottery contract after it ends.\\n     * @param _lotteryAddress The address of the lottery contract.\\n     */\\n    function withdrawRemainingFunds(address _lotteryAddress) external onlyOwner nonReentrant {\\n        require(_lotteryAddress != address(0), \\\"Invalid lottery address\\\");\\n        LotteryInfo storage lottery = lotteriesMapping[_lotteryAddress];\\n        require(lottery.endTime <= block.timestamp, \\\"Lottery has not ended yet\\\");\\n        require(lottery.totalPlayers > 0, \\\"No participants\\\");\\n\\n        lottery.lotteryContract.withdrawRemainingFunds();\\n    }\\n\\n    /**\\n     * @dev Change the owner of the LotteryPool contract.\\n     * @param _newOwner The address of the new owner.\\n     */\\n    function changeOwner(address _newOwner) external onlyOwner {\\n        require(_newOwner != address(0), \\\"Invalid new owner address\\\");\\n        owner = _newOwner;\\n    }\\n\\n    receive() external payable {}\\n\\n    // Fallback function to reject incoming Ether\\n    fallback() external {\\n        revert(\\\"Ether not accepted\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x81d740301ffd779b307555f98013b37174f710bf2f40b99b14d40c3a34dc5c04\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":123,"contract":"contracts/LotteryPool.sol:LotteryPool","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":1012,"contract":"contracts/LotteryPool.sol:LotteryPool","label":"lotteriesMapping","offset":0,"slot":"1","type":"t_mapping(t_address,t_struct(LotteryInfo)1007_storage)"},{"astId":1015,"contract":"contracts/LotteryPool.sol:LotteryPool","label":"lotteriesContractsAddresses","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"},{"astId":1017,"contract":"contracts/LotteryPool.sol:LotteryPool","label":"owner","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_contract(Lottery)987":{"encoding":"inplace","label":"contract Lottery","numberOfBytes":"20"},"t_mapping(t_address,t_struct(LotteryInfo)1007_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct LotteryPool.LotteryInfo)","numberOfBytes":"32","value":"t_struct(LotteryInfo)1007_storage"},"t_struct(LotteryInfo)1007_storage":{"encoding":"inplace","label":"struct LotteryPool.LotteryInfo","members":[{"astId":1000,"contract":"contracts/LotteryPool.sol:LotteryPool","label":"lotteryContract","offset":0,"slot":"0","type":"t_contract(Lottery)987"},{"astId":1002,"contract":"contracts/LotteryPool.sol:LotteryPool","label":"manager","offset":0,"slot":"1","type":"t_address"},{"astId":1004,"contract":"contracts/LotteryPool.sol:LotteryPool","label":"endTime","offset":0,"slot":"2","type":"t_uint256"},{"astId":1006,"contract":"contracts/LotteryPool.sol:LotteryPool","label":"totalPlayers","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}